/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "maxY": 14606.0, "series": [{"data": [[0.0, 2.0], [0.1, 3.0], [0.2, 3.0], [0.3, 3.0], [0.4, 4.0], [0.5, 4.0], [0.6, 4.0], [0.7, 4.0], [0.8, 4.0], [0.9, 4.0], [1.0, 4.0], [1.1, 4.0], [1.2, 4.0], [1.3, 4.0], [1.4, 4.0], [1.5, 4.0], [1.6, 5.0], [1.7, 5.0], [1.8, 5.0], [1.9, 5.0], [2.0, 5.0], [2.1, 5.0], [2.2, 5.0], [2.3, 5.0], [2.4, 5.0], [2.5, 5.0], [2.6, 5.0], [2.7, 5.0], [2.8, 5.0], [2.9, 5.0], [3.0, 5.0], [3.1, 6.0], [3.2, 6.0], [3.3, 6.0], [3.4, 6.0], [3.5, 6.0], [3.6, 6.0], [3.7, 6.0], [3.8, 6.0], [3.9, 6.0], [4.0, 6.0], [4.1, 6.0], [4.2, 6.0], [4.3, 7.0], [4.4, 7.0], [4.5, 7.0], [4.6, 7.0], [4.7, 7.0], [4.8, 7.0], [4.9, 7.0], [5.0, 8.0], [5.1, 8.0], [5.2, 8.0], [5.3, 8.0], [5.4, 8.0], [5.5, 8.0], [5.6, 9.0], [5.7, 9.0], [5.8, 9.0], [5.9, 9.0], [6.0, 9.0], [6.1, 9.0], [6.2, 10.0], [6.3, 10.0], [6.4, 10.0], [6.5, 10.0], [6.6, 10.0], [6.7, 11.0], [6.8, 11.0], [6.9, 11.0], [7.0, 11.0], [7.1, 12.0], [7.2, 12.0], [7.3, 12.0], [7.4, 12.0], [7.5, 13.0], [7.6, 13.0], [7.7, 13.0], [7.8, 14.0], [7.9, 14.0], [8.0, 14.0], [8.1, 15.0], [8.2, 15.0], [8.3, 15.0], [8.4, 16.0], [8.5, 16.0], [8.6, 17.0], [8.7, 17.0], [8.8, 18.0], [8.9, 18.0], [9.0, 19.0], [9.1, 20.0], [9.2, 20.0], [9.3, 21.0], [9.4, 21.0], [9.5, 22.0], [9.6, 23.0], [9.7, 24.0], [9.8, 25.0], [9.9, 26.0], [10.0, 27.0], [10.1, 28.0], [10.2, 30.0], [10.3, 32.0], [10.4, 33.0], [10.5, 35.0], [10.6, 37.0], [10.7, 39.0], [10.8, 42.0], [10.9, 44.0], [11.0, 47.0], [11.1, 49.0], [11.2, 52.0], [11.3, 55.0], [11.4, 57.0], [11.5, 60.0], [11.6, 63.0], [11.7, 65.0], [11.8, 68.0], [11.9, 71.0], [12.0, 73.0], [12.1, 76.0], [12.2, 79.0], [12.3, 82.0], [12.4, 85.0], [12.5, 88.0], [12.6, 91.0], [12.7, 93.0], [12.8, 96.0], [12.9, 99.0], [13.0, 102.0], [13.1, 105.0], [13.2, 108.0], [13.3, 111.0], [13.4, 114.0], [13.5, 117.0], [13.6, 121.0], [13.7, 124.0], [13.8, 126.0], [13.9, 129.0], [14.0, 131.0], [14.1, 133.0], [14.2, 136.0], [14.3, 140.0], [14.4, 142.0], [14.5, 145.0], [14.6, 147.0], [14.7, 150.0], [14.8, 153.0], [14.9, 155.0], [15.0, 158.0], [15.1, 161.0], [15.2, 164.0], [15.3, 167.0], [15.4, 171.0], [15.5, 175.0], [15.6, 178.0], [15.7, 182.0], [15.8, 184.0], [15.9, 186.0], [16.0, 188.0], [16.1, 191.0], [16.2, 194.0], [16.3, 197.0], [16.4, 200.0], [16.5, 203.0], [16.6, 205.0], [16.7, 208.0], [16.8, 211.0], [16.9, 214.0], [17.0, 216.0], [17.1, 218.0], [17.2, 221.0], [17.3, 223.0], [17.4, 226.0], [17.5, 230.0], [17.6, 234.0], [17.7, 237.0], [17.8, 241.0], [17.9, 248.0], [18.0, 251.0], [18.1, 254.0], [18.2, 258.0], [18.3, 261.0], [18.4, 264.0], [18.5, 266.0], [18.6, 268.0], [18.7, 271.0], [18.8, 273.0], [18.9, 275.0], [19.0, 277.0], [19.1, 280.0], [19.2, 283.0], [19.3, 285.0], [19.4, 287.0], [19.5, 289.0], [19.6, 291.0], [19.7, 293.0], [19.8, 296.0], [19.9, 299.0], [20.0, 303.0], [20.1, 305.0], [20.2, 308.0], [20.3, 311.0], [20.4, 315.0], [20.5, 319.0], [20.6, 322.0], [20.7, 324.0], [20.8, 327.0], [20.9, 329.0], [21.0, 331.0], [21.1, 334.0], [21.2, 337.0], [21.3, 339.0], [21.4, 342.0], [21.5, 345.0], [21.6, 348.0], [21.7, 351.0], [21.8, 353.0], [21.9, 356.0], [22.0, 358.0], [22.1, 361.0], [22.2, 364.0], [22.3, 368.0], [22.4, 371.0], [22.5, 375.0], [22.6, 377.0], [22.7, 379.0], [22.8, 380.0], [22.9, 382.0], [23.0, 384.0], [23.1, 387.0], [23.2, 389.0], [23.3, 391.0], [23.4, 394.0], [23.5, 396.0], [23.6, 398.0], [23.7, 400.0], [23.8, 403.0], [23.9, 404.0], [24.0, 405.0], [24.1, 407.0], [24.2, 409.0], [24.3, 411.0], [24.4, 413.0], [24.5, 415.0], [24.6, 417.0], [24.7, 419.0], [24.8, 421.0], [24.9, 422.0], [25.0, 425.0], [25.1, 426.0], [25.2, 428.0], [25.3, 430.0], [25.4, 431.0], [25.5, 434.0], [25.6, 437.0], [25.7, 439.0], [25.8, 442.0], [25.9, 445.0], [26.0, 446.0], [26.1, 448.0], [26.2, 450.0], [26.3, 451.0], [26.4, 454.0], [26.5, 457.0], [26.6, 458.0], [26.7, 460.0], [26.8, 463.0], [26.9, 465.0], [27.0, 467.0], [27.1, 470.0], [27.2, 471.0], [27.3, 472.0], [27.4, 474.0], [27.5, 475.0], [27.6, 477.0], [27.7, 480.0], [27.8, 482.0], [27.9, 485.0], [28.0, 487.0], [28.1, 488.0], [28.2, 490.0], [28.3, 492.0], [28.4, 494.0], [28.5, 497.0], [28.6, 498.0], [28.7, 501.0], [28.8, 503.0], [28.9, 504.0], [29.0, 508.0], [29.1, 511.0], [29.2, 514.0], [29.3, 517.0], [29.4, 520.0], [29.5, 525.0], [29.6, 528.0], [29.7, 531.0], [29.8, 533.0], [29.9, 535.0], [30.0, 537.0], [30.1, 539.0], [30.2, 542.0], [30.3, 545.0], [30.4, 548.0], [30.5, 550.0], [30.6, 551.0], [30.7, 553.0], [30.8, 556.0], [30.9, 558.0], [31.0, 560.0], [31.1, 562.0], [31.2, 565.0], [31.3, 567.0], [31.4, 569.0], [31.5, 571.0], [31.6, 573.0], [31.7, 575.0], [31.8, 578.0], [31.9, 582.0], [32.0, 586.0], [32.1, 590.0], [32.2, 592.0], [32.3, 595.0], [32.4, 598.0], [32.5, 600.0], [32.6, 602.0], [32.7, 604.0], [32.8, 606.0], [32.9, 608.0], [33.0, 610.0], [33.1, 613.0], [33.2, 615.0], [33.3, 618.0], [33.4, 619.0], [33.5, 621.0], [33.6, 623.0], [33.7, 624.0], [33.8, 626.0], [33.9, 628.0], [34.0, 630.0], [34.1, 633.0], [34.2, 636.0], [34.3, 638.0], [34.4, 640.0], [34.5, 642.0], [34.6, 644.0], [34.7, 646.0], [34.8, 649.0], [34.9, 652.0], [35.0, 654.0], [35.1, 657.0], [35.2, 659.0], [35.3, 661.0], [35.4, 663.0], [35.5, 666.0], [35.6, 667.0], [35.7, 669.0], [35.8, 671.0], [35.9, 673.0], [36.0, 675.0], [36.1, 676.0], [36.2, 677.0], [36.3, 679.0], [36.4, 681.0], [36.5, 683.0], [36.6, 685.0], [36.7, 686.0], [36.8, 688.0], [36.9, 690.0], [37.0, 692.0], [37.1, 694.0], [37.2, 696.0], [37.3, 699.0], [37.4, 702.0], [37.5, 704.0], [37.6, 707.0], [37.7, 710.0], [37.8, 713.0], [37.9, 716.0], [38.0, 719.0], [38.1, 721.0], [38.2, 723.0], [38.3, 727.0], [38.4, 731.0], [38.5, 732.0], [38.6, 734.0], [38.7, 737.0], [38.8, 739.0], [38.9, 740.0], [39.0, 742.0], [39.1, 744.0], [39.2, 746.0], [39.3, 749.0], [39.4, 751.0], [39.5, 755.0], [39.6, 758.0], [39.7, 760.0], [39.8, 762.0], [39.9, 763.0], [40.0, 766.0], [40.1, 767.0], [40.2, 768.0], [40.3, 770.0], [40.4, 771.0], [40.5, 773.0], [40.6, 776.0], [40.7, 778.0], [40.8, 780.0], [40.9, 783.0], [41.0, 786.0], [41.1, 789.0], [41.2, 792.0], [41.3, 794.0], [41.4, 797.0], [41.5, 799.0], [41.6, 802.0], [41.7, 803.0], [41.8, 804.0], [41.9, 806.0], [42.0, 807.0], [42.1, 809.0], [42.2, 810.0], [42.3, 812.0], [42.4, 813.0], [42.5, 815.0], [42.6, 817.0], [42.7, 820.0], [42.8, 823.0], [42.9, 826.0], [43.0, 828.0], [43.1, 829.0], [43.2, 831.0], [43.3, 832.0], [43.4, 833.0], [43.5, 835.0], [43.6, 837.0], [43.7, 841.0], [43.8, 844.0], [43.9, 846.0], [44.0, 848.0], [44.1, 850.0], [44.2, 851.0], [44.3, 853.0], [44.4, 854.0], [44.5, 856.0], [44.6, 857.0], [44.7, 858.0], [44.8, 860.0], [44.9, 862.0], [45.0, 864.0], [45.1, 866.0], [45.2, 869.0], [45.3, 871.0], [45.4, 874.0], [45.5, 875.0], [45.6, 877.0], [45.7, 879.0], [45.8, 881.0], [45.9, 885.0], [46.0, 886.0], [46.1, 889.0], [46.2, 892.0], [46.3, 894.0], [46.4, 896.0], [46.5, 898.0], [46.6, 900.0], [46.7, 903.0], [46.8, 905.0], [46.9, 907.0], [47.0, 910.0], [47.1, 913.0], [47.2, 915.0], [47.3, 917.0], [47.4, 918.0], [47.5, 920.0], [47.6, 922.0], [47.7, 924.0], [47.8, 926.0], [47.9, 928.0], [48.0, 930.0], [48.1, 933.0], [48.2, 935.0], [48.3, 938.0], [48.4, 941.0], [48.5, 944.0], [48.6, 947.0], [48.7, 950.0], [48.8, 953.0], [48.9, 956.0], [49.0, 958.0], [49.1, 960.0], [49.2, 962.0], [49.3, 965.0], [49.4, 966.0], [49.5, 967.0], [49.6, 969.0], [49.7, 971.0], [49.8, 972.0], [49.9, 973.0], [50.0, 974.0], [50.1, 975.0], [50.2, 977.0], [50.3, 978.0], [50.4, 979.0], [50.5, 981.0], [50.6, 982.0], [50.7, 983.0], [50.8, 984.0], [50.9, 985.0], [51.0, 987.0], [51.1, 988.0], [51.2, 989.0], [51.3, 991.0], [51.4, 992.0], [51.5, 993.0], [51.6, 995.0], [51.7, 997.0], [51.8, 1000.0], [51.9, 1003.0], [52.0, 1005.0], [52.1, 1007.0], [52.2, 1009.0], [52.3, 1011.0], [52.4, 1013.0], [52.5, 1015.0], [52.6, 1017.0], [52.7, 1018.0], [52.8, 1019.0], [52.9, 1021.0], [53.0, 1022.0], [53.1, 1024.0], [53.2, 1026.0], [53.3, 1028.0], [53.4, 1030.0], [53.5, 1032.0], [53.6, 1034.0], [53.7, 1036.0], [53.8, 1039.0], [53.9, 1041.0], [54.0, 1044.0], [54.1, 1047.0], [54.2, 1049.0], [54.3, 1051.0], [54.4, 1052.0], [54.5, 1054.0], [54.6, 1055.0], [54.7, 1057.0], [54.8, 1058.0], [54.9, 1060.0], [55.0, 1062.0], [55.1, 1064.0], [55.2, 1066.0], [55.3, 1067.0], [55.4, 1069.0], [55.5, 1071.0], [55.6, 1074.0], [55.7, 1076.0], [55.8, 1078.0], [55.9, 1080.0], [56.0, 1081.0], [56.1, 1084.0], [56.2, 1087.0], [56.3, 1090.0], [56.4, 1092.0], [56.5, 1095.0], [56.6, 1097.0], [56.7, 1100.0], [56.8, 1102.0], [56.9, 1105.0], [57.0, 1109.0], [57.1, 1111.0], [57.2, 1115.0], [57.3, 1117.0], [57.4, 1119.0], [57.5, 1121.0], [57.6, 1123.0], [57.7, 1126.0], [57.8, 1128.0], [57.9, 1131.0], [58.0, 1136.0], [58.1, 1138.0], [58.2, 1141.0], [58.3, 1144.0], [58.4, 1147.0], [58.5, 1150.0], [58.6, 1151.0], [58.7, 1154.0], [58.8, 1157.0], [58.9, 1160.0], [59.0, 1163.0], [59.1, 1166.0], [59.2, 1168.0], [59.3, 1171.0], [59.4, 1175.0], [59.5, 1178.0], [59.6, 1181.0], [59.7, 1184.0], [59.8, 1186.0], [59.9, 1189.0], [60.0, 1191.0], [60.1, 1193.0], [60.2, 1196.0], [60.3, 1198.0], [60.4, 1200.0], [60.5, 1203.0], [60.6, 1205.0], [60.7, 1207.0], [60.8, 1209.0], [60.9, 1211.0], [61.0, 1215.0], [61.1, 1218.0], [61.2, 1221.0], [61.3, 1223.0], [61.4, 1225.0], [61.5, 1227.0], [61.6, 1229.0], [61.7, 1231.0], [61.8, 1233.0], [61.9, 1236.0], [62.0, 1238.0], [62.1, 1239.0], [62.2, 1241.0], [62.3, 1243.0], [62.4, 1244.0], [62.5, 1245.0], [62.6, 1247.0], [62.7, 1249.0], [62.8, 1250.0], [62.9, 1253.0], [63.0, 1256.0], [63.1, 1258.0], [63.2, 1261.0], [63.3, 1264.0], [63.4, 1266.0], [63.5, 1267.0], [63.6, 1269.0], [63.7, 1270.0], [63.8, 1272.0], [63.9, 1274.0], [64.0, 1275.0], [64.1, 1277.0], [64.2, 1279.0], [64.3, 1281.0], [64.4, 1283.0], [64.5, 1284.0], [64.6, 1286.0], [64.7, 1289.0], [64.8, 1292.0], [64.9, 1294.0], [65.0, 1297.0], [65.1, 1299.0], [65.2, 1301.0], [65.3, 1304.0], [65.4, 1306.0], [65.5, 1308.0], [65.6, 1311.0], [65.7, 1313.0], [65.8, 1316.0], [65.9, 1318.0], [66.0, 1320.0], [66.1, 1322.0], [66.2, 1323.0], [66.3, 1325.0], [66.4, 1327.0], [66.5, 1329.0], [66.6, 1332.0], [66.7, 1334.0], [66.8, 1336.0], [66.9, 1338.0], [67.0, 1340.0], [67.1, 1342.0], [67.2, 1345.0], [67.3, 1346.0], [67.4, 1348.0], [67.5, 1350.0], [67.6, 1352.0], [67.7, 1353.0], [67.8, 1355.0], [67.9, 1357.0], [68.0, 1359.0], [68.1, 1361.0], [68.2, 1364.0], [68.3, 1367.0], [68.4, 1369.0], [68.5, 1371.0], [68.6, 1373.0], [68.7, 1375.0], [68.8, 1377.0], [68.9, 1379.0], [69.0, 1381.0], [69.1, 1383.0], [69.2, 1387.0], [69.3, 1390.0], [69.4, 1393.0], [69.5, 1396.0], [69.6, 1398.0], [69.7, 1400.0], [69.8, 1402.0], [69.9, 1404.0], [70.0, 1406.0], [70.1, 1408.0], [70.2, 1411.0], [70.3, 1414.0], [70.4, 1416.0], [70.5, 1418.0], [70.6, 1420.0], [70.7, 1422.0], [70.8, 1425.0], [70.9, 1428.0], [71.0, 1429.0], [71.1, 1431.0], [71.2, 1433.0], [71.3, 1438.0], [71.4, 1441.0], [71.5, 1444.0], [71.6, 1448.0], [71.7, 1450.0], [71.8, 1452.0], [71.9, 1454.0], [72.0, 1457.0], [72.1, 1459.0], [72.2, 1462.0], [72.3, 1464.0], [72.4, 1465.0], [72.5, 1467.0], [72.6, 1469.0], [72.7, 1471.0], [72.8, 1473.0], [72.9, 1475.0], [73.0, 1477.0], [73.1, 1479.0], [73.2, 1481.0], [73.3, 1484.0], [73.4, 1486.0], [73.5, 1488.0], [73.6, 1490.0], [73.7, 1493.0], [73.8, 1496.0], [73.9, 1499.0], [74.0, 1501.0], [74.1, 1503.0], [74.2, 1505.0], [74.3, 1508.0], [74.4, 1510.0], [74.5, 1513.0], [74.6, 1516.0], [74.7, 1517.0], [74.8, 1519.0], [74.9, 1522.0], [75.0, 1525.0], [75.1, 1528.0], [75.2, 1531.0], [75.3, 1534.0], [75.4, 1536.0], [75.5, 1538.0], [75.6, 1540.0], [75.7, 1542.0], [75.8, 1544.0], [75.9, 1547.0], [76.0, 1550.0], [76.1, 1553.0], [76.2, 1557.0], [76.3, 1560.0], [76.4, 1563.0], [76.5, 1566.0], [76.6, 1570.0], [76.7, 1573.0], [76.8, 1575.0], [76.9, 1577.0], [77.0, 1580.0], [77.1, 1583.0], [77.2, 1586.0], [77.3, 1589.0], [77.4, 1592.0], [77.5, 1595.0], [77.6, 1597.0], [77.7, 1599.0], [77.8, 1603.0], [77.9, 1606.0], [78.0, 1608.0], [78.1, 1610.0], [78.2, 1613.0], [78.3, 1616.0], [78.4, 1619.0], [78.5, 1623.0], [78.6, 1626.0], [78.7, 1628.0], [78.8, 1631.0], [78.9, 1635.0], [79.0, 1638.0], [79.1, 1641.0], [79.2, 1644.0], [79.3, 1647.0], [79.4, 1649.0], [79.5, 1652.0], [79.6, 1654.0], [79.7, 1655.0], [79.8, 1657.0], [79.9, 1659.0], [80.0, 1662.0], [80.1, 1664.0], [80.2, 1667.0], [80.3, 1669.0], [80.4, 1671.0], [80.5, 1674.0], [80.6, 1676.0], [80.7, 1679.0], [80.8, 1681.0], [80.9, 1683.0], [81.0, 1686.0], [81.1, 1690.0], [81.2, 1692.0], [81.3, 1696.0], [81.4, 1699.0], [81.5, 1703.0], [81.6, 1707.0], [81.7, 1710.0], [81.8, 1713.0], [81.9, 1717.0], [82.0, 1721.0], [82.1, 1724.0], [82.2, 1727.0], [82.3, 1729.0], [82.4, 1732.0], [82.5, 1735.0], [82.6, 1739.0], [82.7, 1742.0], [82.8, 1746.0], [82.9, 1750.0], [83.0, 1753.0], [83.1, 1755.0], [83.2, 1760.0], [83.3, 1763.0], [83.4, 1767.0], [83.5, 1772.0], [83.6, 1776.0], [83.7, 1779.0], [83.8, 1783.0], [83.9, 1788.0], [84.0, 1792.0], [84.1, 1795.0], [84.2, 1798.0], [84.3, 1802.0], [84.4, 1807.0], [84.5, 1811.0], [84.6, 1816.0], [84.7, 1820.0], [84.8, 1823.0], [84.9, 1826.0], [85.0, 1830.0], [85.1, 1832.0], [85.2, 1835.0], [85.3, 1837.0], [85.4, 1840.0], [85.5, 1844.0], [85.6, 1848.0], [85.7, 1850.0], [85.8, 1854.0], [85.9, 1860.0], [86.0, 1866.0], [86.1, 1871.0], [86.2, 1876.0], [86.3, 1881.0], [86.4, 1888.0], [86.5, 1893.0], [86.6, 1896.0], [86.7, 1902.0], [86.8, 1908.0], [86.9, 1912.0], [87.0, 1918.0], [87.1, 1923.0], [87.2, 1927.0], [87.3, 1932.0], [87.4, 1935.0], [87.5, 1939.0], [87.6, 1942.0], [87.7, 1947.0], [87.8, 1952.0], [87.9, 1956.0], [88.0, 1961.0], [88.1, 1965.0], [88.2, 1969.0], [88.3, 1971.0], [88.4, 1974.0], [88.5, 1978.0], [88.6, 1982.0], [88.7, 1986.0], [88.8, 1993.0], [88.9, 1999.0], [89.0, 2005.0], [89.1, 2010.0], [89.2, 2016.0], [89.3, 2021.0], [89.4, 2025.0], [89.5, 2028.0], [89.6, 2033.0], [89.7, 2036.0], [89.8, 2039.0], [89.9, 2044.0], [90.0, 2051.0], [90.1, 2057.0], [90.2, 2062.0], [90.3, 2069.0], [90.4, 2077.0], [90.5, 2083.0], [90.6, 2088.0], [90.7, 2096.0], [90.8, 2101.0], [90.9, 2108.0], [91.0, 2113.0], [91.1, 2117.0], [91.2, 2123.0], [91.3, 2130.0], [91.4, 2138.0], [91.5, 2147.0], [91.6, 2151.0], [91.7, 2155.0], [91.8, 2160.0], [91.9, 2166.0], [92.0, 2174.0], [92.1, 2178.0], [92.2, 2182.0], [92.3, 2186.0], [92.4, 2192.0], [92.5, 2197.0], [92.6, 2205.0], [92.7, 2215.0], [92.8, 2227.0], [92.9, 2235.0], [93.0, 2243.0], [93.1, 2255.0], [93.2, 2270.0], [93.3, 2279.0], [93.4, 2288.0], [93.5, 2301.0], [93.6, 2310.0], [93.7, 2323.0], [93.8, 2333.0], [93.9, 2342.0], [94.0, 2353.0], [94.1, 2369.0], [94.2, 2387.0], [94.3, 2403.0], [94.4, 2414.0], [94.5, 2427.0], [94.6, 2440.0], [94.7, 2459.0], [94.8, 2473.0], [94.9, 2484.0], [95.0, 2509.0], [95.1, 2531.0], [95.2, 2553.0], [95.3, 2560.0], [95.4, 2581.0], [95.5, 2613.0], [95.6, 2624.0], [95.7, 2644.0], [95.8, 2665.0], [95.9, 2699.0], [96.0, 2740.0], [96.1, 2794.0], [96.2, 2860.0], [96.3, 2930.0], [96.4, 3009.0], [96.5, 3060.0], [96.6, 3110.0], [96.7, 3125.0], [96.8, 3153.0], [96.9, 3195.0], [97.0, 3217.0], [97.1, 3231.0], [97.2, 3245.0], [97.3, 3296.0], [97.4, 3359.0], [97.5, 3438.0], [97.6, 3496.0], [97.7, 3542.0], [97.8, 3606.0], [97.9, 3668.0], [98.0, 3811.0], [98.1, 3922.0], [98.2, 4015.0], [98.3, 4142.0], [98.4, 4231.0], [98.5, 4335.0], [98.6, 4471.0], [98.7, 4589.0], [98.8, 4826.0], [98.9, 5212.0], [99.0, 5507.0], [99.1, 5959.0], [99.2, 6115.0], [99.3, 6334.0], [99.4, 6836.0], [99.5, 7234.0], [99.6, 7713.0], [99.7, 8301.0], [99.8, 8839.0], [99.9, 10215.0], [100.0, 14606.0]], "isOverall": false, "label": "Create Person Record - Soak Test", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 28393.0, "series": [{"data": [[0.0, 28393.0], [100.0, 7587.0], [200.0, 7761.0], [300.0, 8229.0], [400.0, 10889.0], [500.0, 8435.0], [600.0, 10642.0], [700.0, 9184.0], [800.0, 11106.0], [900.0, 11479.0], [1000.0, 10745.0], [1100.0, 8039.0], [1200.0, 10503.0], [1300.0, 9940.0], [1400.0, 9377.0], [1500.0, 8268.0], [1600.0, 8116.0], [1700.0, 6241.0], [1800.0, 5287.0], [1900.0, 4935.0], [2000.0, 4068.0], [2100.0, 3934.0], [2200.0, 2067.0], [2300.0, 1731.0], [2400.0, 1474.0], [2500.0, 1059.0], [2600.0, 1033.0], [2700.0, 452.0], [2800.0, 310.0], [2900.0, 297.0], [3000.0, 411.0], [3100.0, 732.0], [3200.0, 871.0], [3300.0, 333.0], [3400.0, 367.0], [3500.0, 382.0], [3600.0, 342.0], [3700.0, 89.0], [3800.0, 182.0], [3900.0, 259.0], [4000.0, 86.0], [4300.0, 223.0], [4100.0, 328.0], [4200.0, 141.0], [4400.0, 219.0], [4600.0, 62.0], [4500.0, 129.0], [4800.0, 92.0], [4700.0, 118.0], [5000.0, 51.0], [5100.0, 50.0], [4900.0, 23.0], [5200.0, 128.0], [5300.0, 32.0], [5500.0, 93.0], [5400.0, 77.0], [5600.0, 6.0], [5700.0, 2.0], [5800.0, 85.0], [6100.0, 117.0], [5900.0, 70.0], [6000.0, 187.0], [6200.0, 66.0], [6300.0, 107.0], [6600.0, 46.0], [6500.0, 23.0], [6400.0, 21.0], [6700.0, 46.0], [6900.0, 104.0], [6800.0, 55.0], [7100.0, 28.0], [7000.0, 46.0], [7200.0, 16.0], [7400.0, 123.0], [7300.0, 11.0], [7500.0, 34.0], [7600.0, 41.0], [7700.0, 13.0], [7800.0, 48.0], [7900.0, 17.0], [8000.0, 72.0], [8100.0, 3.0], [8300.0, 46.0], [8400.0, 52.0], [8200.0, 67.0], [8600.0, 35.0], [8700.0, 60.0], [8500.0, 22.0], [8800.0, 24.0], [8900.0, 73.0], [9000.0, 45.0], [9100.0, 19.0], [9200.0, 18.0], [9300.0, 3.0], [9500.0, 8.0], [9600.0, 2.0], [9900.0, 3.0], [10000.0, 6.0], [10200.0, 15.0], [10100.0, 18.0], [10700.0, 9.0], [10600.0, 6.0], [10500.0, 5.0], [10300.0, 1.0], [10400.0, 1.0], [10800.0, 13.0], [11200.0, 1.0], [11100.0, 34.0], [11000.0, 30.0], [11600.0, 1.0], [11700.0, 12.0], [11300.0, 1.0], [11400.0, 1.0], [11900.0, 1.0], [11800.0, 2.0], [12200.0, 1.0], [12700.0, 1.0], [12800.0, 1.0], [13100.0, 1.0], [14000.0, 1.0], [14100.0, 2.0], [14200.0, 24.0], [14300.0, 8.0], [14400.0, 54.0], [14600.0, 1.0]], "isOverall": false, "label": "Create Person Record - Soak Test", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 14600.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 8125.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 157032.0, "series": [{"data": [[0.0, 32999.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 8125.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 21360.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 157032.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 85.08082497212932, "minX": 1.69980972E12, "maxY": 800.0, "series": [{"data": [[1.69981008E12, 799.9016865876117], [1.69980978E12, 202.48921050350978], [1.69981044E12, 457.2079096045196], [1.69981014E12, 800.0], [1.69980984E12, 318.9752531852346], [1.6998102E12, 800.0], [1.6998099E12, 467.71470278160706], [1.69981026E12, 800.0], [1.69980996E12, 598.6193240013619], [1.69981032E12, 800.0], [1.69981002E12, 725.8166230054758], [1.69980972E12, 85.08082497212932], [1.69981038E12, 800.0]], "isOverall": false, "label": "Stress Test - Create Person", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69981044E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 5.235294117647059, "minX": 2.0, "maxY": 7132.0, "series": [{"data": [[2.0, 185.66666666666669], [3.0, 1437.5], [4.0, 13.333333333333334], [5.0, 2082.0], [6.0, 712.0], [7.0, 17.0], [8.0, 1318.6], [9.0, 11.75], [10.0, 752.375], [11.0, 14.8], [12.0, 956.0], [13.0, 396.6666666666667], [14.0, 720.0], [15.0, 12.125], [16.0, 599.7272727272727], [17.0, 9.777777777777779], [18.0, 446.875], [19.0, 13.666666666666666], [20.0, 1112.7777777777778], [21.0, 12.100000000000001], [22.0, 745.7333333333333], [23.0, 435.2857142857142], [24.0, 363.29999999999995], [25.0, 259.5], [26.0, 222.07142857142856], [27.0, 280.4615384615385], [28.0, 11.166666666666668], [29.0, 504.16666666666663], [30.0, 214.05882352941177], [31.0, 210.0], [32.0, 183.41176470588235], [33.0, 11.428571428571429], [34.0, 357.5], [35.0, 9.307692307692308], [36.0, 369.7368421052632], [37.0, 254.07142857142858], [38.0, 6.772727272727272], [39.0, 392.83333333333337], [40.0, 180.65000000000003], [41.0, 6.4], [42.0, 11.952380952380953], [43.0, 388.04166666666663], [44.0, 190.61904761904762], [45.0, 178.8235294117647], [46.0, 153.75], [47.0, 150.29166666666666], [48.0, 223.25], [49.0, 8.454545454545455], [50.0, 6.529411764705882], [51.0, 588.88], [52.0, 156.56521739130434], [53.0, 6.370370370370371], [54.0, 463.25], [55.0, 5.423076923076923], [56.0, 300.875], [57.0, 152.83333333333334], [58.0, 162.37500000000003], [59.0, 6.821428571428573], [60.0, 6.033333333333334], [61.0, 228.12121212121212], [62.0, 310.0869565217391], [63.0, 11.17241379310345], [64.0, 228.78787878787878], [65.0, 165.04545454545456], [66.0, 200.23076923076923], [67.0, 140.3846153846154], [68.0, 6.444444444444443], [69.0, 6.875], [70.0, 258.0731707317073], [71.0, 5.624999999999999], [72.0, 6.92], [73.0, 6.000000000000002], [74.0, 439.2413793103448], [75.0, 111.72972972972973], [76.0, 6.6875], [77.0, 193.7027027027027], [78.0, 107.47368421052633], [79.0, 127.7741935483871], [80.0, 123.4375], [81.0, 90.6904761904762], [82.0, 111.03030303030303], [83.0, 93.07317073170731], [84.0, 108.91891891891893], [85.0, 97.10256410256412], [86.0, 106.17142857142856], [87.0, 81.34782608695653], [88.0, 104.17142857142856], [89.0, 97.26190476190476], [90.0, 106.3529411764706], [91.0, 95.89473684210526], [92.0, 108.05263157894737], [93.0, 79.93478260869566], [94.0, 121.16666666666666], [95.0, 9.444444444444441], [96.0, 8.434782608695652], [97.0, 8.736842105263156], [98.0, 9.162790697674419], [99.0, 9.340425531914894], [100.0, 8.174999999999999], [101.0, 8.862745098039216], [102.0, 8.744680851063832], [103.0, 8.631578947368423], [104.0, 6.102040816326534], [105.0, 918.92], [106.0, 76.3265306122449], [107.0, 77.42553191489363], [108.0, 74.66], [109.0, 81.13043478260869], [110.0, 85.43181818181819], [111.0, 64.45], [112.0, 86.88636363636364], [113.0, 74.09433962264151], [114.0, 73.09433962264151], [115.0, 67.82142857142857], [116.0, 75.0], [117.0, 65.49152542372882], [118.0, 85.20454545454545], [119.0, 69.67272727272729], [120.0, 63.81666666666667], [121.0, 74.75], [122.0, 66.81355932203391], [123.0, 73.9423076923077], [124.0, 64.40983606557377], [125.0, 71.94545454545454], [126.0, 78.5], [127.0, 60.76190476190476], [128.0, 72.22], [129.0, 65.73214285714286], [130.0, 85.95833333333333], [131.0, 61.61971830985916], [132.0, 71.67924528301887], [133.0, 10.056603773584909], [134.0, 104.22857142857143], [135.0, 66.27118644067797], [136.0, 62.03174603174603], [137.0, 59.25000000000001], [138.0, 61.43076923076923], [139.0, 63.19047619047619], [140.0, 58.57575757575758], [141.0, 9.704918032786884], [142.0, 122.38095238095238], [143.0, 66.12903225806451], [144.0, 58.06060606060606], [145.0, 68.44827586206895], [146.0, 57.879999999999995], [147.0, 15.323076923076922], [148.0, 142.3272727272727], [149.0, 51.53846153846154], [150.0, 71.38333333333334], [151.0, 57.92857142857142], [152.0, 65.80701754385964], [153.0, 61.41558441558441], [154.0, 59.81333333333334], [155.0, 67.5909090909091], [156.0, 65.50666666666666], [157.0, 59.97260273972603], [158.0, 59.68571428571429], [159.0, 113.44285714285715], [160.0, 61.5945945945946], [161.0, 57.89855072463768], [162.0, 51.25333333333334], [163.0, 55.12676056338028], [164.0, 10.945205479452056], [165.0, 11.626666666666663], [166.0, 108.81944444444443], [167.0, 51.28378378378378], [168.0, 51.76470588235294], [169.0, 47.607594936708864], [170.0, 58.47826086956522], [171.0, 48.75675675675675], [172.0, 48.47945205479452], [173.0, 47.73170731707317], [174.0, 5.399999999999999], [175.0, 134.5], [176.0, 49.07692307692307], [177.0, 49.21052631578947], [178.0, 5.881578947368423], [179.0, 139.55263157894737], [180.0, 45.3875], [181.0, 48.89333333333334], [182.0, 49.92405063291139], [183.0, 50.294871794871796], [184.0, 46.8876404494382], [185.0, 51.15189873417721], [186.0, 48.42857142857142], [187.0, 48.97802197802197], [188.0, 8.944444444444448], [189.0, 86.51724137931035], [190.0, 94.84146341463415], [191.0, 96.22222222222223], [192.0, 46.58620689655172], [193.0, 11.309278350515465], [194.0, 81.81521739130434], [195.0, 46.72413793103448], [196.0, 10.511627906976745], [197.0, 89.80459770114942], [198.0, 47.057471264367805], [199.0, 43.101010101010104], [200.0, 43.30681818181818], [201.0, 7.258064516129033], [202.0, 76.30000000000001], [203.0, 46.46808510638298], [204.0, 10.0], [205.0, 14.414893617021276], [206.0, 6.872340425531913], [207.0, 6.7938144329896915], [208.0, 20.05494505494505], [209.0, 22.42528735632184], [210.0, 26.509615384615376], [211.0, 9.206896551724139], [212.0, 28.307692307692307], [213.0, 29.17857142857143], [214.0, 20.020833333333336], [215.0, 38.968421052631584], [216.0, 7.670103092783505], [217.0, 18.0989010989011], [218.0, 16.505050505050505], [219.0, 18.7979797979798], [220.0, 28.10891089108911], [221.0, 20.782608695652172], [222.0, 16.63], [223.0, 5.3673469387755075], [224.0, 21.705882352941178], [225.0, 5.235294117647059], [226.0, 52.11881188118812], [227.0, 7.524271844660193], [228.0, 41.34313725490196], [229.0, 7.429906542056076], [230.0, 14.75531914893617], [231.0, 15.917431192660548], [232.0, 71.5047619047619], [233.0, 35.95652173913044], [234.0, 41.25773195876289], [235.0, 35.283185840707965], [236.0, 9.858490566037737], [237.0, 23.55555555555555], [238.0, 24.927083333333336], [239.0, 19.950413223140497], [240.0, 27.559633027522935], [241.0, 24.20183486238533], [242.0, 37.180952380952384], [243.0, 15.910714285714288], [244.0, 24.956521739130437], [245.0, 12.620370370370381], [246.0, 23.799999999999997], [247.0, 38.86842105263158], [248.0, 36.107142857142854], [249.0, 48.54782608695652], [250.0, 25.724489795918373], [251.0, 27.062499999999993], [252.0, 21.655172413793103], [253.0, 20.57522123893805], [254.0, 21.88034188034188], [255.0, 38.41379310344827], [257.0, 27.618644067796605], [256.0, 25.294117647058822], [258.0, 32.76229508196721], [259.0, 27.827586206896555], [260.0, 30.860655737704917], [261.0, 29.062499999999993], [262.0, 33.45669291338582], [263.0, 40.967213114754095], [264.0, 23.165289256198346], [270.0, 12.595238095238091], [271.0, 59.87903225806453], [268.0, 22.766666666666673], [269.0, 26.595238095238102], [265.0, 25.50833333333333], [266.0, 30.47252747252747], [267.0, 41.30821917808218], [273.0, 25.69421487603306], [272.0, 11.396694214876039], [274.0, 10.428571428571429], [275.0, 26.3135593220339], [276.0, 36.2265625], [277.0, 31.189655172413794], [278.0, 34.77205882352943], [279.0, 23.859375000000004], [280.0, 44.57425742574257], [286.0, 27.411764705882348], [287.0, 82.5151515151515], [284.0, 12.272727272727279], [285.0, 34.891472868217065], [281.0, 47.1203007518797], [282.0, 21.18749999999999], [283.0, 22.221428571428575], [289.0, 18.2972972972973], [288.0, 25.514705882352935], [290.0, 26.33812949640288], [291.0, 16.043795620437947], [292.0, 13.68656716417911], [293.0, 42.859375], [294.0, 13.81884057971015], [295.0, 51.734374999999986], [296.0, 87.47783251231526], [302.0, 155.0], [303.0, 122.37755102040823], [300.0, 84.41447368421053], [301.0, 49.875912408759135], [297.0, 20.85185185185185], [298.0, 118.78169014084506], [299.0, 35.17857142857144], [305.0, 312.1666666666667], [304.0, 51.096774193548384], [306.0, 791.4], [307.0, 610.3120000000001], [308.0, 582.0595238095241], [309.0, 1093.8758620689655], [310.0, 2062.0], [311.0, 1408.2875000000001], [312.0, 1096.2222222222224], [319.0, 1192.3970588235297], [318.0, 1242.0], [316.0, 1748.0], [317.0, 1121.0], [313.0, 965.2597402597391], [314.0, 1219.0569620253166], [315.0, 8.310679611650484], [321.0, 1718.5], [320.0, 950.0], [323.0, 1887.0081967213105], [332.0, 2887.0], [334.0, 3024.0], [333.0, 1493.0], [335.0, 2184.9352517985626], [324.0, 1301.403587443947], [325.0, 2276.0], [326.0, 2678.0], [327.0, 1295.0510204081631], [328.0, 2098.0], [330.0, 1262.3035019455262], [329.0, 2303.0], [331.0, 1567.4736842105262], [337.0, 1531.8015267175579], [336.0, 1295.3333333333333], [338.0, 1101.7721518987341], [339.0, 2337.250000000002], [341.0, 3783.6666666666665], [340.0, 1496.0], [342.0, 2849.5], [343.0, 2084.769230769231], [344.0, 2097.741935483871], [348.0, 1506.7142857142858], [349.0, 1706.6034482758623], [350.0, 1548.2307692307695], [351.0, 1736.5], [345.0, 1767.363636363635], [347.0, 1503.0], [353.0, 1612.9142857142851], [352.0, 1710.8923076923077], [354.0, 914.7564102564104], [355.0, 1409.0], [357.0, 3406.6107382550326], [356.0, 1450.5000000000005], [359.0, 2079.0], [358.0, 1503.0], [360.0, 2798.4285714285716], [366.0, 1623.8310344827573], [367.0, 1502.0], [364.0, 2716.0], [365.0, 3379.6111111111113], [361.0, 1560.9235474006114], [362.0, 2191.142857142857], [363.0, 1502.0], [381.0, 2202.3910761154852], [369.0, 1780.4117647058827], [368.0, 3074.5714285714284], [370.0, 1562.4444444444443], [380.0, 1500.0], [372.0, 1605.0038022813692], [374.0, 1501.0], [373.0, 1501.0], [375.0, 1209.0], [376.0, 2569.8488372093016], [377.0, 4229.0], [379.0, 2358.25], [378.0, 1502.0], [382.0, 350.5], [383.0, 1499.3333333333333], [385.0, 1690.75], [384.0, 1646.0], [386.0, 1713.4615384615386], [387.0, 2039.1864406779664], [388.0, 2386.2386363636356], [390.0, 1838.432314410481], [389.0, 895.8], [391.0, 2852.666666666667], [392.0, 1205.5], [393.0, 1499.0], [399.0, 1255.8095238095239], [396.0, 2760.0], [397.0, 1498.0], [398.0, 1526.35064935065], [394.0, 1539.0434782608697], [395.0, 1405.9592760180992], [401.0, 2438.1122194513714], [400.0, 2665.5], [403.0, 862.0], [402.0, 1498.0], [412.0, 1688.528822055138], [415.0, 1497.0], [414.0, 1497.0], [413.0, 1497.0], [405.0, 1468.5], [406.0, 1908.0], [407.0, 2428.980952380953], [408.0, 1753.5500000000018], [409.0, 1685.9724137931034], [411.0, 1726.5], [410.0, 1497.0], [419.0, 2109.612676056336], [417.0, 2201.5039999999995], [416.0, 2027.8518518518524], [418.0, 2404.0], [421.0, 529.6283185840707], [420.0, 1497.0], [422.0, 1496.0], [423.0, 1528.5], [426.0, 2382.0000000000005], [427.0, 2197.665887850467], [428.0, 950.3333333333333], [431.0, 1496.0], [429.0, 1496.0], [444.0, 1651.7643678160916], [433.0, 2418.592592592592], [432.0, 2234.4375], [434.0, 1451.0519999999995], [435.0, 1496.0], [437.0, 1682.0], [436.0, 3172.0], [439.0, 2006.402173913044], [440.0, 1425.2364864864874], [443.0, 1459.8488372093027], [441.0, 2049.5], [442.0, 1495.0], [445.0, 1660.6666666666667], [446.0, 2135.5], [461.0, 3618.7545454545448], [450.0, 280.2], [448.0, 2531.5144766146977], [451.0, 1021.6666666666666], [460.0, 1495.0], [462.0, 1685.2467532467533], [463.0, 1479.1546762589924], [452.0, 918.4370078740162], [455.0, 1495.0], [453.0, 1495.0], [449.0, 507.2028985507246], [456.0, 1875.5], [457.0, 1606.9507246376813], [458.0, 1274.6666666666667], [459.0, 1765.0], [467.0, 1764.6666666666667], [464.0, 896.0], [466.0, 1477.3852459016402], [465.0, 1493.0], [468.0, 1348.1809523809525], [469.0, 1493.0], [470.0, 2570.62962962963], [471.0, 2947.0697674418607], [472.0, 2487.2679738562097], [479.0, 1315.8888888888882], [477.0, 1834.1898734177216], [478.0, 1425.2941176470588], [473.0, 1656.9712793733684], [474.0, 1818.0], [475.0, 7132.0], [481.0, 2793.382165605096], [480.0, 1499.3333333333333], [483.0, 921.9119496855349], [482.0, 3056.285714285714], [484.0, 1263.5], [485.0, 1031.4468749999999], [486.0, 1383.0], [487.0, 2282.0], [488.0, 2990.0], [489.0, 1492.0], [494.0, 1959.3529411764705], [495.0, 1046.6761658031096], [492.0, 2037.3061224489797], [493.0, 1912.5189873417723], [490.0, 1526.3776824034337], [491.0, 1849.8727272727272], [499.0, 1321.0620347394542], [496.0, 1163.0], [501.0, 1126.2], [498.0, 1604.0], [497.0, 1492.0], [503.0, 1156.4005376344066], [505.0, 649.6666666666667], [507.0, 711.0], [502.0, 1258.0], [504.0, 425.00000000000006], [508.0, 1338.0], [509.0, 1842.1071428571427], [510.0, 1397.5857142857149], [511.0, 1477.0], [519.0, 1074.5023148148146], [515.0, 1167.0671462829741], [512.0, 1266.0], [526.0, 1065.5], [527.0, 1618.2083333333335], [525.0, 558.3333333333334], [524.0, 613.2028301886792], [523.0, 593.4375], [513.0, 1479.5], [514.0, 1880.1461988304093], [516.0, 849.6666666666666], [517.0, 1411.3333333333333], [518.0, 1838.2376237623764], [528.0, 853.1820895522391], [542.0, 538.0], [543.0, 863.0], [540.0, 1838.2028985507243], [541.0, 1055.3701657458569], [539.0, 1884.142857142857], [538.0, 1696.0], [536.0, 668.5380952380955], [537.0, 793.0], [529.0, 517.4109589041095], [530.0, 552.75], [532.0, 1068.428571428571], [533.0, 1614.0], [534.0, 887.7916666666673], [535.0, 881.5], [521.0, 1211.5714285714287], [520.0, 1480.25], [522.0, 819.3468634686346], [547.0, 946.7878787878786], [544.0, 1429.9478260869564], [559.0, 1154.3243243243242], [557.0, 607.7389033942566], [558.0, 1053.0], [554.0, 726.2762645914399], [555.0, 1466.0], [556.0, 1025.0159574468082], [545.0, 1038.0034482758624], [546.0, 1123.0], [548.0, 752.4328358208955], [549.0, 480.25000000000006], [550.0, 308.97169811320714], [551.0, 453.0], [560.0, 723.064770932069], [574.0, 19.320610687022903], [575.0, 26.73979591836735], [572.0, 386.09693053311787], [573.0, 36.71212121212121], [570.0, 514.8723404255326], [571.0, 223.2933333333333], [568.0, 1027.8333333333335], [569.0, 890.1734104046243], [561.0, 495.52000000000015], [562.0, 371.49999999999994], [563.0, 356.79672131147555], [564.0, 858.357142857143], [565.0, 1045.0], [566.0, 534.9365079365076], [567.0, 621.4], [552.0, 1068.5], [553.0, 1600.9090909090912], [579.0, 16.550943396226415], [576.0, 73.12333333333336], [590.0, 142.34246575342468], [591.0, 852.0], [588.0, 706.8787878787882], [589.0, 611.1526032315984], [586.0, 971.0], [587.0, 885.7262569832403], [577.0, 35.37113402061854], [578.0, 36.78764478764478], [580.0, 89.09375], [581.0, 475.7142857142857], [582.0, 958.8], [583.0, 735.9468438538212], [593.0, 1129.0307692307688], [594.0, 729.4153005464485], [595.0, 405.0], [597.0, 1359.69918699187], [598.0, 721.4338521400779], [599.0, 919.0], [596.0, 981.5], [592.0, 1175.8], [606.0, 739.1212121212112], [607.0, 1009.0], [604.0, 1102.4285714285713], [605.0, 1080.5438596491229], [602.0, 557.7754098360654], [603.0, 915.5], [600.0, 1034.2], [601.0, 910.7774869109951], [584.0, 479.7525773195878], [585.0, 1027.375], [611.0, 1062.6], [608.0, 660.94472361809], [622.0, 866.0], [620.0, 1140.469135802469], [621.0, 673.8895800933125], [618.0, 571.2], [619.0, 916.75], [609.0, 82.61842105263156], [610.0, 585.75], [612.0, 989.3129032258062], [613.0, 510.1215970961889], [614.0, 166.61428571428573], [615.0, 1000.1428571428571], [624.0, 1511.9578947368418], [638.0, 701.4530386740333], [639.0, 758.12543554007], [636.0, 1034.0237529691221], [637.0, 697.9483870967741], [634.0, 615.25], [635.0, 1004.7142857142857], [632.0, 1459.174242424242], [633.0, 874.0326086956522], [625.0, 1350.3344370860934], [626.0, 1008.0617977528092], [627.0, 932.0], [628.0, 1367.2187500000002], [629.0, 1358.4175438596499], [630.0, 887.2666666666668], [631.0, 591.967741935484], [616.0, 1069.0], [617.0, 863.0952380952378], [643.0, 652.5590277777773], [640.0, 637.3818181818183], [654.0, 1178.5438596491235], [655.0, 933.2418300653599], [652.0, 936.6666666666666], [653.0, 1619.8846153846155], [650.0, 948.2610497237556], [651.0, 491.5], [641.0, 1487.1034482758619], [642.0, 1143.943859649123], [644.0, 96.57142857142857], [645.0, 1134.6701570680625], [646.0, 711.4051987767592], [647.0, 472.0], [656.0, 815.9446808510638], [669.0, 1267.5982758620696], [670.0, 3972.5], [671.0, 2181.5], [667.0, 1966.6666666666665], [666.0, 3069.0], [668.0, 1135.8106508875742], [664.0, 773.05105105105], [665.0, 1866.0], [657.0, 1398.9736842105265], [658.0, 1317.3313432835816], [659.0, 908.2321428571427], [660.0, 523.7683823529411], [661.0, 1046.3333333333333], [662.0, 1225.2543859649127], [663.0, 1837.5828571428563], [649.0, 1289.0], [648.0, 953.0], [679.0, 2388.0], [675.0, 2547.3333333333335], [672.0, 1425.5957446808516], [687.0, 3276.0], [685.0, 1857.0], [686.0, 1185.5], [683.0, 1132.1873905429059], [684.0, 470.1202531645572], [673.0, 1054.6596491228072], [674.0, 616.0789473684209], [676.0, 2281.5], [677.0, 1748.8223684210525], [678.0, 1037.6082474226805], [680.0, 1762.7777777777778], [681.0, 3055.0], [682.0, 1423.796407185629], [688.0, 1278.6896086369788], [689.0, 3426.0], [703.0, 2979.0], [701.0, 1722.1911764705883], [702.0, 1457.405797101449], [698.0, 2391.75], [699.0, 929.0], [700.0, 2358.432432432432], [696.0, 1016.0652173913049], [697.0, 491.5720164609054], [690.0, 1454.3333333333335], [691.0, 1132.0], [692.0, 2088.555555555555], [693.0, 1292.9371428571428], [694.0, 1322.0207253886012], [695.0, 1122.7198067632853], [707.0, 1280.6792452830193], [704.0, 1145.4497354497353], [719.0, 1397.607142857143], [717.0, 1820.7540983606557], [716.0, 3088.0], [718.0, 1905.9545454545453], [714.0, 634.5], [715.0, 2736.6666666666665], [705.0, 755.3838383838386], [706.0, 898.5470588235294], [708.0, 681.0095890410968], [709.0, 2643.6666666666665], [710.0, 435.382920110193], [711.0, 38.59940652818989], [720.0, 299.45132743362825], [721.0, 3485.0], [734.0, 1917.5980392156864], [733.0, 7034.0], [735.0, 433.24590163934414], [731.0, 1002.8526315789475], [732.0, 4019.5], [729.0, 1945.1250000000007], [728.0, 3085.0], [730.0, 1533.1443001443013], [722.0, 1320.0], [723.0, 1938.6462585034014], [724.0, 1616.7226277372265], [725.0, 921.9455999999986], [726.0, 361.29090909090917], [727.0, 2141.5], [712.0, 25.45508982035927], [713.0, 90.171875], [743.0, 994.6666666666666], [739.0, 4131.0], [736.0, 1041.90616966581], [738.0, 7008.5], [737.0, 7035.0], [751.0, 3707.666666666667], [749.0, 1299.757575757576], [750.0, 1263.1850533807826], [740.0, 2489.142857142857], [741.0, 1733.03597122302], [742.0, 1345.092753623189], [752.0, 2377.9326923076933], [766.0, 1000.6229508196719], [767.0, 4214.0], [764.0, 2966.0], [765.0, 906.3506097560967], [762.0, 941.5294117647062], [763.0, 1035.0983606557375], [760.0, 761.3705357142852], [761.0, 1125.3815789473688], [753.0, 1580.833333333333], [754.0, 1077.3146944083223], [755.0, 2714.6666666666665], [756.0, 2791.0], [757.0, 1411.7767857142856], [759.0, 2125.714285714286], [758.0, 6977.0], [745.0, 3553.6666666666665], [746.0, 1733.7454545454545], [747.0, 858.9182879377436], [748.0, 1444.5703703703707], [771.0, 1612.875], [768.0, 1347.1028571428567], [782.0, 1855.2580645161286], [783.0, 2648.666666666666], [780.0, 1767.1443298969075], [781.0, 1441.5724137931038], [778.0, 1525.9155555555549], [779.0, 612.275], [769.0, 1526.8212290502788], [770.0, 754.8658536585363], [772.0, 4618.551020408164], [773.0, 1064.0763358778622], [774.0, 2321.25], [775.0, 1095.8426966292138], [784.0, 2781.787878787878], [798.0, 1659.7214854111405], [799.0, 3782.0], [796.0, 2217.2978723404253], [797.0, 1726.4421052631578], [794.0, 516.8481012658227], [795.0, 3581.333333333333], [792.0, 1327.4187082405363], [793.0, 898.6296296296294], [785.0, 1164.8861985472136], [787.0, 3945.0], [786.0, 6923.0], [788.0, 2404.2], [790.0, 2216.3238095238094], [789.0, 6923.0], [791.0, 1102.432950191571], [776.0, 1525.4444444444443], [777.0, 2305.7483443708616], [800.0, 1255.3534600032908]], "isOverall": false, "label": "Create Person Record - Soak Test", "isController": false}, {"data": [[681.4274585907148, 1108.9437763078838]], "isOverall": false, "label": "Create Person Record - Soak Test-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 800.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 2013.0166666666667, "minX": 1.69980972E12, "maxY": 1098285.2833333334, "series": [{"data": [[1.69981008E12, 806057.7666666667], [1.69980978E12, 96479.26666666666], [1.69981044E12, 26421.383333333335], [1.69981014E12, 1009633.2], [1.69980984E12, 304865.56666666665], [1.6998102E12, 979284.0], [1.6998099E12, 464916.18333333335], [1.69981026E12, 826942.7833333333], [1.69980996E12, 812658.1833333333], [1.69981032E12, 1098285.2833333334], [1.69981002E12, 793869.0666666667], [1.69980972E12, 30003.466666666667], [1.69981038E12, 565574.7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.69981008E12, 24326.933333333334], [1.69980978E12, 60174.76666666667], [1.69981044E12, 2013.0166666666667], [1.69981014E12, 24504.383333333335], [1.69980984E12, 36148.71666666667], [1.6998102E12, 28421.266666666666], [1.6998099E12, 14810.3], [1.69981026E12, 23414.616666666665], [1.69980996E12, 37823.166666666664], [1.69981032E12, 17777.2], [1.69981002E12, 24900.416666666668], [1.69980972E12, 18710.383333333335], [1.69981038E12, 13709.516666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69981044E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 8.422798216276433, "minX": 1.69980972E12, "maxY": 2771.334463276838, "series": [{"data": [[1.69981008E12, 1250.6397222090932], [1.69980978E12, 10.204263801022586], [1.69981044E12, 2771.334463276838], [1.69981014E12, 1010.3732942326496], [1.69980984E12, 915.0140476968313], [1.6998102E12, 982.9316704518787], [1.6998099E12, 1540.9296894006943], [1.69981026E12, 1161.8825036091766], [1.69980996E12, 731.1900392625396], [1.69981032E12, 1102.933583106267], [1.69981002E12, 1168.9511312217273], [1.69980972E12, 8.422798216276433], [1.69981038E12, 2613.792390924953]], "isOverall": false, "label": "Create Person Record - Soak Test", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69981044E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 7.86677814938685, "minX": 1.69980972E12, "maxY": 1612.5819209039548, "series": [{"data": [[1.69981008E12, 269.3986866348572], [1.69980978E12, 9.540341450732319], [1.69981044E12, 1612.5819209039548], [1.69981014E12, 218.14420332355837], [1.69980984E12, 312.42469781117205], [1.6998102E12, 231.62236666927714], [1.6998099E12, 472.3337928797357], [1.69981026E12, 275.32417454477604], [1.69980996E12, 211.37145783543997], [1.69981032E12, 283.87783832879126], [1.69981002E12, 264.4962610145283], [1.69980972E12, 7.86677814938685], [1.69981038E12, 956.4871902268773]], "isOverall": false, "label": "Create Person Record - Soak Test", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69981044E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 1.7427536231884064, "minX": 1.69980972E12, "maxY": 1491.9983944153635, "series": [{"data": [[1.69981008E12, 981.7229177493288], [1.69980978E12, 3.1898778057023933], [1.69981044E12, 1012.7525423728813], [1.69981014E12, 790.491534701857], [1.69980984E12, 582.6536262659262], [1.6998102E12, 744.0515702091022], [1.6998099E12, 1071.838861406209], [1.69981026E12, 875.0086620407051], [1.69980996E12, 516.4595425059753], [1.69981032E12, 743.2973054798681], [1.69981002E12, 906.6421052631578], [1.69980972E12, 1.7427536231884064], [1.69981038E12, 1491.9983944153635]], "isOverall": false, "label": "Create Person Record - Soak Test", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69981044E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.69980972E12, "maxY": 14606.0, "series": [{"data": [[1.69981008E12, 4937.0], [1.69980978E12, 82.0], [1.69981044E12, 9624.0], [1.69981014E12, 3185.0], [1.69980984E12, 8891.0], [1.6998102E12, 3925.0], [1.6998099E12, 6243.0], [1.69981026E12, 4732.0], [1.69980996E12, 3338.0], [1.69981032E12, 8623.0], [1.69981002E12, 6356.0], [1.69980972E12, 494.0], [1.69981038E12, 14606.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.69981008E12, 2469.5], [1.69980978E12, 19.0], [1.69981044E12, 6994.0], [1.69981014E12, 2317.0], [1.69980984E12, 2661.9000000000005], [1.6998102E12, 2145.4000000000005], [1.6998099E12, 4404.3], [1.69981026E12, 2528.0], [1.69980996E12, 1644.0], [1.69981032E12, 4604.8], [1.69981002E12, 2336.0], [1.69980972E12, 13.0], [1.69981038E12, 9261.6]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.69981008E12, 4830.0], [1.69980978E12, 40.0], [1.69981044E12, 9580.539999999999], [1.69981014E12, 3097.0], [1.69980984E12, 5244.58], [1.6998102E12, 3111.74], [1.6998099E12, 6219.0], [1.69981026E12, 4659.25], [1.69980996E12, 2014.0], [1.69981032E12, 8322.32], [1.69981002E12, 6325.35], [1.69980972E12, 19.11999999999989], [1.69981038E12, 14447.0]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.69981008E12, 2778.0], [1.69980978E12, 25.0], [1.69981044E12, 7196.7], [1.69981014E12, 2438.0], [1.69980984E12, 3577.8999999999996], [1.6998102E12, 2500.0], [1.6998099E12, 5302.0], [1.69981026E12, 2735.0], [1.69980996E12, 1836.0], [1.69981032E12, 5942.799999999999], [1.69981002E12, 2665.0], [1.69980972E12, 15.0], [1.69981038E12, 11109.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.69981008E12, 5.0], [1.69980978E12, 2.0], [1.69981044E12, 2796.0], [1.69981014E12, 3.0], [1.69980984E12, 2.0], [1.6998102E12, 2.0], [1.6998099E12, 14.0], [1.69981026E12, 8.0], [1.69980996E12, 3.0], [1.69981032E12, 50.0], [1.69981002E12, 2.0], [1.69980972E12, 3.0], [1.69981038E12, 660.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.69981008E12, 862.0], [1.69980978E12, 8.0], [1.69981044E12, 3466.0], [1.69981014E12, 1257.0], [1.69980984E12, 21.0], [1.6998102E12, 1321.0], [1.6998099E12, 1905.5], [1.69981026E12, 1469.0], [1.69980996E12, 444.0], [1.69981032E12, 2426.0], [1.69981002E12, 725.5], [1.69980972E12, 7.0], [1.69981038E12, 6099.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69981044E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 3.0, "minX": 1.0, "maxY": 14435.0, "series": [{"data": [[2.0, 2105.0], [3.0, 1239.0], [4.0, 950.0], [5.0, 2499.0], [6.0, 2255.0], [7.0, 1777.0], [8.0, 1716.0], [9.0, 2072.0], [10.0, 17.5], [11.0, 1257.0], [12.0, 2038.0], [13.0, 2641.5], [14.0, 17.5], [15.0, 3821.5], [17.0, 18.0], [18.0, 11.0], [19.0, 12.0], [20.0, 12.0], [23.0, 4877.0], [25.0, 12.0], [26.0, 1757.5], [28.0, 10.5], [29.0, 299.5], [31.0, 135.0], [32.0, 9.0], [33.0, 8.0], [34.0, 12.0], [35.0, 6801.5], [37.0, 2835.0], [39.0, 283.0], [41.0, 7.0], [40.0, 572.0], [42.0, 9.0], [43.0, 8.0], [44.0, 6336.0], [47.0, 1912.0], [46.0, 722.0], [51.0, 6.0], [50.0, 1900.0], [53.0, 67.5], [55.0, 6.0], [56.0, 1625.0], [58.0, 7.0], [61.0, 6.0], [65.0, 7.0], [66.0, 9.0], [64.0, 3227.5], [68.0, 6.0], [69.0, 7.0], [71.0, 169.0], [73.0, 6.0], [72.0, 21.5], [77.0, 168.0], [76.0, 1251.0], [81.0, 7.0], [82.0, 7.0], [80.0, 6.0], [83.0, 6.0], [84.0, 6.0], [87.0, 8.0], [88.0, 152.5], [91.0, 2928.5], [94.0, 8.0], [97.0, 9.0], [98.0, 78.0], [100.0, 10.0], [101.0, 9.0], [103.0, 3119.0], [105.0, 7.0], [107.0, 8.0], [106.0, 6882.5], [108.0, 2221.0], [110.0, 27.0], [115.0, 467.0], [114.0, 7507.0], [119.0, 8.0], [117.0, 9.0], [116.0, 1301.0], [122.0, 10.0], [121.0, 463.0], [124.0, 9.5], [127.0, 20.0], [125.0, 2200.0], [133.0, 11.0], [135.0, 1543.0], [136.0, 11.0], [137.0, 445.0], [142.0, 11.0], [143.0, 17.5], [150.0, 8.0], [147.0, 16.0], [149.0, 272.0], [155.0, 10.0], [154.0, 15.0], [156.0, 11.0], [159.0, 18.0], [157.0, 11.5], [153.0, 593.0], [163.0, 12.0], [162.0, 10.0], [161.0, 6.0], [164.0, 7.0], [165.0, 13.0], [167.0, 130.0], [166.0, 154.0], [173.0, 6.5], [175.0, 7.0], [168.0, 1936.0], [174.0, 3813.0], [170.0, 7.0], [183.0, 6.0], [182.0, 123.5], [177.0, 441.0], [187.0, 9.0], [189.0, 8.0], [191.0, 10.0], [185.0, 2385.0], [194.0, 9.5], [197.0, 12.0], [192.0, 13.0], [196.0, 6.0], [193.0, 437.5], [206.0, 9.0], [202.0, 5.0], [205.0, 6.0], [204.0, 1155.5], [211.0, 9.0], [210.0, 574.0], [208.0, 6.0], [213.0, 854.0], [209.0, 158.0], [220.0, 18.0], [219.0, 5.0], [223.0, 5.0], [222.0, 7.0], [221.0, 833.0], [218.0, 834.0], [216.0, 596.5], [217.0, 753.0], [224.0, 10.0], [227.0, 5.0], [226.0, 19.5], [231.0, 9.0], [228.0, 1414.0], [225.0, 2640.0], [238.0, 5.0], [237.0, 9.0], [239.0, 1942.0], [233.0, 1867.0], [232.0, 6320.0], [246.0, 5.0], [241.0, 8.0], [247.0, 9.0], [245.0, 9.0], [240.0, 643.0], [244.0, 406.0], [249.0, 8.0], [252.0, 6.0], [254.0, 6.0], [255.0, 13.0], [251.0, 677.0], [257.0, 14.0], [270.0, 14.0], [262.0, 21.0], [269.0, 9.0], [264.0, 9.0], [267.0, 70.0], [268.0, 103.0], [260.0, 825.0], [275.0, 10.0], [272.0, 15.0], [277.0, 11.0], [286.0, 15.0], [274.0, 25.0], [287.0, 16.0], [282.0, 38.0], [281.0, 3067.0], [283.0, 471.0], [273.0, 1532.5], [276.0, 349.5], [301.0, 22.0], [288.0, 9.0], [289.0, 24.0], [292.0, 22.0], [294.0, 766.0], [299.0, 44.0], [297.0, 50.0], [302.0, 138.0], [290.0, 1511.0], [300.0, 557.0], [312.0, 51.5], [318.0, 1170.5], [307.0, 2155.0], [319.0, 4499.0], [321.0, 1165.0], [333.0, 1671.0], [331.0, 607.0], [332.0, 921.0], [335.0, 853.0], [325.0, 644.0], [328.0, 1911.0], [347.0, 6657.0], [345.0, 2678.0], [349.0, 2118.0], [339.0, 875.5], [346.0, 593.5], [336.0, 39.0], [341.0, 1007.5], [338.0, 2889.5], [365.0, 3676.0], [352.0, 5219.5], [359.0, 1220.5], [367.0, 1205.0], [356.0, 1716.0], [358.0, 2174.0], [376.0, 1951.0], [378.0, 2226.0], [374.0, 1309.0], [383.0, 1045.0], [380.0, 6467.0], [386.0, 3215.0], [399.0, 2108.0], [389.0, 2483.0], [385.0, 1168.0], [394.0, 1686.0], [397.0, 1898.0], [387.0, 300.5], [407.0, 2678.0], [411.0, 2492.0], [410.0, 1874.0], [419.0, 3864.5], [426.0, 475.0], [438.0, 1637.0], [433.0, 710.0], [437.0, 573.0], [443.0, 1034.5], [446.0, 1069.0], [435.0, 3338.0], [441.0, 10005.5], [452.0, 2645.0], [460.0, 4170.0], [461.0, 2088.5], [449.0, 1027.0], [456.0, 781.0], [462.0, 2616.0], [448.0, 3563.0], [471.0, 1628.0], [465.0, 355.0], [473.0, 646.0], [486.0, 2369.0], [485.0, 2978.0], [487.0, 8032.0], [507.0, 1100.0], [510.0, 1261.0], [498.0, 1069.0], [536.0, 3129.0], [540.0, 1834.0], [515.0, 1950.0], [516.0, 544.0], [530.0, 40.5], [522.0, 1046.0], [524.0, 1480.0], [532.0, 1660.5], [525.0, 408.0], [528.0, 1256.0], [517.0, 1095.0], [519.0, 1930.0], [571.0, 2562.5], [575.0, 4416.0], [554.0, 1135.0], [572.0, 1533.0], [573.0, 5345.0], [568.0, 6330.5], [569.0, 509.0], [547.0, 1305.5], [544.0, 2378.5], [566.0, 1396.0], [563.0, 5907.0], [560.0, 5518.5], [558.0, 1309.0], [559.0, 403.0], [567.0, 1788.5], [581.0, 1817.0], [585.0, 2005.0], [590.0, 1170.0], [578.0, 12.0], [607.0, 2329.0], [576.0, 2530.0], [582.0, 1175.5], [592.0, 1678.0], [594.0, 2069.0], [610.0, 1860.0], [634.0, 1574.0], [623.0, 7.0], [618.0, 1481.5], [616.0, 544.0], [612.0, 1478.0], [628.0, 1947.5], [639.0, 4099.0], [633.0, 4595.5], [645.0, 2060.0], [662.0, 1311.0], [670.0, 1292.0], [651.0, 1286.0], [649.0, 1446.0], [654.0, 1723.0], [665.0, 1930.5], [668.0, 10197.0], [640.0, 4764.0], [661.0, 3865.0], [657.0, 11072.0], [676.0, 1191.0], [672.0, 1588.5], [692.0, 1507.5], [702.0, 2196.0], [688.0, 2487.0], [699.0, 2510.0], [694.0, 5507.0], [687.0, 4347.5], [680.0, 8733.0], [681.0, 14435.0], [684.0, 4752.0], [728.0, 1565.0], [734.0, 1846.0], [708.0, 1264.0], [723.0, 1511.0], [719.0, 2115.0], [709.0, 10.0], [712.0, 345.0], [717.0, 4378.0], [722.0, 4441.0], [735.0, 2036.0], [720.0, 2405.0], [725.0, 8996.0], [727.0, 1789.0], [724.0, 3501.0], [730.0, 9.0], [731.0, 2193.5], [764.0, 81.0], [759.0, 1245.0], [754.0, 2062.0], [758.0, 7024.0], [747.0, 1829.0], [748.0, 1731.0], [738.0, 1985.0], [763.0, 3226.0], [753.0, 1998.5], [746.0, 2200.5], [752.0, 2172.0], [765.0, 6116.0], [751.0, 1714.0], [799.0, 2100.0], [782.0, 458.0], [777.0, 1919.0], [789.0, 1574.5], [790.0, 2212.5], [778.0, 2355.0], [796.0, 2037.0], [798.0, 3257.5], [788.0, 1491.0], [772.0, 1939.0], [794.0, 1616.0], [803.0, 2008.0], [808.0, 373.0], [831.0, 2205.5], [809.0, 2003.0], [823.0, 1762.0], [806.0, 1617.5], [805.0, 3637.0], [827.0, 1692.0], [801.0, 1618.0], [802.0, 1812.0], [810.0, 2740.5], [800.0, 8448.0], [816.0, 1855.0], [821.0, 1471.0], [837.0, 1662.0], [835.0, 2339.0], [854.0, 1980.0], [833.0, 2449.0], [843.0, 1832.0], [844.0, 4659.0], [832.0, 1689.0], [846.0, 2478.0], [853.0, 1646.0], [857.0, 1592.5], [850.0, 1811.5], [838.0, 1719.5], [890.0, 712.0], [889.0, 2272.0], [871.0, 2485.0], [869.0, 2454.0], [877.0, 3662.0], [884.0, 2804.5], [881.0, 1650.0], [882.0, 607.0], [883.0, 2182.5], [893.0, 3265.0], [918.0, 2003.0], [912.0, 2127.0], [925.0, 1687.0], [902.0, 1606.0], [899.0, 309.0], [943.0, 185.0], [956.0, 2204.0], [951.0, 227.0], [950.0, 1647.0], [938.0, 2270.0], [928.0, 1435.0], [991.0, 267.0], [990.0, 455.0], [960.0, 2138.0], [1021.0, 483.0], [1010.0, 1788.0], [1081.0, 650.0], [1062.0, 553.5], [1057.0, 407.0], [1098.0, 445.0], [1142.0, 62.0], [1357.0, 2422.0], [1.0, 2181.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 1033.0], [3.0, 1229.0], [4.0, 684.0], [5.0, 959.5], [6.0, 1204.0], [7.0, 1960.5], [8.0, 951.0], [9.0, 1200.0], [10.0, 590.5], [11.0, 795.0], [12.0, 1475.0], [13.0, 1516.0], [14.0, 343.5], [15.0, 385.0], [17.0, 327.5], [23.0, 168.5], [26.0, 1562.0], [29.0, 2102.5], [31.0, 1980.0], [35.0, 2354.0], [37.0, 356.5], [39.0, 1623.0], [40.0, 710.0], [41.0, 1487.0], [43.0, 845.0], [44.0, 1787.0], [47.0, 799.0], [46.0, 769.0], [50.0, 1656.0], [53.0, 2148.5], [55.0, 841.0], [56.0, 885.0], [58.0, 81.0], [66.0, 1623.0], [71.0, 1809.0], [68.0, 2285.0], [72.0, 2754.0], [77.0, 343.0], [76.0, 1064.0], [82.0, 1956.5], [91.0, 893.0], [94.0, 2907.0], [98.0, 1836.0], [100.0, 932.0], [101.0, 635.0], [103.0, 1430.0], [107.0, 1393.5], [106.0, 2169.0], [108.0, 1489.0], [110.0, 410.0], [115.0, 319.0], [114.0, 2180.0], [116.0, 1129.5], [125.0, 1458.0], [127.0, 281.0], [135.0, 1087.0], [143.0, 18.0], [137.0, 742.5], [142.0, 2020.0], [149.0, 109.0], [159.0, 310.0], [153.0, 198.0], [157.0, 120.5], [163.0, 6.0], [162.0, 582.5], [167.0, 269.0], [165.0, 125.0], [166.0, 1076.5], [164.0, 2175.0], [168.0, 1526.0], [174.0, 1521.5], [170.0, 209.0], [173.0, 1210.5], [177.0, 320.0], [185.0, 1335.0], [196.0, 4.0], [193.0, 593.0], [202.0, 3.0], [205.0, 5.0], [204.0, 794.0], [210.0, 582.5], [213.0, 559.0], [209.0, 403.0], [211.0, 1013.0], [219.0, 13.0], [221.0, 430.0], [220.0, 466.5], [218.0, 665.0], [216.0, 144.0], [217.0, 454.0], [224.0, 213.0], [226.0, 380.0], [228.0, 1166.5], [225.0, 1956.0], [239.0, 1186.0], [233.0, 1291.0], [232.0, 1446.0], [246.0, 12.0], [247.0, 1449.0], [240.0, 473.0], [244.0, 174.0], [241.0, 1506.0], [254.0, 7.0], [255.0, 731.0], [251.0, 415.0], [262.0, 383.0], [269.0, 817.0], [267.0, 1275.0], [257.0, 772.0], [268.0, 1211.0], [260.0, 542.0], [274.0, 14.0], [277.0, 10.0], [272.0, 1104.0], [286.0, 24.0], [273.0, 776.0], [287.0, 990.0], [276.0, 174.5], [283.0, 286.0], [282.0, 621.0], [281.0, 431.5], [289.0, 1174.0], [292.0, 749.5], [301.0, 35.0], [290.0, 866.0], [299.0, 500.0], [300.0, 228.0], [294.0, 680.0], [302.0, 653.0], [312.0, 173.0], [318.0, 870.0], [307.0, 342.0], [319.0, 1978.0], [321.0, 1038.0], [333.0, 741.0], [331.0, 355.0], [332.0, 603.0], [335.0, 768.0], [325.0, 406.0], [328.0, 1072.0], [347.0, 1725.0], [345.0, 1466.0], [349.0, 1529.0], [339.0, 1141.0], [346.0, 447.0], [336.0, 9.0], [341.0, 726.0], [338.0, 183.0], [365.0, 886.5], [352.0, 1234.0], [359.0, 632.0], [367.0, 343.0], [356.0, 1437.0], [358.0, 975.0], [376.0, 1132.0], [378.0, 1473.0], [374.0, 910.0], [383.0, 675.0], [380.0, 767.0], [386.0, 1431.0], [399.0, 1542.0], [389.0, 1454.0], [385.0, 812.0], [394.0, 1286.0], [397.0, 591.0], [387.0, 292.0], [407.0, 1396.0], [411.0, 1879.0], [410.0, 1345.0], [419.0, 1114.0], [426.0, 221.0], [438.0, 844.0], [433.0, 432.0], [437.0, 323.0], [443.0, 759.0], [446.0, 704.0], [435.0, 746.0], [441.0, 1033.0], [452.0, 2118.0], [460.0, 1370.0], [461.0, 733.0], [449.0, 793.0], [456.0, 619.0], [462.0, 1309.0], [448.0, 3433.0], [471.0, 690.0], [465.0, 556.0], [473.0, 384.0], [486.0, 761.0], [485.0, 971.0], [487.0, 868.0], [507.0, 886.0], [498.0, 599.0], [510.0, 923.0], [536.0, 1123.0], [540.0, 1379.0], [515.0, 1510.0], [516.0, 598.0], [530.0, 8.5], [522.0, 830.0], [524.0, 1129.0], [532.0, 785.0], [525.0, 1256.0], [528.0, 1047.0], [517.0, 976.0], [519.0, 1442.0], [571.0, 1508.0], [575.0, 1849.0], [554.0, 1034.0], [572.0, 1201.0], [573.0, 838.0], [568.0, 1031.0], [569.0, 456.0], [547.0, 676.0], [544.0, 1795.0], [566.0, 803.0], [563.0, 1469.0], [560.0, 1273.5], [558.0, 1048.0], [559.0, 1447.0], [567.0, 889.0], [581.0, 709.0], [585.0, 1178.0], [590.0, 504.0], [578.0, 4.0], [607.0, 1409.0], [576.0, 1627.0], [582.0, 597.0], [592.0, 1137.0], [594.0, 684.0], [610.0, 1083.0], [634.0, 596.0], [618.0, 819.0], [616.0, 742.0], [612.0, 1055.0], [628.0, 1369.0], [639.0, 1029.0], [633.0, 1161.0], [645.0, 810.0], [662.0, 692.0], [670.0, 774.0], [651.0, 861.0], [649.0, 786.0], [654.0, 1039.0], [665.0, 807.0], [668.0, 1450.0], [640.0, 728.0], [661.0, 678.0], [657.0, 2175.0], [676.0, 754.0], [672.0, 987.5], [692.0, 1168.0], [702.0, 1025.5], [688.0, 637.0], [699.0, 879.0], [694.0, 965.0], [687.0, 987.0], [680.0, 1834.0], [681.0, 2001.0], [684.0, 4133.0], [728.0, 999.0], [734.0, 1088.0], [708.0, 935.0], [723.0, 694.0], [719.0, 1595.0], [712.0, 1266.0], [717.0, 1716.0], [722.0, 1020.0], [735.0, 1289.0], [720.0, 1656.0], [725.0, 3010.0], [727.0, 1126.0], [724.0, 1237.0], [730.0, 1373.0], [731.0, 1087.0], [764.0, 592.5], [759.0, 486.0], [754.0, 1500.0], [758.0, 1371.0], [747.0, 1190.0], [748.0, 1159.0], [738.0, 1079.5], [763.0, 797.0], [753.0, 1301.0], [746.0, 1595.0], [752.0, 1074.0], [765.0, 975.5], [751.0, 1345.0], [799.0, 1348.0], [782.0, 1139.0], [777.0, 1200.0], [789.0, 587.0], [790.0, 1654.0], [778.0, 493.0], [796.0, 472.0], [798.0, 1026.0], [788.0, 628.0], [772.0, 691.0], [794.0, 588.0], [803.0, 891.0], [808.0, 1328.0], [831.0, 1523.0], [809.0, 1357.0], [823.0, 1046.5], [806.0, 1170.5], [805.0, 764.0], [827.0, 1018.0], [801.0, 874.0], [802.0, 1280.0], [810.0, 1566.0], [800.0, 1972.0], [816.0, 1055.0], [821.0, 620.0], [837.0, 1208.0], [835.0, 1128.0], [854.0, 1255.0], [833.0, 1315.0], [843.0, 1319.0], [844.0, 987.0], [832.0, 1248.0], [846.0, 1018.0], [853.0, 1058.0], [857.0, 953.0], [850.0, 994.0], [838.0, 1065.5], [890.0, 1156.0], [889.0, 576.0], [871.0, 1440.0], [869.0, 1710.5], [877.0, 2235.0], [884.0, 1358.0], [881.0, 922.0], [882.0, 1337.5], [883.0, 1299.0], [893.0, 1047.0], [918.0, 1151.0], [912.0, 1473.0], [925.0, 1293.0], [902.0, 875.0], [899.0, 807.0], [943.0, 1433.0], [956.0, 1357.0], [951.0, 1532.0], [950.0, 1066.0], [938.0, 1284.0], [928.0, 739.0], [991.0, 1260.0], [990.0, 1328.0], [960.0, 972.0], [1021.0, 1374.0], [1010.0, 810.0], [1081.0, 1151.0], [1062.0, 1280.0], [1057.0, 798.5], [1098.0, 954.0], [1142.0, 1051.0], [1357.0, 575.0], [1.0, 1274.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1357.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 11353.5, "series": [{"data": [[2.0, 559.0], [3.0, 213.0], [4.0, 157.0], [5.0, 2252.0], [6.0, 589.0], [7.0, 986.0], [8.0, 907.5], [9.0, 1048.5], [10.0, 16.5], [11.0, 1067.0], [12.0, 1936.0], [13.0, 2341.5], [14.0, 16.5], [15.0, 3498.5], [17.0, 17.0], [18.0, 10.0], [19.0, 11.0], [20.0, 11.0], [23.0, 4738.0], [25.0, 11.0], [26.0, 1726.5], [28.0, 10.0], [29.0, 269.0], [31.0, 132.0], [32.0, 9.0], [33.0, 7.0], [34.0, 11.0], [35.0, 5654.0], [37.0, 2834.0], [39.0, 67.0], [41.0, 6.0], [40.0, 120.5], [42.0, 8.0], [43.0, 7.0], [44.0, 4309.0], [47.0, 1908.0], [46.0, 44.5], [51.0, 5.0], [50.0, 867.0], [53.0, 67.5], [55.0, 6.0], [56.0, 754.0], [58.0, 7.0], [61.0, 6.0], [65.0, 6.0], [66.0, 7.5], [64.0, 2018.0], [68.0, 5.0], [69.0, 7.0], [71.0, 137.0], [73.0, 6.0], [72.0, 18.0], [77.0, 141.0], [76.0, 1245.0], [81.0, 6.0], [82.0, 6.5], [80.0, 6.0], [83.0, 6.0], [84.0, 6.0], [87.0, 7.0], [88.0, 152.0], [91.0, 2195.0], [94.0, 7.0], [97.0, 9.0], [98.0, 68.0], [100.0, 9.0], [101.0, 9.0], [103.0, 1829.0], [105.0, 6.0], [107.0, 8.0], [106.0, 4483.5], [108.0, 2216.0], [110.0, 13.0], [115.0, 467.0], [114.0, 5568.0], [119.0, 8.0], [117.0, 9.0], [116.0, 290.0], [122.0, 9.0], [121.0, 462.0], [124.0, 9.0], [127.0, 19.5], [125.0, 1934.0], [133.0, 10.0], [135.0, 1531.0], [136.0, 10.0], [137.0, 443.0], [142.0, 10.0], [143.0, 16.5], [150.0, 8.0], [147.0, 15.0], [149.0, 268.0], [155.0, 10.0], [154.0, 14.0], [156.0, 10.0], [159.0, 17.0], [157.0, 10.0], [153.0, 591.0], [163.0, 12.0], [162.0, 10.0], [161.0, 5.0], [164.0, 7.0], [165.0, 12.0], [167.0, 129.0], [166.0, 140.0], [173.0, 6.0], [175.0, 6.0], [168.0, 1897.0], [174.0, 2540.5], [170.0, 6.0], [183.0, 6.0], [182.0, 111.5], [177.0, 441.0], [187.0, 9.0], [189.0, 8.0], [191.0, 9.0], [185.0, 600.5], [194.0, 9.0], [197.0, 12.0], [192.0, 12.0], [196.0, 6.0], [193.0, 436.5], [206.0, 9.0], [202.0, 5.0], [205.0, 6.0], [204.0, 299.0], [211.0, 8.0], [210.0, 472.5], [208.0, 5.0], [213.0, 853.0], [209.0, 146.0], [220.0, 16.0], [219.0, 4.0], [223.0, 4.0], [222.0, 7.0], [221.0, 832.0], [218.0, 570.0], [216.0, 576.0], [217.0, 737.0], [224.0, 10.0], [227.0, 5.0], [226.0, 18.0], [231.0, 9.0], [228.0, 461.5], [225.0, 2607.0], [238.0, 5.0], [237.0, 9.0], [239.0, 1925.0], [233.0, 1867.0], [232.0, 5463.0], [246.0, 5.0], [241.0, 8.0], [247.0, 8.0], [245.0, 8.0], [240.0, 632.0], [244.0, 367.5], [249.0, 8.0], [252.0, 5.0], [254.0, 6.0], [255.0, 13.0], [251.0, 676.0], [257.0, 13.0], [270.0, 13.0], [262.0, 19.0], [269.0, 7.0], [264.0, 8.0], [267.0, 36.0], [268.0, 100.0], [260.0, 823.0], [275.0, 9.0], [272.0, 12.0], [277.0, 11.0], [286.0, 14.0], [274.0, 23.0], [287.0, 14.0], [282.0, 35.0], [281.0, 3061.0], [283.0, 463.5], [273.0, 1472.5], [276.0, 294.5], [301.0, 18.5], [288.0, 8.0], [289.0, 22.0], [292.0, 19.0], [294.0, 763.0], [299.0, 36.0], [297.0, 37.0], [302.0, 112.0], [290.0, 1507.0], [300.0, 523.0], [312.0, 33.5], [318.0, 507.0], [307.0, 1733.0], [319.0, 2507.0], [321.0, 1163.0], [333.0, 1670.0], [331.0, 606.0], [332.0, 919.0], [335.0, 851.0], [325.0, 644.0], [328.0, 1911.0], [347.0, 4956.0], [345.0, 2657.0], [349.0, 1124.5], [339.0, 865.0], [346.0, 592.0], [336.0, 30.0], [341.0, 223.5], [338.0, 2875.0], [365.0, 3675.0], [352.0, 5217.0], [359.0, 1215.0], [367.0, 1204.0], [356.0, 1714.0], [358.0, 2173.5], [376.0, 1948.0], [378.0, 2223.0], [374.0, 1307.0], [383.0, 1044.0], [380.0, 6467.0], [386.0, 3210.0], [399.0, 2108.0], [389.0, 2474.0], [385.0, 1166.0], [394.0, 974.0], [397.0, 1895.5], [387.0, 291.5], [407.0, 2678.0], [411.0, 2488.0], [410.0, 623.0], [419.0, 3861.5], [426.0, 474.0], [438.0, 1627.0], [433.0, 710.0], [437.0, 573.0], [443.0, 1033.5], [446.0, 1069.0], [435.0, 2945.0], [441.0, 10005.5], [452.0, 2644.5], [460.0, 4127.5], [461.0, 2087.0], [449.0, 1022.0], [456.0, 694.0], [462.0, 2608.0], [448.0, 3553.5], [471.0, 1628.0], [465.0, 354.0], [473.0, 645.0], [486.0, 2366.0], [485.0, 2977.5], [487.0, 7179.5], [507.0, 1100.0], [510.0, 1245.0], [498.0, 1069.0], [536.0, 3129.0], [540.0, 1834.0], [515.0, 1950.0], [516.0, 544.0], [530.0, 33.0], [522.0, 1044.0], [524.0, 1480.0], [532.0, 1658.5], [525.0, 408.0], [528.0, 1256.0], [517.0, 1066.0], [519.0, 1930.0], [571.0, 850.5], [575.0, 4415.0], [554.0, 138.0], [572.0, 1520.0], [573.0, 5191.0], [568.0, 6330.5], [569.0, 502.0], [547.0, 1293.5], [544.0, 1212.0], [566.0, 1395.0], [563.0, 4309.0], [560.0, 5518.0], [558.0, 1308.0], [559.0, 401.0], [567.0, 869.0], [581.0, 1816.5], [585.0, 2005.0], [590.0, 946.0], [578.0, 11.0], [607.0, 2329.0], [576.0, 2516.5], [582.0, 1175.0], [592.0, 620.5], [594.0, 1514.0], [610.0, 1849.0], [634.0, 1565.0], [623.0, 7.0], [618.0, 1470.5], [616.0, 175.5], [612.0, 87.0], [628.0, 1947.0], [639.0, 2793.0], [633.0, 3258.5], [645.0, 2056.0], [662.0, 1307.0], [670.0, 1291.0], [651.0, 1264.5], [649.0, 1428.0], [654.0, 1722.0], [665.0, 1928.0], [668.0, 7591.0], [640.0, 4040.0], [661.0, 3865.0], [657.0, 8852.0], [676.0, 1190.0], [672.0, 1578.0], [692.0, 1453.0], [702.0, 2195.0], [688.0, 2470.0], [699.0, 2509.0], [694.0, 5504.0], [687.0, 2881.0], [680.0, 8733.0], [681.0, 11353.5], [684.0, 4727.0], [728.0, 1558.0], [734.0, 1846.0], [708.0, 1259.0], [723.0, 1499.0], [719.0, 2110.0], [709.0, 9.0], [712.0, 343.0], [717.0, 4320.0], [722.0, 3500.0], [735.0, 2032.0], [720.0, 2401.0], [725.0, 6763.0], [727.0, 262.0], [724.0, 3501.0], [730.0, 7.0], [731.0, 1281.0], [764.0, 65.0], [759.0, 1243.0], [754.0, 2057.0], [758.0, 7017.0], [747.0, 1829.0], [748.0, 1731.0], [738.0, 1900.5], [763.0, 3226.0], [753.0, 1998.0], [746.0, 2199.0], [752.0, 2149.0], [765.0, 4847.0], [751.0, 1713.0], [799.0, 2091.0], [782.0, 455.0], [777.0, 1909.0], [789.0, 1574.0], [790.0, 2211.0], [778.0, 2355.0], [796.0, 2023.0], [798.0, 3035.5], [788.0, 1466.0], [772.0, 1938.0], [794.0, 1562.0], [803.0, 1964.0], [808.0, 371.0], [831.0, 2205.0], [809.0, 1983.0], [823.0, 1761.0], [806.0, 1604.5], [805.0, 2370.0], [827.0, 1691.0], [801.0, 1618.0], [802.0, 1812.0], [810.0, 2739.5], [800.0, 8447.0], [816.0, 1854.0], [821.0, 1410.0], [837.0, 1655.0], [835.0, 2326.0], [854.0, 1980.0], [833.0, 2449.0], [843.0, 1831.0], [844.0, 4657.0], [832.0, 1688.5], [846.0, 2477.0], [853.0, 1646.0], [857.0, 1579.0], [850.0, 1808.0], [838.0, 1718.5], [890.0, 705.0], [889.0, 2271.0], [871.0, 2480.5], [869.0, 2454.0], [877.0, 3129.0], [884.0, 2804.0], [881.0, 1557.0], [882.0, 589.5], [883.0, 2182.0], [893.0, 2135.0], [918.0, 1988.0], [912.0, 2119.0], [925.0, 1686.0], [902.0, 1601.0], [899.0, 308.0], [943.0, 172.0], [956.0, 2173.5], [951.0, 193.0], [950.0, 1646.0], [938.0, 2239.0], [928.0, 1376.0], [991.0, 238.5], [990.0, 452.0], [960.0, 2137.0], [1021.0, 477.0], [1010.0, 1785.0], [1081.0, 647.0], [1062.0, 548.0], [1057.0, 407.0], [1098.0, 399.0], [1142.0, 62.0], [1357.0, 965.0], [1.0, 1138.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[2.0, 0.0], [3.0, 0.0], [4.0, 0.0], [5.0, 0.0], [6.0, 0.0], [7.0, 0.0], [8.0, 0.0], [9.0, 0.0], [10.0, 0.0], [11.0, 0.0], [12.0, 0.0], [13.0, 0.0], [14.0, 0.0], [15.0, 0.0], [17.0, 0.0], [23.0, 0.0], [26.0, 0.0], [29.0, 0.0], [31.0, 0.0], [35.0, 0.0], [37.0, 0.0], [39.0, 0.0], [40.0, 0.0], [41.0, 0.0], [43.0, 0.0], [44.0, 0.0], [47.0, 0.0], [46.0, 0.0], [50.0, 0.0], [53.0, 0.0], [55.0, 0.0], [56.0, 0.0], [58.0, 20.0], [66.0, 0.0], [71.0, 0.0], [68.0, 0.0], [72.0, 0.0], [77.0, 0.0], [76.0, 0.0], [82.0, 0.0], [91.0, 0.0], [94.0, 0.0], [98.0, 0.0], [100.0, 0.0], [101.0, 0.0], [103.0, 0.0], [107.0, 0.0], [106.0, 0.0], [108.0, 0.0], [110.0, 0.0], [115.0, 0.0], [114.0, 0.0], [116.0, 0.0], [125.0, 0.0], [127.0, 0.0], [135.0, 0.0], [143.0, 16.0], [137.0, 0.0], [142.0, 0.0], [149.0, 0.0], [159.0, 0.0], [153.0, 0.0], [157.0, 0.0], [163.0, 5.0], [162.0, 0.0], [167.0, 0.0], [165.0, 0.0], [166.0, 0.0], [164.0, 0.0], [168.0, 0.0], [174.0, 0.0], [170.0, 0.0], [173.0, 0.0], [177.0, 0.0], [185.0, 0.0], [196.0, 4.0], [193.0, 0.0], [202.0, 3.0], [205.0, 5.0], [204.0, 0.0], [210.0, 0.0], [213.0, 0.0], [209.0, 0.0], [211.0, 0.0], [219.0, 9.0], [221.0, 0.0], [220.0, 0.0], [218.0, 0.0], [216.0, 0.0], [217.0, 0.0], [224.0, 0.0], [226.0, 0.0], [228.0, 0.0], [225.0, 0.0], [239.0, 0.0], [233.0, 0.0], [232.0, 0.0], [246.0, 12.0], [247.0, 0.0], [240.0, 0.0], [244.0, 0.0], [241.0, 0.0], [254.0, 7.0], [255.0, 0.0], [251.0, 0.0], [262.0, 0.0], [269.0, 0.0], [267.0, 0.0], [257.0, 0.0], [268.0, 0.0], [260.0, 0.0], [274.0, 14.0], [277.0, 10.0], [272.0, 0.0], [286.0, 24.0], [273.0, 0.0], [287.0, 0.0], [276.0, 0.0], [283.0, 0.0], [282.0, 0.0], [281.0, 0.0], [289.0, 0.0], [292.0, 0.0], [301.0, 35.0], [290.0, 0.0], [299.0, 0.0], [300.0, 0.0], [294.0, 0.0], [302.0, 0.0], [312.0, 0.0], [318.0, 0.0], [307.0, 0.0], [319.0, 0.0], [321.0, 0.0], [333.0, 0.0], [331.0, 0.0], [332.0, 0.0], [335.0, 0.0], [325.0, 0.0], [328.0, 0.0], [347.0, 0.0], [345.0, 0.0], [349.0, 0.0], [339.0, 0.0], [346.0, 0.0], [336.0, 0.0], [341.0, 0.0], [338.0, 0.0], [365.0, 0.0], [352.0, 0.0], [359.0, 0.0], [367.0, 0.0], [356.0, 0.0], [358.0, 0.0], [376.0, 0.0], [378.0, 0.0], [374.0, 0.0], [383.0, 0.0], [380.0, 0.0], [386.0, 0.0], [399.0, 0.0], [389.0, 0.0], [385.0, 0.0], [394.0, 0.0], [397.0, 0.0], [387.0, 0.0], [407.0, 0.0], [411.0, 0.0], [410.0, 0.0], [419.0, 0.0], [426.0, 0.0], [438.0, 0.0], [433.0, 0.0], [437.0, 0.0], [443.0, 0.0], [446.0, 0.0], [435.0, 0.0], [441.0, 0.0], [452.0, 0.0], [460.0, 0.0], [461.0, 0.0], [449.0, 0.0], [456.0, 0.0], [462.0, 0.0], [448.0, 0.0], [471.0, 0.0], [465.0, 0.0], [473.0, 0.0], [486.0, 0.0], [485.0, 0.0], [487.0, 0.0], [507.0, 0.0], [498.0, 0.0], [510.0, 0.0], [536.0, 0.0], [540.0, 0.0], [515.0, 0.0], [516.0, 0.0], [530.0, 8.0], [522.0, 0.0], [524.0, 0.0], [532.0, 0.0], [525.0, 0.0], [528.0, 0.0], [517.0, 0.0], [519.0, 0.0], [571.0, 0.0], [575.0, 0.0], [554.0, 0.0], [572.0, 0.0], [573.0, 0.0], [568.0, 0.0], [569.0, 0.0], [547.0, 0.0], [544.0, 0.0], [566.0, 0.0], [563.0, 0.0], [560.0, 0.0], [558.0, 0.0], [559.0, 0.0], [567.0, 0.0], [581.0, 0.0], [585.0, 0.0], [590.0, 0.0], [578.0, 4.0], [607.0, 0.0], [576.0, 0.0], [582.0, 0.0], [592.0, 0.0], [594.0, 0.0], [610.0, 0.0], [634.0, 0.0], [618.0, 0.0], [616.0, 0.0], [612.0, 0.0], [628.0, 0.0], [639.0, 0.0], [633.0, 0.0], [645.0, 0.0], [662.0, 0.0], [670.0, 0.0], [651.0, 0.0], [649.0, 0.0], [654.0, 0.0], [665.0, 0.0], [668.0, 0.0], [640.0, 0.0], [661.0, 0.0], [657.0, 0.0], [676.0, 0.0], [672.0, 0.0], [692.0, 0.0], [702.0, 0.0], [688.0, 0.0], [699.0, 0.0], [694.0, 0.0], [687.0, 0.0], [680.0, 0.0], [681.0, 0.0], [684.0, 0.0], [728.0, 0.0], [734.0, 0.0], [708.0, 0.0], [723.0, 0.0], [719.0, 0.0], [712.0, 0.0], [717.0, 0.0], [722.0, 0.0], [735.0, 0.0], [720.0, 0.0], [725.0, 0.0], [727.0, 0.0], [724.0, 0.0], [730.0, 0.0], [731.0, 0.0], [764.0, 0.0], [759.0, 0.0], [754.0, 0.0], [758.0, 0.0], [747.0, 0.0], [748.0, 0.0], [738.0, 0.0], [763.0, 0.0], [753.0, 0.0], [746.0, 0.0], [752.0, 0.0], [765.0, 0.0], [751.0, 0.0], [799.0, 0.0], [782.0, 0.0], [777.0, 0.0], [789.0, 0.0], [790.0, 0.0], [778.0, 0.0], [796.0, 0.0], [798.0, 0.0], [788.0, 0.0], [772.0, 0.0], [794.0, 0.0], [803.0, 0.0], [808.0, 0.0], [831.0, 0.0], [809.0, 0.0], [823.0, 0.0], [806.0, 0.0], [805.0, 0.0], [827.0, 0.0], [801.0, 0.0], [802.0, 0.0], [810.0, 0.0], [800.0, 0.0], [816.0, 0.0], [821.0, 0.0], [837.0, 0.0], [835.0, 0.0], [854.0, 0.0], [833.0, 0.0], [843.0, 0.0], [844.0, 0.0], [832.0, 0.0], [846.0, 0.0], [853.0, 0.0], [857.0, 0.0], [850.0, 0.0], [838.0, 0.0], [890.0, 0.0], [889.0, 0.0], [871.0, 0.0], [869.0, 0.0], [877.0, 0.0], [884.0, 0.0], [881.0, 0.0], [882.0, 0.0], [883.0, 0.0], [893.0, 0.0], [918.0, 0.0], [912.0, 0.0], [925.0, 0.0], [902.0, 0.0], [899.0, 0.0], [943.0, 0.0], [956.0, 0.0], [951.0, 0.0], [950.0, 0.0], [938.0, 0.0], [928.0, 0.0], [991.0, 0.0], [990.0, 0.0], [960.0, 0.0], [1021.0, 0.0], [1010.0, 0.0], [1081.0, 0.0], [1062.0, 0.0], [1057.0, 0.0], [1098.0, 0.0], [1142.0, 0.0], [1357.0, 0.0], [1.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1357.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 10.85, "minX": 1.69980972E12, "maxY": 439.06666666666666, "series": [{"data": [[1.69981008E12, 348.9], [1.69980978E12, 192.33333333333334], [1.69981044E12, 10.85], [1.69981014E12, 430.23333333333335], [1.69980984E12, 208.23333333333332], [1.6998102E12, 423.43333333333334], [1.6998099E12, 201.76666666666668], [1.69981026E12, 359.03333333333336], [1.69980996E12, 400.06666666666666], [1.69981032E12, 439.06666666666666], [1.69981002E12, 353.18333333333334], [1.69980972E12, 59.8], [1.69981038E12, 231.7]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69981044E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69980972E12, "maxY": 383.5833333333333, "series": [{"data": [[1.69981008E12, 77.56666666666666], [1.69980978E12, 192.13333333333333], [1.69981044E12, 6.416666666666667], [1.69981014E12, 77.91666666666667], [1.69980984E12, 115.33333333333333], [1.6998102E12, 90.41666666666667], [1.6998099E12, 47.266666666666666], [1.69981026E12, 74.56666666666666], [1.69980996E12, 120.46666666666667], [1.69981032E12, 56.516666666666666], [1.69981002E12, 79.4], [1.69980972E12, 59.78333333333333], [1.69981038E12, 43.61666666666667]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.69981008E12, 0.18333333333333332], [1.69980978E12, 0.18333333333333332], [1.69981044E12, 0.016666666666666666], [1.69981014E12, 0.4], [1.69980984E12, 0.2], [1.6998102E12, 0.4166666666666667], [1.6998099E12, 0.06666666666666667], [1.69981026E12, 0.26666666666666666], [1.69980996E12, 0.4166666666666667], [1.69981032E12, 0.3], [1.69981002E12, 0.18333333333333332], [1.69980972E12, 0.016666666666666666], [1.69981038E12, 0.2]], "isOverall": false, "label": "422", "isController": false}, {"data": [[1.69981008E12, 275.03333333333336], [1.69981026E12, 283.05], [1.69980996E12, 269.65], [1.69981044E12, 8.316666666666666], [1.69981014E12, 347.93333333333334], [1.69980984E12, 88.53333333333333], [1.69981032E12, 383.5833333333333], [1.69981002E12, 270.3333333333333], [1.6998102E12, 334.8], [1.6998099E12, 158.18333333333334], [1.69981038E12, 194.68333333333334]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.69981038E12, 0.25]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69981044E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69980972E12, "maxY": 383.8833333333333, "series": [{"data": [[1.69981008E12, 77.56666666666666], [1.69980978E12, 192.13333333333333], [1.69981044E12, 6.416666666666667], [1.69981014E12, 77.91666666666667], [1.69980984E12, 115.33333333333333], [1.6998102E12, 90.41666666666667], [1.6998099E12, 47.266666666666666], [1.69981026E12, 74.56666666666666], [1.69980996E12, 120.46666666666667], [1.69981032E12, 56.516666666666666], [1.69981002E12, 79.4], [1.69980972E12, 59.78333333333333], [1.69981038E12, 43.61666666666667]], "isOverall": false, "label": "Create Person Record - Soak Test-success", "isController": false}, {"data": [[1.69981008E12, 275.21666666666664], [1.69980978E12, 0.18333333333333332], [1.69981044E12, 8.333333333333334], [1.69981014E12, 348.3333333333333], [1.69980984E12, 88.73333333333333], [1.6998102E12, 335.21666666666664], [1.6998099E12, 158.25], [1.69981026E12, 283.31666666666666], [1.69980996E12, 270.06666666666666], [1.69981032E12, 383.8833333333333], [1.69981002E12, 270.51666666666665], [1.69980972E12, 0.016666666666666666], [1.69981038E12, 195.13333333333333]], "isOverall": false, "label": "Create Person Record - Soak Test-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69981044E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69980972E12, "maxY": 383.8833333333333, "series": [{"data": [[1.69981008E12, 77.56666666666666], [1.69980978E12, 192.13333333333333], [1.69981044E12, 6.416666666666667], [1.69981014E12, 77.91666666666667], [1.69980984E12, 115.33333333333333], [1.6998102E12, 90.41666666666667], [1.6998099E12, 47.266666666666666], [1.69981026E12, 74.56666666666666], [1.69980996E12, 120.46666666666667], [1.69981032E12, 56.516666666666666], [1.69981002E12, 79.4], [1.69980972E12, 59.78333333333333], [1.69981038E12, 43.61666666666667]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.69981008E12, 275.21666666666664], [1.69980978E12, 0.18333333333333332], [1.69981044E12, 8.333333333333334], [1.69981014E12, 348.3333333333333], [1.69980984E12, 88.73333333333333], [1.6998102E12, 335.21666666666664], [1.6998099E12, 158.25], [1.69981026E12, 283.31666666666666], [1.69980996E12, 270.06666666666666], [1.69981032E12, 383.8833333333333], [1.69981002E12, 270.51666666666665], [1.69980972E12, 0.016666666666666666], [1.69981038E12, 195.13333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69981044E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

