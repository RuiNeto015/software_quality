/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 6.0, "minX": 0.0, "maxY": 34502.0, "series": [{"data": [[0.0, 6.0], [0.1, 9.0], [0.2, 10.0], [0.3, 12.0], [0.4, 13.0], [0.5, 14.0], [0.6, 15.0], [0.7, 16.0], [0.8, 17.0], [0.9, 18.0], [1.0, 19.0], [1.1, 20.0], [1.2, 20.0], [1.3, 21.0], [1.4, 22.0], [1.5, 23.0], [1.6, 24.0], [1.7, 25.0], [1.8, 26.0], [1.9, 27.0], [2.0, 28.0], [2.1, 29.0], [2.2, 29.0], [2.3, 30.0], [2.4, 31.0], [2.5, 32.0], [2.6, 33.0], [2.7, 34.0], [2.8, 35.0], [2.9, 36.0], [3.0, 38.0], [3.1, 39.0], [3.2, 40.0], [3.3, 41.0], [3.4, 42.0], [3.5, 43.0], [3.6, 45.0], [3.7, 46.0], [3.8, 47.0], [3.9, 49.0], [4.0, 50.0], [4.1, 51.0], [4.2, 53.0], [4.3, 54.0], [4.4, 56.0], [4.5, 57.0], [4.6, 59.0], [4.7, 61.0], [4.8, 62.0], [4.9, 64.0], [5.0, 66.0], [5.1, 67.0], [5.2, 69.0], [5.3, 70.0], [5.4, 72.0], [5.5, 74.0], [5.6, 76.0], [5.7, 78.0], [5.8, 80.0], [5.9, 82.0], [6.0, 84.0], [6.1, 86.0], [6.2, 88.0], [6.3, 90.0], [6.4, 92.0], [6.5, 94.0], [6.6, 96.0], [6.7, 98.0], [6.8, 100.0], [6.9, 102.0], [7.0, 104.0], [7.1, 107.0], [7.2, 111.0], [7.3, 114.0], [7.4, 117.0], [7.5, 120.0], [7.6, 123.0], [7.7, 127.0], [7.8, 131.0], [7.9, 137.0], [8.0, 141.0], [8.1, 148.0], [8.2, 154.0], [8.3, 162.0], [8.4, 175.0], [8.5, 189.0], [8.6, 210.0], [8.7, 249.0], [8.8, 313.0], [8.9, 357.0], [9.0, 400.0], [9.1, 443.0], [9.2, 496.0], [9.3, 535.0], [9.4, 577.0], [9.5, 620.0], [9.6, 685.0], [9.7, 756.0], [9.8, 827.0], [9.9, 879.0], [10.0, 910.0], [10.1, 937.0], [10.2, 960.0], [10.3, 977.0], [10.4, 996.0], [10.5, 1013.0], [10.6, 1029.0], [10.7, 1045.0], [10.8, 1060.0], [10.9, 1075.0], [11.0, 1087.0], [11.1, 1100.0], [11.2, 1111.0], [11.3, 1121.0], [11.4, 1129.0], [11.5, 1138.0], [11.6, 1144.0], [11.7, 1152.0], [11.8, 1159.0], [11.9, 1166.0], [12.0, 1172.0], [12.1, 1179.0], [12.2, 1186.0], [12.3, 1193.0], [12.4, 1200.0], [12.5, 1207.0], [12.6, 1213.0], [12.7, 1219.0], [12.8, 1226.0], [12.9, 1233.0], [13.0, 1238.0], [13.1, 1244.0], [13.2, 1252.0], [13.3, 1259.0], [13.4, 1265.0], [13.5, 1271.0], [13.6, 1279.0], [13.7, 1286.0], [13.8, 1292.0], [13.9, 1298.0], [14.0, 1305.0], [14.1, 1311.0], [14.2, 1318.0], [14.3, 1325.0], [14.4, 1332.0], [14.5, 1338.0], [14.6, 1343.0], [14.7, 1350.0], [14.8, 1355.0], [14.9, 1362.0], [15.0, 1367.0], [15.1, 1371.0], [15.2, 1377.0], [15.3, 1383.0], [15.4, 1389.0], [15.5, 1394.0], [15.6, 1398.0], [15.7, 1403.0], [15.8, 1408.0], [15.9, 1413.0], [16.0, 1419.0], [16.1, 1424.0], [16.2, 1429.0], [16.3, 1433.0], [16.4, 1439.0], [16.5, 1445.0], [16.6, 1450.0], [16.7, 1455.0], [16.8, 1461.0], [16.9, 1466.0], [17.0, 1471.0], [17.1, 1476.0], [17.2, 1481.0], [17.3, 1487.0], [17.4, 1493.0], [17.5, 1497.0], [17.6, 1503.0], [17.7, 1508.0], [17.8, 1513.0], [17.9, 1520.0], [18.0, 1526.0], [18.1, 1533.0], [18.2, 1539.0], [18.3, 1545.0], [18.4, 1551.0], [18.5, 1557.0], [18.6, 1564.0], [18.7, 1569.0], [18.8, 1575.0], [18.9, 1580.0], [19.0, 1586.0], [19.1, 1591.0], [19.2, 1597.0], [19.3, 1603.0], [19.4, 1608.0], [19.5, 1613.0], [19.6, 1618.0], [19.7, 1623.0], [19.8, 1629.0], [19.9, 1634.0], [20.0, 1640.0], [20.1, 1645.0], [20.2, 1652.0], [20.3, 1657.0], [20.4, 1663.0], [20.5, 1668.0], [20.6, 1673.0], [20.7, 1678.0], [20.8, 1683.0], [20.9, 1688.0], [21.0, 1693.0], [21.1, 1698.0], [21.2, 1703.0], [21.3, 1710.0], [21.4, 1715.0], [21.5, 1721.0], [21.6, 1726.0], [21.7, 1733.0], [21.8, 1738.0], [21.9, 1744.0], [22.0, 1749.0], [22.1, 1755.0], [22.2, 1760.0], [22.3, 1766.0], [22.4, 1772.0], [22.5, 1778.0], [22.6, 1784.0], [22.7, 1790.0], [22.8, 1796.0], [22.9, 1804.0], [23.0, 1811.0], [23.1, 1817.0], [23.2, 1824.0], [23.3, 1829.0], [23.4, 1835.0], [23.5, 1843.0], [23.6, 1850.0], [23.7, 1857.0], [23.8, 1863.0], [23.9, 1870.0], [24.0, 1877.0], [24.1, 1885.0], [24.2, 1893.0], [24.3, 1901.0], [24.4, 1907.0], [24.5, 1914.0], [24.6, 1921.0], [24.7, 1929.0], [24.8, 1938.0], [24.9, 1945.0], [25.0, 1953.0], [25.1, 1960.0], [25.2, 1967.0], [25.3, 1975.0], [25.4, 1983.0], [25.5, 1990.0], [25.6, 2000.0], [25.7, 2007.0], [25.8, 2014.0], [25.9, 2023.0], [26.0, 2033.0], [26.1, 2042.0], [26.2, 2050.0], [26.3, 2059.0], [26.4, 2070.0], [26.5, 2079.0], [26.6, 2089.0], [26.7, 2097.0], [26.8, 2108.0], [26.9, 2119.0], [27.0, 2129.0], [27.1, 2140.0], [27.2, 2151.0], [27.3, 2168.0], [27.4, 2188.0], [27.5, 2208.0], [27.6, 2231.0], [27.7, 2259.0], [27.8, 2297.0], [27.9, 2406.0], [28.0, 2939.0], [28.1, 3500.0], [28.2, 3964.0], [28.3, 4014.0], [28.4, 4047.0], [28.5, 4084.0], [28.6, 4114.0], [28.7, 4140.0], [28.8, 4166.0], [28.9, 4193.0], [29.0, 4218.0], [29.1, 4238.0], [29.2, 4260.0], [29.3, 4278.0], [29.4, 4299.0], [29.5, 4316.0], [29.6, 4334.0], [29.7, 4353.0], [29.8, 4366.0], [29.9, 4378.0], [30.0, 4392.0], [30.1, 4403.0], [30.2, 4414.0], [30.3, 4427.0], [30.4, 4441.0], [30.5, 4452.0], [30.6, 4465.0], [30.7, 4477.0], [30.8, 4489.0], [30.9, 4501.0], [31.0, 4513.0], [31.1, 4525.0], [31.2, 4538.0], [31.3, 4552.0], [31.4, 4563.0], [31.5, 4575.0], [31.6, 4590.0], [31.7, 4601.0], [31.8, 4614.0], [31.9, 4625.0], [32.0, 4637.0], [32.1, 4651.0], [32.2, 4663.0], [32.3, 4674.0], [32.4, 4686.0], [32.5, 4699.0], [32.6, 4711.0], [32.7, 4727.0], [32.8, 4741.0], [32.9, 4752.0], [33.0, 4765.0], [33.1, 4776.0], [33.2, 4789.0], [33.3, 4801.0], [33.4, 4815.0], [33.5, 4828.0], [33.6, 4843.0], [33.7, 4858.0], [33.8, 4871.0], [33.9, 4887.0], [34.0, 4896.0], [34.1, 4908.0], [34.2, 4919.0], [34.3, 4932.0], [34.4, 4945.0], [34.5, 4959.0], [34.6, 4972.0], [34.7, 4986.0], [34.8, 5002.0], [34.9, 5014.0], [35.0, 5025.0], [35.1, 5037.0], [35.2, 5052.0], [35.3, 5063.0], [35.4, 5076.0], [35.5, 5087.0], [35.6, 5101.0], [35.7, 5115.0], [35.8, 5128.0], [35.9, 5142.0], [36.0, 5156.0], [36.1, 5167.0], [36.2, 5178.0], [36.3, 5192.0], [36.4, 5204.0], [36.5, 5216.0], [36.6, 5230.0], [36.7, 5244.0], [36.8, 5256.0], [36.9, 5271.0], [37.0, 5284.0], [37.1, 5301.0], [37.2, 5311.0], [37.3, 5325.0], [37.4, 5339.0], [37.5, 5351.0], [37.6, 5364.0], [37.7, 5378.0], [37.8, 5394.0], [37.9, 5405.0], [38.0, 5416.0], [38.1, 5428.0], [38.2, 5437.0], [38.3, 5448.0], [38.4, 5460.0], [38.5, 5470.0], [38.6, 5483.0], [38.7, 5499.0], [38.8, 5510.0], [38.9, 5523.0], [39.0, 5534.0], [39.1, 5547.0], [39.2, 5559.0], [39.3, 5573.0], [39.4, 5585.0], [39.5, 5598.0], [39.6, 5611.0], [39.7, 5625.0], [39.8, 5640.0], [39.9, 5657.0], [40.0, 5672.0], [40.1, 5688.0], [40.2, 5707.0], [40.3, 5721.0], [40.4, 5736.0], [40.5, 5750.0], [40.6, 5765.0], [40.7, 5782.0], [40.8, 5795.0], [40.9, 5812.0], [41.0, 5827.0], [41.1, 5847.0], [41.2, 5865.0], [41.3, 5885.0], [41.4, 5902.0], [41.5, 5921.0], [41.6, 5941.0], [41.7, 5961.0], [41.8, 5982.0], [41.9, 6005.0], [42.0, 6029.0], [42.1, 6054.0], [42.2, 6086.0], [42.3, 6112.0], [42.4, 6148.0], [42.5, 6188.0], [42.6, 6245.0], [42.7, 6352.0], [42.8, 7862.0], [42.9, 8677.0], [43.0, 8767.0], [43.1, 8824.0], [43.2, 8873.0], [43.3, 8915.0], [43.4, 8954.0], [43.5, 8985.0], [43.6, 9015.0], [43.7, 9045.0], [43.8, 9075.0], [43.9, 9104.0], [44.0, 9130.0], [44.1, 9152.0], [44.2, 9177.0], [44.3, 9201.0], [44.4, 9222.0], [44.5, 9242.0], [44.6, 9262.0], [44.7, 9276.0], [44.8, 9289.0], [44.9, 9304.0], [45.0, 9319.0], [45.1, 9335.0], [45.2, 9356.0], [45.3, 9372.0], [45.4, 9387.0], [45.5, 9403.0], [45.6, 9417.0], [45.7, 9431.0], [45.8, 9446.0], [45.9, 9465.0], [46.0, 9480.0], [46.1, 9496.0], [46.2, 9510.0], [46.3, 9527.0], [46.4, 9543.0], [46.5, 9565.0], [46.6, 9585.0], [46.7, 9609.0], [46.8, 9632.0], [46.9, 9646.0], [47.0, 9666.0], [47.1, 9686.0], [47.2, 9704.0], [47.3, 9719.0], [47.4, 9735.0], [47.5, 9752.0], [47.6, 9768.0], [47.7, 9785.0], [47.8, 9798.0], [47.9, 9814.0], [48.0, 9831.0], [48.1, 9849.0], [48.2, 9864.0], [48.3, 9883.0], [48.4, 9900.0], [48.5, 9920.0], [48.6, 9941.0], [48.7, 9961.0], [48.8, 9983.0], [48.9, 10006.0], [49.0, 10023.0], [49.1, 10043.0], [49.2, 10064.0], [49.3, 10088.0], [49.4, 10113.0], [49.5, 10128.0], [49.6, 10148.0], [49.7, 10166.0], [49.8, 10183.0], [49.9, 10198.0], [50.0, 10216.0], [50.1, 10235.0], [50.2, 10251.0], [50.3, 10268.0], [50.4, 10286.0], [50.5, 10303.0], [50.6, 10320.0], [50.7, 10338.0], [50.8, 10358.0], [50.9, 10376.0], [51.0, 10394.0], [51.1, 10411.0], [51.2, 10429.0], [51.3, 10447.0], [51.4, 10472.0], [51.5, 10495.0], [51.6, 10516.0], [51.7, 10540.0], [51.8, 10567.0], [51.9, 10591.0], [52.0, 10618.0], [52.1, 10638.0], [52.2, 10657.0], [52.3, 10682.0], [52.4, 10704.0], [52.5, 10723.0], [52.6, 10745.0], [52.7, 10769.0], [52.8, 10792.0], [52.9, 10813.0], [53.0, 10837.0], [53.1, 10864.0], [53.2, 10893.0], [53.3, 10923.0], [53.4, 10950.0], [53.5, 10988.0], [53.6, 11023.0], [53.7, 11073.0], [53.8, 11134.0], [53.9, 11192.0], [54.0, 11279.0], [54.1, 11393.0], [54.2, 11522.0], [54.3, 12782.0], [54.4, 14331.0], [54.5, 14418.0], [54.6, 14483.0], [54.7, 14542.0], [54.8, 14588.0], [54.9, 14641.0], [55.0, 14690.0], [55.1, 14735.0], [55.2, 14769.0], [55.3, 14800.0], [55.4, 14825.0], [55.5, 14849.0], [55.6, 14871.0], [55.7, 14890.0], [55.8, 14916.0], [55.9, 14938.0], [56.0, 14962.0], [56.1, 14983.0], [56.2, 15006.0], [56.3, 15027.0], [56.4, 15051.0], [56.5, 15074.0], [56.6, 15100.0], [56.7, 15124.0], [56.8, 15149.0], [56.9, 15173.0], [57.0, 15196.0], [57.1, 15218.0], [57.2, 15242.0], [57.3, 15267.0], [57.4, 15291.0], [57.5, 15314.0], [57.6, 15335.0], [57.7, 15355.0], [57.8, 15375.0], [57.9, 15397.0], [58.0, 15417.0], [58.1, 15438.0], [58.2, 15458.0], [58.3, 15481.0], [58.4, 15505.0], [58.5, 15526.0], [58.6, 15544.0], [58.7, 15564.0], [58.8, 15586.0], [58.9, 15604.0], [59.0, 15629.0], [59.1, 15649.0], [59.2, 15671.0], [59.3, 15695.0], [59.4, 15714.0], [59.5, 15734.0], [59.6, 15760.0], [59.7, 15783.0], [59.8, 15800.0], [59.9, 15825.0], [60.0, 15848.0], [60.1, 15873.0], [60.2, 15892.0], [60.3, 15918.0], [60.4, 15942.0], [60.5, 15966.0], [60.6, 15993.0], [60.7, 16016.0], [60.8, 16040.0], [60.9, 16066.0], [61.0, 16095.0], [61.1, 16119.0], [61.2, 16139.0], [61.3, 16162.0], [61.4, 16182.0], [61.5, 16206.0], [61.6, 16227.0], [61.7, 16250.0], [61.8, 16275.0], [61.9, 16299.0], [62.0, 16325.0], [62.1, 16350.0], [62.2, 16379.0], [62.3, 16403.0], [62.4, 16433.0], [62.5, 16458.0], [62.6, 16487.0], [62.7, 16522.0], [62.8, 16562.0], [62.9, 16597.0], [63.0, 16645.0], [63.1, 16687.0], [63.2, 16739.0], [63.3, 16813.0], [63.4, 16903.0], [63.5, 17004.0], [63.6, 17115.0], [63.7, 17388.0], [63.8, 18057.0], [63.9, 18516.0], [64.0, 19050.0], [64.1, 20528.0], [64.2, 20715.0], [64.3, 20843.0], [64.4, 20924.0], [64.5, 20996.0], [64.6, 21045.0], [64.7, 21095.0], [64.8, 21140.0], [64.9, 21183.0], [65.0, 21224.0], [65.1, 21263.0], [65.2, 21292.0], [65.3, 21321.0], [65.4, 21346.0], [65.5, 21379.0], [65.6, 21416.0], [65.7, 21453.0], [65.8, 21481.0], [65.9, 21516.0], [66.0, 21543.0], [66.1, 21572.0], [66.2, 21605.0], [66.3, 21640.0], [66.4, 21668.0], [66.5, 21701.0], [66.6, 21726.0], [66.7, 21759.0], [66.8, 21796.0], [66.9, 21829.0], [67.0, 21855.0], [67.1, 21885.0], [67.2, 21918.0], [67.3, 21950.0], [67.4, 21980.0], [67.5, 22011.0], [67.6, 22042.0], [67.7, 22071.0], [67.8, 22103.0], [67.9, 22139.0], [68.0, 22170.0], [68.1, 22208.0], [68.2, 22236.0], [68.3, 22265.0], [68.4, 22295.0], [68.5, 22316.0], [68.6, 22341.0], [68.7, 22369.0], [68.8, 22399.0], [68.9, 22422.0], [69.0, 22454.0], [69.1, 22479.0], [69.2, 22502.0], [69.3, 22526.0], [69.4, 22555.0], [69.5, 22580.0], [69.6, 22603.0], [69.7, 22628.0], [69.8, 22661.0], [69.9, 22690.0], [70.0, 22719.0], [70.1, 22751.0], [70.2, 22780.0], [70.3, 22806.0], [70.4, 22831.0], [70.5, 22857.0], [70.6, 22884.0], [70.7, 22905.0], [70.8, 22930.0], [70.9, 22953.0], [71.0, 22975.0], [71.1, 23002.0], [71.2, 23029.0], [71.3, 23051.0], [71.4, 23075.0], [71.5, 23105.0], [71.6, 23145.0], [71.7, 23175.0], [71.8, 23216.0], [71.9, 23254.0], [72.0, 23301.0], [72.1, 23333.0], [72.2, 23368.0], [72.3, 23430.0], [72.4, 23481.0], [72.5, 23533.0], [72.6, 23591.0], [72.7, 23636.0], [72.8, 23689.0], [72.9, 23736.0], [73.0, 23773.0], [73.1, 23822.0], [73.2, 23868.0], [73.3, 23902.0], [73.4, 23949.0], [73.5, 23988.0], [73.6, 24028.0], [73.7, 24062.0], [73.8, 24093.0], [73.9, 24129.0], [74.0, 24164.0], [74.1, 24194.0], [74.2, 24226.0], [74.3, 24262.0], [74.4, 24298.0], [74.5, 24332.0], [74.6, 24366.0], [74.7, 24400.0], [74.8, 24426.0], [74.9, 24448.0], [75.0, 24473.0], [75.1, 24504.0], [75.2, 24525.0], [75.3, 24549.0], [75.4, 24571.0], [75.5, 24603.0], [75.6, 24628.0], [75.7, 24659.0], [75.8, 24687.0], [75.9, 24721.0], [76.0, 24748.0], [76.1, 24768.0], [76.2, 24798.0], [76.3, 24828.0], [76.4, 24852.0], [76.5, 24878.0], [76.6, 24909.0], [76.7, 24935.0], [76.8, 24958.0], [76.9, 24985.0], [77.0, 25019.0], [77.1, 25045.0], [77.2, 25075.0], [77.3, 25098.0], [77.4, 25125.0], [77.5, 25149.0], [77.6, 25173.0], [77.7, 25192.0], [77.8, 25224.0], [77.9, 25246.0], [78.0, 25274.0], [78.1, 25307.0], [78.2, 25329.0], [78.3, 25356.0], [78.4, 25380.0], [78.5, 25413.0], [78.6, 25436.0], [78.7, 25464.0], [78.8, 25494.0], [78.9, 25519.0], [79.0, 25540.0], [79.1, 25561.0], [79.2, 25588.0], [79.3, 25612.0], [79.4, 25637.0], [79.5, 25661.0], [79.6, 25686.0], [79.7, 25709.0], [79.8, 25733.0], [79.9, 25759.0], [80.0, 25780.0], [80.1, 25804.0], [80.2, 25832.0], [80.3, 25853.0], [80.4, 25874.0], [80.5, 25898.0], [80.6, 25922.0], [80.7, 25944.0], [80.8, 25969.0], [80.9, 25995.0], [81.0, 26023.0], [81.1, 26049.0], [81.2, 26077.0], [81.3, 26106.0], [81.4, 26134.0], [81.5, 26168.0], [81.6, 26201.0], [81.7, 26232.0], [81.8, 26266.0], [81.9, 26295.0], [82.0, 26327.0], [82.1, 26367.0], [82.2, 26399.0], [82.3, 26437.0], [82.4, 26469.0], [82.5, 26507.0], [82.6, 26547.0], [82.7, 26586.0], [82.8, 26629.0], [82.9, 26663.0], [83.0, 26709.0], [83.1, 26743.0], [83.2, 26784.0], [83.3, 26817.0], [83.4, 26850.0], [83.5, 26883.0], [83.6, 26922.0], [83.7, 26962.0], [83.8, 26998.0], [83.9, 27028.0], [84.0, 27065.0], [84.1, 27101.0], [84.2, 27134.0], [84.3, 27172.0], [84.4, 27213.0], [84.5, 27253.0], [84.6, 27294.0], [84.7, 27330.0], [84.8, 27360.0], [84.9, 27390.0], [85.0, 27418.0], [85.1, 27453.0], [85.2, 27486.0], [85.3, 27518.0], [85.4, 27554.0], [85.5, 27583.0], [85.6, 27618.0], [85.7, 27650.0], [85.8, 27680.0], [85.9, 27708.0], [86.0, 27739.0], [86.1, 27767.0], [86.2, 27791.0], [86.3, 27821.0], [86.4, 27851.0], [86.5, 27876.0], [86.6, 27897.0], [86.7, 27929.0], [86.8, 27959.0], [86.9, 27986.0], [87.0, 28009.0], [87.1, 28037.0], [87.2, 28065.0], [87.3, 28088.0], [87.4, 28111.0], [87.5, 28136.0], [87.6, 28160.0], [87.7, 28187.0], [87.8, 28214.0], [87.9, 28237.0], [88.0, 28260.0], [88.1, 28279.0], [88.2, 28302.0], [88.3, 28327.0], [88.4, 28350.0], [88.5, 28372.0], [88.6, 28397.0], [88.7, 28420.0], [88.8, 28449.0], [88.9, 28482.0], [89.0, 28507.0], [89.1, 28527.0], [89.2, 28559.0], [89.3, 28589.0], [89.4, 28618.0], [89.5, 28646.0], [89.6, 28675.0], [89.7, 28700.0], [89.8, 28726.0], [89.9, 28753.0], [90.0, 28782.0], [90.1, 28811.0], [90.2, 28841.0], [90.3, 28874.0], [90.4, 28898.0], [90.5, 28931.0], [90.6, 28970.0], [90.7, 28995.0], [90.8, 29033.0], [90.9, 29066.0], [91.0, 29101.0], [91.1, 29143.0], [91.2, 29188.0], [91.3, 29228.0], [91.4, 29263.0], [91.5, 29302.0], [91.6, 29339.0], [91.7, 29371.0], [91.8, 29399.0], [91.9, 29430.0], [92.0, 29463.0], [92.1, 29486.0], [92.2, 29509.0], [92.3, 29541.0], [92.4, 29567.0], [92.5, 29590.0], [92.6, 29619.0], [92.7, 29648.0], [92.8, 29682.0], [92.9, 29710.0], [93.0, 29730.0], [93.1, 29758.0], [93.2, 29788.0], [93.3, 29818.0], [93.4, 29842.0], [93.5, 29876.0], [93.6, 29908.0], [93.7, 29937.0], [93.8, 29967.0], [93.9, 30001.0], [94.0, 30008.0], [94.1, 30012.0], [94.2, 30016.0], [94.3, 30021.0], [94.4, 30029.0], [94.5, 30042.0], [94.6, 30060.0], [94.7, 30082.0], [94.8, 30103.0], [94.9, 30127.0], [95.0, 30143.0], [95.1, 30166.0], [95.2, 30195.0], [95.3, 30218.0], [95.4, 30242.0], [95.5, 30264.0], [95.6, 30286.0], [95.7, 30306.0], [95.8, 30334.0], [95.9, 30359.0], [96.0, 30382.0], [96.1, 30402.0], [96.2, 30427.0], [96.3, 30447.0], [96.4, 30467.0], [96.5, 30490.0], [96.6, 30514.0], [96.7, 30540.0], [96.8, 30561.0], [96.9, 30582.0], [97.0, 30605.0], [97.1, 30628.0], [97.2, 30652.0], [97.3, 30677.0], [97.4, 30697.0], [97.5, 30723.0], [97.6, 30748.0], [97.7, 30771.0], [97.8, 30797.0], [97.9, 30826.0], [98.0, 30850.0], [98.1, 30881.0], [98.2, 30907.0], [98.3, 30939.0], [98.4, 30974.0], [98.5, 31005.0], [98.6, 31039.0], [98.7, 31071.0], [98.8, 31111.0], [98.9, 31153.0], [99.0, 31189.0], [99.1, 31225.0], [99.2, 31266.0], [99.3, 31313.0], [99.4, 31371.0], [99.5, 31427.0], [99.6, 31493.0], [99.7, 31564.0], [99.8, 31654.0], [99.9, 31784.0], [100.0, 34502.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 5144.0, "series": [{"data": [[0.0, 5144.0], [100.0, 1337.0], [34500.0, 1.0], [200.0, 161.0], [300.0, 176.0], [400.0, 159.0], [500.0, 183.0], [600.0, 126.0], [700.0, 114.0], [800.0, 139.0], [900.0, 356.0], [1000.0, 511.0], [1100.0, 981.0], [1200.0, 1161.0], [1300.0, 1300.0], [1400.0, 1441.0], [1500.0, 1288.0], [1600.0, 1429.0], [1700.0, 1304.0], [1800.0, 1090.0], [1900.0, 994.0], [2000.0, 855.0], [2100.0, 552.0], [2200.0, 265.0], [2300.0, 68.0], [2400.0, 18.0], [2500.0, 20.0], [2600.0, 16.0], [2800.0, 10.0], [2700.0, 9.0], [2900.0, 13.0], [3000.0, 5.0], [3100.0, 7.0], [3200.0, 16.0], [3300.0, 24.0], [3400.0, 15.0], [3500.0, 10.0], [3700.0, 6.0], [3600.0, 8.0], [3800.0, 17.0], [3900.0, 85.0], [4000.0, 223.0], [4100.0, 278.0], [4200.0, 362.0], [4300.0, 503.0], [4400.0, 622.0], [4500.0, 601.0], [4600.0, 620.0], [4700.0, 598.0], [4800.0, 560.0], [4900.0, 569.0], [5000.0, 620.0], [5100.0, 577.0], [5200.0, 556.0], [5300.0, 575.0], [5400.0, 647.0], [5500.0, 605.0], [5600.0, 494.0], [5700.0, 504.0], [5800.0, 428.0], [5900.0, 371.0], [6000.0, 285.0], [6100.0, 203.0], [6200.0, 106.0], [6300.0, 52.0], [6400.0, 23.0], [6500.0, 3.0], [6600.0, 3.0], [6700.0, 1.0], [6900.0, 2.0], [6800.0, 1.0], [7000.0, 1.0], [7100.0, 3.0], [7200.0, 2.0], [7300.0, 2.0], [7400.0, 3.0], [7600.0, 1.0], [7500.0, 2.0], [7700.0, 2.0], [7900.0, 7.0], [7800.0, 5.0], [8000.0, 7.0], [8100.0, 9.0], [8200.0, 7.0], [8400.0, 5.0], [8300.0, 5.0], [8500.0, 12.0], [8600.0, 31.0], [8700.0, 107.0], [8900.0, 221.0], [9100.0, 310.0], [8800.0, 154.0], [9000.0, 256.0], [9200.0, 433.0], [9300.0, 467.0], [9500.0, 407.0], [9700.0, 486.0], [9400.0, 483.0], [9600.0, 392.0], [10000.0, 359.0], [9800.0, 440.0], [9900.0, 357.0], [10100.0, 428.0], [10200.0, 431.0], [10400.0, 372.0], [10500.0, 311.0], [10300.0, 420.0], [10700.0, 338.0], [10600.0, 340.0], [10800.0, 299.0], [11000.0, 167.0], [10900.0, 234.0], [11100.0, 120.0], [11200.0, 81.0], [11300.0, 69.0], [11400.0, 59.0], [11600.0, 21.0], [11700.0, 10.0], [11500.0, 41.0], [12000.0, 3.0], [11800.0, 2.0], [11900.0, 2.0], [12300.0, 2.0], [12400.0, 1.0], [12700.0, 4.0], [12600.0, 1.0], [12500.0, 1.0], [12900.0, 1.0], [13000.0, 5.0], [13100.0, 2.0], [13200.0, 2.0], [12800.0, 1.0], [13400.0, 1.0], [13700.0, 3.0], [13800.0, 3.0], [14100.0, 7.0], [14200.0, 29.0], [14300.0, 74.0], [13900.0, 2.0], [14000.0, 1.0], [14400.0, 118.0], [14600.0, 149.0], [14700.0, 208.0], [14800.0, 335.0], [14500.0, 149.0], [14900.0, 329.0], [15200.0, 329.0], [15100.0, 315.0], [15000.0, 320.0], [15300.0, 353.0], [15400.0, 351.0], [15500.0, 377.0], [15600.0, 347.0], [15700.0, 354.0], [15800.0, 320.0], [16200.0, 322.0], [15900.0, 307.0], [16100.0, 345.0], [16000.0, 298.0], [16300.0, 293.0], [17200.0, 29.0], [17400.0, 11.0], [16400.0, 273.0], [17000.0, 69.0], [16800.0, 84.0], [16600.0, 164.0], [17600.0, 5.0], [17800.0, 16.0], [18200.0, 17.0], [18400.0, 18.0], [18000.0, 11.0], [18600.0, 14.0], [19000.0, 11.0], [18800.0, 15.0], [19200.0, 4.0], [19400.0, 3.0], [19600.0, 4.0], [20400.0, 21.0], [19800.0, 2.0], [20200.0, 4.0], [20600.0, 47.0], [20800.0, 72.0], [21000.0, 154.0], [21400.0, 224.0], [21200.0, 217.0], [21800.0, 255.0], [21600.0, 232.0], [22000.0, 244.0], [22200.0, 266.0], [22400.0, 295.0], [22600.0, 265.0], [22800.0, 311.0], [23000.0, 296.0], [23200.0, 189.0], [23400.0, 137.0], [23600.0, 161.0], [24000.0, 212.0], [23800.0, 188.0], [24200.0, 220.0], [24400.0, 295.0], [24600.0, 259.0], [24800.0, 266.0], [25000.0, 274.0], [25200.0, 264.0], [25400.0, 276.0], [26000.0, 266.0], [25600.0, 308.0], [26200.0, 244.0], [25800.0, 317.0], [26400.0, 215.0], [26600.0, 199.0], [26800.0, 224.0], [27000.0, 223.0], [27200.0, 192.0], [27400.0, 243.0], [27600.0, 249.0], [28200.0, 334.0], [27800.0, 288.0], [28000.0, 293.0], [28600.0, 267.0], [28400.0, 276.0], [29200.0, 207.0], [29000.0, 217.0], [29400.0, 266.0], [29600.0, 256.0], [28800.0, 267.0], [30200.0, 334.0], [29800.0, 256.0], [30000.0, 672.0], [30600.0, 330.0], [30400.0, 334.0], [30800.0, 275.0], [31000.0, 226.0], [31200.0, 183.0], [31600.0, 70.0], [31400.0, 116.0], [31800.0, 29.0], [32600.0, 1.0], [32400.0, 2.0], [32000.0, 8.0], [32200.0, 1.0], [33200.0, 1.0], [34400.0, 1.0], [33600.0, 1.0], [17300.0, 20.0], [16700.0, 120.0], [16500.0, 196.0], [16900.0, 79.0], [17100.0, 40.0], [17500.0, 6.0], [17700.0, 13.0], [17900.0, 14.0], [18300.0, 22.0], [18100.0, 11.0], [18700.0, 16.0], [18900.0, 12.0], [19300.0, 3.0], [19100.0, 7.0], [18500.0, 17.0], [19700.0, 3.0], [19500.0, 1.0], [19900.0, 2.0], [20300.0, 9.0], [20100.0, 1.0], [20500.0, 28.0], [20700.0, 61.0], [21300.0, 254.0], [21100.0, 172.0], [20900.0, 109.0], [21500.0, 252.0], [21700.0, 238.0], [22100.0, 218.0], [21900.0, 240.0], [22300.0, 286.0], [22500.0, 297.0], [22700.0, 252.0], [23100.0, 203.0], [23300.0, 189.0], [22900.0, 313.0], [23500.0, 138.0], [23700.0, 169.0], [24100.0, 225.0], [23900.0, 185.0], [24300.0, 222.0], [24500.0, 302.0], [24700.0, 291.0], [25100.0, 324.0], [25300.0, 288.0], [24900.0, 286.0], [25500.0, 323.0], [25900.0, 317.0], [25700.0, 325.0], [26100.0, 243.0], [26300.0, 216.0], [26500.0, 182.0], [26900.0, 196.0], [26700.0, 198.0], [27100.0, 198.0], [27300.0, 237.0], [27500.0, 227.0], [28100.0, 307.0], [28500.0, 283.0], [27700.0, 270.0], [27900.0, 260.0], [28300.0, 317.0], [28700.0, 274.0], [28900.0, 229.0], [29100.0, 166.0], [29300.0, 234.0], [29500.0, 290.0], [30100.0, 335.0], [30300.0, 325.0], [29700.0, 276.0], [29900.0, 243.0], [30500.0, 330.0], [30700.0, 305.0], [31100.0, 189.0], [30900.0, 237.0], [31300.0, 138.0], [31500.0, 102.0], [31700.0, 57.0], [31900.0, 14.0], [32100.0, 5.0], [33000.0, 3.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 34500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 576.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 61891.0, "series": [{"data": [[0.0, 6977.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 6315.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 61891.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 576.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 40.0, "minX": 1.69976814E12, "maxY": 200.0, "series": [{"data": [[1.6997715E12, 200.0], [1.69977372E12, 200.0], [1.69976826E12, 40.0], [1.69977048E12, 160.0], [1.69976946E12, 80.0], [1.6997727E12, 200.0], [1.69977168E12, 200.0], [1.6997739E12, 200.0], [1.69977066E12, 160.0], [1.69976844E12, 40.0], [1.69977288E12, 200.0], [1.69976964E12, 120.0], [1.69977186E12, 200.0], [1.69977408E12, 200.0], [1.69977438E12, 200.0], [1.69976892E12, 80.0], [1.69977114E12, 200.0], [1.69977336E12, 200.0], [1.69977012E12, 120.0], [1.69977234E12, 200.0], [1.69977456E12, 200.0], [1.69977132E12, 200.0], [1.6997691E12, 80.0], [1.69977354E12, 200.0], [1.69977252E12, 200.0], [1.69976928E12, 80.0], [1.6997703E12, 143.37423312883422], [1.69977342E12, 200.0], [1.69977018E12, 120.0], [1.6997724E12, 200.0], [1.69977462E12, 200.0], [1.69976916E12, 80.0], [1.69977138E12, 200.0], [1.6997736E12, 200.0], [1.69976814E12, 40.0], [1.69977036E12, 160.0], [1.69977258E12, 200.0], [1.69977156E12, 200.0], [1.69976832E12, 40.0], [1.69976934E12, 80.0], [1.69977378E12, 200.0], [1.69976862E12, 40.0], [1.69977084E12, 160.0], [1.69977306E12, 200.0], [1.69977204E12, 200.0], [1.6997688E12, 40.0], [1.69976982E12, 120.0], [1.69977426E12, 200.0], [1.69977E12, 120.0], [1.69977324E12, 200.0], [1.69977102E12, 183.65217391304353], [1.69976898E12, 80.0], [1.69977222E12, 200.0], [1.69977444E12, 200.0], [1.6997712E12, 200.0], [1.69976988E12, 120.0], [1.6997721E12, 200.0], [1.69977432E12, 200.0], [1.69977108E12, 200.0], [1.6997733E12, 200.0], [1.69976886E12, 63.295553618134186], [1.69977228E12, 200.0], [1.69976904E12, 80.0], [1.69977006E12, 120.0], [1.6997745E12, 200.0], [1.69977126E12, 200.0], [1.69977348E12, 200.0], [1.69977024E12, 120.0], [1.69977276E12, 200.0], [1.69976952E12, 80.0], [1.69977054E12, 160.0], [1.69977174E12, 200.0], [1.69977396E12, 200.0], [1.6997685E12, 40.0], [1.69977072E12, 160.0], [1.6997697E12, 120.0], [1.69977294E12, 200.0], [1.69977192E12, 200.0], [1.69977414E12, 200.0], [1.6997709E12, 160.0], [1.69976868E12, 40.0], [1.69977312E12, 200.0], [1.6997718E12, 200.0], [1.69976856E12, 40.0], [1.69976958E12, 103.52344740177428], [1.69977402E12, 200.0], [1.699773E12, 200.0], [1.69976976E12, 120.0], [1.69977078E12, 160.0], [1.69977198E12, 200.0], [1.6997742E12, 200.0], [1.69976874E12, 40.0], [1.69977096E12, 160.0], [1.69976994E12, 120.0], [1.69977318E12, 200.0], [1.69977216E12, 200.0], [1.69976922E12, 80.0], [1.69977246E12, 200.0], [1.69977144E12, 200.0], [1.69977366E12, 200.0], [1.69977042E12, 160.0], [1.6997682E12, 40.0], [1.69977264E12, 200.0], [1.6997694E12, 80.0], [1.69977162E12, 200.0], [1.69977384E12, 200.0], [1.69976838E12, 40.0], [1.6997706E12, 160.0], [1.69977282E12, 200.0]], "isOverall": false, "label": "bzm - Concurrency Thread Group (scenario 1 - soak)-ThreadStarter", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69977462E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1076.1290338187644, "minX": 40.0, "maxY": 25989.371748684935, "series": [{"data": [[78.0, 2306.0], [77.0, 2277.0], [40.0, 1076.1290338187644], [80.0, 5066.017585719349], [160.0, 15597.829926410457], [48.0, 1913.0], [200.0, 25989.371748684935], [54.0, 1969.0], [58.0, 2210.0], [120.0, 9921.825530442773], [62.0, 2300.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[125.38097123773969, 13219.478464604908]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 200.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1158.6, "minX": 1.69976814E12, "maxY": 33307.73333333333, "series": [{"data": [[1.6997715E12, 7471.133333333333], [1.69977372E12, 5669.116666666667], [1.69976826E12, 33307.73333333333], [1.69977048E12, 8860.716666666667], [1.69976946E12, 11669.1], [1.6997727E12, 6497.866666666667], [1.69977168E12, 7416.733333333334], [1.6997739E12, 5612.7], [1.69977066E12, 8594.05], [1.69976844E12, 24489.866666666665], [1.69977288E12, 6232.883333333333], [1.69976964E12, 11079.1], [1.69977186E12, 7036.483333333334], [1.69977408E12, 5603.766666666666], [1.69977438E12, 5468.516666666666], [1.69976892E12, 15446.683333333332], [1.69977114E12, 7967.316666666667], [1.69977336E12, 6001.683333333333], [1.69977012E12, 9464.533333333333], [1.69977234E12, 6647.283333333334], [1.69977456E12, 5482.95], [1.69977132E12, 7560.083333333333], [1.6997691E12, 13916.366666666667], [1.69977354E12, 5856.466666666666], [1.69977252E12, 6548.966666666666], [1.69976928E12, 12596.1], [1.6997703E12, 9155.866666666667], [1.69977342E12, 5876.35], [1.69977018E12, 9506.683333333332], [1.6997724E12, 6637.916666666667], [1.69977462E12, 11185.05], [1.69976916E12, 13368.016666666666], [1.69977138E12, 7669.3], [1.6997736E12, 5874.983333333334], [1.69976814E12, 19378.5], [1.69977036E12, 9085.333333333334], [1.69977258E12, 6464.466666666666], [1.69977156E12, 7321.866666666667], [1.69976832E12, 31048.1], [1.69976934E12, 12244.983333333334], [1.69977378E12, 5762.933333333333], [1.69976862E12, 19308.266666666666], [1.69977084E12, 8364.916666666666], [1.69977306E12, 6109.233333333334], [1.69977204E12, 6862.683333333333], [1.6997688E12, 16766.3], [1.69976982E12, 10489.25], [1.69977426E12, 5552.466666666666], [1.69977E12, 9956.166666666666], [1.69977324E12, 6024.366666666667], [1.69977102E12, 8047.533333333334], [1.69976898E12, 14955.35], [1.69977222E12, 6712.783333333334], [1.69977444E12, 5439.766666666666], [1.6997712E12, 7742.333333333333], [1.69976988E12, 10138.633333333333], [1.6997721E12, 6918.333333333333], [1.69977432E12, 5463.416666666667], [1.69977108E12, 7868.783333333334], [1.6997733E12, 6033.95], [1.69976886E12, 16106.866666666667], [1.69977228E12, 6666.466666666666], [1.69976904E12, 14337.116666666667], [1.69977006E12, 9801.483333333334], [1.6997745E12, 5421.583333333333], [1.69977126E12, 7784.9], [1.69977348E12, 5974.783333333334], [1.69977024E12, 9380.233333333334], [1.69977276E12, 6263.45], [1.69976952E12, 11472.816666666668], [1.69977054E12, 8804.7], [1.69977174E12, 7166.916666666667], [1.69977396E12, 5617.833333333333], [1.6997685E12, 22552.266666666666], [1.69977072E12, 8084.016666666666], [1.6997697E12, 10883.066666666668], [1.69977294E12, 6218.866666666667], [1.69977192E12, 6810.9], [1.69977414E12, 5542.6], [1.6997709E12, 8282.816666666668], [1.69976868E12, 18493.8], [1.69977312E12, 6034.516666666666], [1.6997718E12, 7032.966666666666], [1.69976856E12, 21007.533333333333], [1.69976958E12, 11079.55], [1.69977402E12, 5645.216666666666], [1.699773E12, 6246.166666666667], [1.69976976E12, 10686.433333333332], [1.69977078E12, 8374.583333333334], [1.69977198E12, 6746.233333333334], [1.6997742E12, 5514.9], [1.69976874E12, 17567.3], [1.69977096E12, 8117.0], [1.69976994E12, 10068.85], [1.69977318E12, 5996.883333333333], [1.69977216E12, 6820.833333333333], [1.69976922E12, 13017.4], [1.69977246E12, 6615.383333333333], [1.69977144E12, 7405.383333333333], [1.69977366E12, 5678.5], [1.69977042E12, 9001.283333333333], [1.6997682E12, 33224.88333333333], [1.69977264E12, 6418.35], [1.6997694E12, 12020.416666666666], [1.69977162E12, 7364.866666666667], [1.69977384E12, 5757.95], [1.69976838E12, 26371.65], [1.6997706E12, 8720.05], [1.69977282E12, 6263.45]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.6997715E12, 3859.266666666667], [1.69977372E12, 2932.3333333333335], [1.69976826E12, 17174.416666666668], [1.69977048E12, 4568.9], [1.69976946E12, 6016.966666666666], [1.6997727E12, 3366.983333333333], [1.69977168E12, 3859.15], [1.6997739E12, 2903.516666666667], [1.69977066E12, 4431.416666666667], [1.69976844E12, 12627.75], [1.69977288E12, 3243.95], [1.69976964E12, 5712.85], [1.69977186E12, 3642.116666666667], [1.69977408E12, 2896.25], [1.69977438E12, 2838.366666666667], [1.69976892E12, 7964.766666666666], [1.69977114E12, 4119.966666666666], [1.69977336E12, 3106.5], [1.69977012E12, 4880.233333333334], [1.69977234E12, 3432.116666666667], [1.69977456E12, 2852.9], [1.69977132E12, 3910.016666666667], [1.6997691E12, 7175.716666666666], [1.69977354E12, 3026.633333333333], [1.69977252E12, 3381.5], [1.69976928E12, 6495.0], [1.6997703E12, 4721.133333333333], [1.69977342E12, 3048.233333333333], [1.69977018E12, 4901.95], [1.6997724E12, 3431.983333333333], [1.69977462E12, 1158.6], [1.69976916E12, 6893.083333333333], [1.69977138E12, 3975.116666666667], [1.6997736E12, 3041.15], [1.69976814E12, 9992.133333333333], [1.69977036E12, 4684.766666666666], [1.69977258E12, 3338.0], [1.69977156E12, 3793.983333333333], [1.69976832E12, 16009.466666666667], [1.69976934E12, 6313.866666666667], [1.69977378E12, 2976.133333333333], [1.69976862E12, 9955.983333333334], [1.69977084E12, 4322.6], [1.69977306E12, 3164.35], [1.69977204E12, 3547.9666666666667], [1.6997688E12, 8645.266666666666], [1.69976982E12, 5408.6], [1.69977426E12, 2881.766666666667], [1.69977E12, 5133.716666666666], [1.69977324E12, 3113.383333333333], [1.69977102E12, 4163.433333333333], [1.69976898E12, 7711.5], [1.69977222E12, 3468.483333333333], [1.69977444E12, 2816.6666666666665], [1.6997712E12, 3996.9333333333334], [1.69976988E12, 5227.833333333333], [1.6997721E12, 3569.5833333333335], [1.69977432E12, 2889.1666666666665], [1.69977108E12, 4062.05], [1.6997733E12, 3120.733333333333], [1.69976886E12, 8305.3], [1.69977228E12, 3453.8], [1.69976904E12, 7392.65], [1.69977006E12, 5054.016666666666], [1.6997745E12, 2816.5833333333335], [1.69977126E12, 4025.866666666667], [1.69977348E12, 3106.1833333333334], [1.69977024E12, 4836.666666666667], [1.69977276E12, 3236.5833333333335], [1.69976952E12, 5915.766666666666], [1.69977054E12, 4540.0], [1.69977174E12, 3707.133333333333], [1.69977396E12, 2903.6833333333334], [1.6997685E12, 11628.75], [1.69977072E12, 4170.7], [1.6997697E12, 5611.7], [1.69977294E12, 3236.4666666666667], [1.69977192E12, 3518.9666666666667], [1.69977414E12, 2860.2166666666667], [1.6997709E12, 4301.1], [1.69976868E12, 9536.0], [1.69977312E12, 3127.7833333333333], [1.6997718E12, 3649.45], [1.69976856E12, 10832.183333333332], [1.69976958E12, 5712.833333333333], [1.69977402E12, 2917.85], [1.699773E12, 3236.75], [1.69976976E12, 5510.283333333334], [1.69977078E12, 4322.8], [1.69977198E12, 3497.35], [1.6997742E12, 2859.983333333333], [1.69976874E12, 9058.233333333334], [1.69977096E12, 4192.35], [1.69976994E12, 5191.816666666667], [1.69977318E12, 3099.2], [1.69977216E12, 3526.2166666666667], [1.69976922E12, 6712.166666666667], [1.69977246E12, 3424.9333333333334], [1.69977144E12, 3823.0833333333335], [1.69977366E12, 2939.7833333333333], [1.69977042E12, 4641.266666666666], [1.6997682E12, 17132.0], [1.69977264E12, 3323.35], [1.6997694E12, 6198.2], [1.69977162E12, 3816.25], [1.69977384E12, 2975.883333333333], [1.69976838E12, 13598.1], [1.6997706E12, 4496.316666666667], [1.69977282E12, 3236.5666666666666]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69977462E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 37.46594202898546, "minX": 1.69976814E12, "maxY": 30797.917737789216, "series": [{"data": [[1.6997715E12, 22741.83677298311], [1.69977372E12, 29599.77037037038], [1.69976826E12, 88.6357504215852], [1.69977048E12, 15164.180665610142], [1.69976946E12, 5782.736462093868], [1.6997727E12, 26003.440860215043], [1.69977168E12, 22789.333958724208], [1.6997739E12, 29513.221945137164], [1.69977066E12, 15712.18464052288], [1.69976844E12, 1372.8016055045864], [1.69977288E12, 26385.14955357143], [1.69976964E12, 9121.923954372618], [1.69977186E12, 23734.234592445326], [1.69977408E12, 29882.1075], [1.69977438E12, 30423.142857142848], [1.69976892E12, 4346.307272727278], [1.69977114E12, 21221.46924428823], [1.69977336E12, 27811.34498834501], [1.69977012E12, 10677.689910979225], [1.69977234E12, 25309.700421940925], [1.69977456E12, 30568.868020304573], [1.69977132E12, 21903.89814814816], [1.6997691E12, 4849.188698284564], [1.69977354E12, 28559.849282296633], [1.69977252E12, 25600.229122055665], [1.69976928E12, 5326.7068004459325], [1.6997703E12, 12434.065950920245], [1.69977342E12, 28578.893111638958], [1.69977018E12, 10600.66765140325], [1.6997724E12, 25350.734177215196], [1.69977462E12, 22551.88579387188], [1.69976916E12, 5034.521008403362], [1.69977138E12, 22124.53551912568], [1.6997736E12, 28611.316666666655], [1.69976814E12, 37.46594202898546], [1.69977036E12, 14773.867078825357], [1.69977258E12, 25809.80911062908], [1.69977156E12, 22638.293893129772], [1.69976832E12, 775.4088647670746], [1.69976934E12, 5493.172018348622], [1.69977378E12, 29345.158150851603], [1.69976862E12, 1742.7069090909104], [1.69977084E12, 16112.94304857621], [1.69977306E12, 27449.79176201372], [1.69977204E12, 24609.51836734695], [1.6997688E12, 1998.7663316582916], [1.69976982E12, 9640.575635876829], [1.69977426E12, 30106.015075376916], [1.69977E12, 10101.526093088845], [1.69977324E12, 27897.55116279071], [1.69977102E12, 17813.17043478261], [1.69976898E12, 4501.630046948354], [1.69977222E12, 24921.860125260944], [1.69977444E12, 30797.917737789216], [1.6997712E12, 21674.3677536232], [1.69976988E12, 9899.390581717447], [1.6997721E12, 24425.3569979716], [1.69977432E12, 30418.776942355875], [1.69977108E12, 21218.951871657773], [1.6997733E12, 28037.517401392117], [1.69976886E12, 3214.7846556233617], [1.69977228E12, 25195.42767295597], [1.69976904E12, 4684.06170421155], [1.69977006E12, 10325.544412607447], [1.6997745E12, 30752.452442159378], [1.69977126E12, 21560.375899280607], [1.69977348E12, 28044.974358974356], [1.69977024E12, 10722.791916167664], [1.69977276E12, 26628.635346756175], [1.69976952E12, 5853.342717258266], [1.69977054E12, 15283.859649122815], [1.69977174E12, 23164.076171875], [1.69977396E12, 30076.12718204488], [1.6997685E12, 1489.4987546699879], [1.69977072E12, 16605.96701388889], [1.6997697E12, 9294.725161290311], [1.69977294E12, 27252.409395973154], [1.69977192E12, 24685.6111111111], [1.69977414E12, 30252.698734177222], [1.6997709E12, 16213.597643097639], [1.69976868E12, 1819.108580106304], [1.69977312E12, 27600.506944444427], [1.6997718E12, 23735.716269841272], [1.69976856E12, 1602.333556149733], [1.69976958E12, 7489.6577946768075], [1.69977402E12, 29853.312655086826], [1.699773E12, 26660.626398210305], [1.69976976E12, 9435.20893561104], [1.69977078E12, 16000.569514237846], [1.69977198E12, 24689.095238095255], [1.6997742E12, 30326.64556962024], [1.69976874E12, 1918.519584332534], [1.69977096E12, 16442.7754749568], [1.69976994E12, 10084.319386331932], [1.69977318E12, 28022.876168224288], [1.69977216E12, 24483.566735112934], [1.69976922E12, 5172.482200647245], [1.69977246E12, 25437.84778012685], [1.69977144E12, 22471.02840909089], [1.69977366E12, 29297.987684729087], [1.69977042E12, 15003.19500780032], [1.6997682E12, 49.36939983093832], [1.69977264E12, 26084.814814814825], [1.6997694E12, 5603.76401869159], [1.69977162E12, 22755.02846299811], [1.69977384E12, 29155.64233576644], [1.69976838E12, 1273.7401490947827], [1.6997706E12, 15459.515297906599], [1.69977282E12, 26743.46756152127]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69977462E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 37.100724637681154, "minX": 1.69976814E12, "maxY": 30795.452442159374, "series": [{"data": [[1.6997715E12, 22739.037523452167], [1.69977372E12, 29597.212345679007], [1.69976826E12, 88.40303541315348], [1.69977048E12, 15161.632329635488], [1.69976946E12, 5781.156438026472], [1.6997727E12, 26000.670967741928], [1.69977168E12, 22786.444652908063], [1.6997739E12, 29511.11720698254], [1.69977066E12, 15709.982026143787], [1.69976844E12, 1371.3721330275223], [1.69977288E12, 26382.57589285715], [1.69976964E12, 9119.286438529774], [1.69977186E12, 23731.74155069581], [1.69977408E12, 29879.235], [1.69977438E12, 30420.68112244898], [1.69976892E12, 4344.520000000004], [1.69977114E12, 21219.128295254828], [1.69977336E12, 27808.974358974363], [1.69977012E12, 10675.838278931751], [1.69977234E12, 25307.101265822785], [1.69977456E12, 30566.477157360423], [1.69977132E12, 21901.42777777777], [1.6997691E12, 4847.425832492433], [1.69977354E12, 28556.863636363636], [1.69977252E12, 25597.278372590987], [1.69976928E12, 5324.9275362318795], [1.6997703E12, 12431.688650306742], [1.69977342E12, 28575.84798099764], [1.69977018E12, 10598.327917282111], [1.6997724E12, 25348.067510548524], [1.69977462E12, 13834.373259052938], [1.69976916E12, 5032.942226890756], [1.69977138E12, 22122.278688524595], [1.6997736E12, 28609.095238095248], [1.69976814E12, 37.100724637681154], [1.69977036E12, 14771.296754250387], [1.69977258E12, 25807.049891540133], [1.69977156E12, 22635.702290076348], [1.69976832E12, 774.5137946630495], [1.69976934E12, 5491.2522935779825], [1.69977378E12, 29342.666666666675], [1.69976862E12, 1741.2698181818196], [1.69977084E12, 16110.634840871013], [1.69977306E12, 27447.55835240272], [1.69977204E12, 24607.028571428586], [1.6997688E12, 1997.1381909547747], [1.69976982E12, 9638.338688085672], [1.69977426E12, 30103.693467336663], [1.69977E12, 10099.060648801122], [1.69977324E12, 27894.57906976744], [1.69977102E12, 17810.6747826087], [1.69976898E12, 4499.891079812196], [1.69977222E12, 24919.286012526114], [1.69977444E12, 30795.452442159374], [1.6997712E12, 21672.146739130436], [1.69976988E12, 9897.127423822723], [1.6997721E12, 24422.628803245458], [1.69977432E12, 30415.64160401003], [1.69977108E12, 21216.59714795008], [1.6997733E12, 28035.187935034814], [1.69976886E12, 3212.9799476896196], [1.69977228E12, 25192.771488469585], [1.69976904E12, 4682.221351616064], [1.69977006E12, 10323.177650429812], [1.6997745E12, 30749.665809768623], [1.69977126E12, 21558.0845323741], [1.69977348E12, 28042.51282051281], [1.69977024E12, 10720.696107784423], [1.69977276E12, 26625.999999999993], [1.69976952E12, 5851.700122399014], [1.69977054E12, 15281.40829346092], [1.69977174E12, 23161.81640624997], [1.69977396E12, 30073.453865336654], [1.6997685E12, 1487.98194271482], [1.69977072E12, 16603.27256944444], [1.6997697E12, 9292.94322580646], [1.69977294E12, 27249.42505592844], [1.69977192E12, 24683.670781893004], [1.69977414E12, 30250.24810126583], [1.6997709E12, 16211.3063973064], [1.69976868E12, 1817.568716780562], [1.69977312E12, 27597.44212962961], [1.6997718E12, 23733.255952380958], [1.69976856E12, 1600.7820855614987], [1.69976958E12, 7487.713561470215], [1.69977402E12, 29850.33002481389], [1.699773E12, 26658.284116331117], [1.69976976E12, 9433.346911957939], [1.69977078E12, 15998.068676716928], [1.69977198E12, 24686.745341614933], [1.6997742E12, 30323.83544303795], [1.69976874E12, 1916.9520383693045], [1.69977096E12, 16440.319516407613], [1.69976994E12, 10082.062761506262], [1.69977318E12, 28019.768691588793], [1.69977216E12, 24480.69404517454], [1.69976922E12, 5170.719525350596], [1.69977246E12, 25434.966173361514], [1.69977144E12, 22468.583333333354], [1.69977366E12, 29294.66256157637], [1.69977042E12, 15000.995319812779], [1.6997682E12, 49.207945900253684], [1.69977264E12, 26082.394335511963], [1.6997694E12, 5601.879672897196], [1.69977162E12, 22752.531309297912], [1.69977384E12, 29153.22871046229], [1.69976838E12, 1272.564962726305], [1.6997706E12, 15457.020933977463], [1.69977282E12, 26740.83668903804]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69977462E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.4358974358974362, "minX": 1.69976814E12, "maxY": 1.3282608695652152, "series": [{"data": [[1.6997715E12, 0.5178236397748598], [1.69977372E12, 0.5432098765432092], [1.69976826E12, 0.5897976391231033], [1.69977048E12, 0.5467511885895402], [1.69976946E12, 0.5764139590854394], [1.6997727E12, 0.5505376344086024], [1.69977168E12, 0.5440900562851786], [1.6997739E12, 0.47630922693266814], [1.69977066E12, 0.5408496732026137], [1.69976844E12, 0.7889908256880729], [1.69977288E12, 0.4955357142857139], [1.69976964E12, 0.5297845373891005], [1.69977186E12, 0.5447316103379721], [1.69977408E12, 0.5225], [1.69977438E12, 0.5255102040816328], [1.69976892E12, 0.6009090909090917], [1.69977114E12, 0.5413005272407734], [1.69977336E12, 0.4825174825174824], [1.69977012E12, 0.5296735905044521], [1.69977234E12, 0.4999999999999998], [1.69977456E12, 0.5025380710659891], [1.69977132E12, 0.5185185185185187], [1.6997691E12, 0.5741675075681134], [1.69977354E12, 0.5287081339712919], [1.69977252E12, 0.4882226980728049], [1.69976928E12, 0.5953177257525082], [1.6997703E12, 0.5552147239263808], [1.69977342E12, 0.45605700712589026], [1.69977018E12, 0.562776957163959], [1.6997724E12, 0.533755274261603], [1.69977462E12, 0.5431754874651812], [1.69976916E12, 0.5934873949579825], [1.69977138E12, 0.4408014571948992], [1.6997736E12, 0.5285714285714281], [1.69976814E12, 1.3282608695652152], [1.69977036E12, 0.565687789799073], [1.69977258E12, 0.5314533622559655], [1.69977156E12, 0.5667938931297709], [1.69976832E12, 0.8701944821347799], [1.69976934E12, 0.5779816513761465], [1.69977378E12, 0.5133819951338202], [1.69976862E12, 0.7083636363636362], [1.69977084E12, 0.5443886097152434], [1.69977306E12, 0.5125858123569796], [1.69977204E12, 0.5061224489795918], [1.6997688E12, 0.4706867671691793], [1.69976982E12, 0.44979919678714864], [1.69977426E12, 0.5175879396984925], [1.69977E12, 0.5740479548660086], [1.69977324E12, 0.5395348837209304], [1.69977102E12, 0.5339130434782602], [1.69976898E12, 0.5990610328638494], [1.69977222E12, 0.5114822546972856], [1.69977444E12, 0.5269922879177369], [1.6997712E12, 0.570652173913043], [1.69976988E12, 0.4806094182825482], [1.6997721E12, 0.5375253549695733], [1.69977432E12, 0.47117794486215536], [1.69977108E12, 0.5650623885917999], [1.6997733E12, 0.5243619489559168], [1.69976886E12, 0.608544027898867], [1.69977228E12, 0.5136268343815515], [1.69976904E12, 0.6101860920666019], [1.69977006E12, 0.5558739255014327], [1.6997745E12, 0.5038560411311049], [1.69977126E12, 0.5395683453237408], [1.69977348E12, 0.4358974358974362], [1.69977024E12, 0.5449101796407181], [1.69977276E12, 0.5123042505592843], [1.69976952E12, 0.5764993880048954], [1.69977054E12, 0.5295055821371616], [1.69977174E12, 0.4941406250000002], [1.69977396E12, 0.5286783042394015], [1.6997685E12, 0.7521793275217932], [1.69977072E12, 0.5711805555555559], [1.6997697E12, 0.5664516129032269], [1.69977294E12, 0.4966442953020133], [1.69977192E12, 0.5041152263374482], [1.69977414E12, 0.4860759493670888], [1.6997709E12, 0.5538720538720544], [1.69976868E12, 0.7008352315869384], [1.69977312E12, 0.5648148148148151], [1.6997718E12, 0.4960317460317462], [1.69976856E12, 0.7346256684491981], [1.69976958E12, 0.5931558935361223], [1.69977402E12, 0.511166253101737], [1.699773E12, 0.5145413870246078], [1.69976976E12, 0.568988173455979], [1.69977078E12, 0.5226130653266333], [1.69977198E12, 0.550724637681159], [1.6997742E12, 0.5518987341772155], [1.69976874E12, 0.621103117505996], [1.69977096E12, 0.5371329879101906], [1.69976994E12, 0.5383542538354256], [1.69977318E12, 0.5093457943925231], [1.69977216E12, 0.4866529774127305], [1.69976922E12, 0.5879180151024805], [1.69977246E12, 0.5200845665961946], [1.69977144E12, 0.4753787878787882], [1.69977366E12, 0.49014778325123154], [1.69977042E12, 0.556942277691108], [1.6997682E12, 0.5765004226542696], [1.69977264E12, 0.5076252723311551], [1.6997694E12, 0.5257009345794389], [1.69977162E12, 0.578747628083491], [1.69977384E12, 0.4817518248175183], [1.69976838E12, 0.8248136315228967], [1.6997706E12, 0.5426731078904985], [1.69977282E12, 0.514541387024609]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69977462E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 6.0, "minX": 1.69976814E12, "maxY": 34502.0, "series": [{"data": [[1.6997715E12, 23688.0], [1.69977372E12, 31001.0], [1.69976826E12, 249.0], [1.69977048E12, 29474.0], [1.69976946E12, 11171.0], [1.6997727E12, 27201.0], [1.69977168E12, 23829.0], [1.6997739E12, 31195.0], [1.69977066E12, 30323.0], [1.69976844E12, 2642.0], [1.69977288E12, 28373.0], [1.69976964E12, 17763.0], [1.69977186E12, 25079.0], [1.69977408E12, 31117.0], [1.69977438E12, 32066.0], [1.69976892E12, 8413.0], [1.69977114E12, 22045.0], [1.69977336E12, 29076.0], [1.69977012E12, 21036.0], [1.69977234E12, 26741.0], [1.69977456E12, 31890.0], [1.69977132E12, 23527.0], [1.6997691E12, 9347.0], [1.69977354E12, 30108.0], [1.69977252E12, 26674.0], [1.69976928E12, 10049.0], [1.6997703E12, 28749.0], [1.69977342E12, 30121.0], [1.69977018E12, 20625.0], [1.6997724E12, 26319.0], [1.69977462E12, 32030.0], [1.69976916E12, 9389.0], [1.69977138E12, 23719.0], [1.6997736E12, 29838.0], [1.69976814E12, 499.0], [1.69977036E12, 28923.0], [1.69977258E12, 26631.0], [1.69977156E12, 24066.0], [1.69976832E12, 2882.0], [1.69976934E12, 10566.0], [1.69977378E12, 30669.0], [1.69976862E12, 3457.0], [1.69977084E12, 31119.0], [1.69977306E12, 28907.0], [1.69977204E12, 26958.0], [1.6997688E12, 3747.0], [1.69976982E12, 18781.0], [1.69977426E12, 31659.0], [1.69977E12, 19197.0], [1.69977324E12, 29273.0], [1.69977102E12, 21716.0], [1.69976898E12, 8964.0], [1.69977222E12, 26364.0], [1.69977444E12, 32269.0], [1.6997712E12, 22522.0], [1.69976988E12, 19029.0], [1.6997721E12, 25425.0], [1.69977432E12, 34502.0], [1.69977108E12, 22171.0], [1.6997733E12, 29256.0], [1.69976886E12, 8159.0], [1.69977228E12, 26730.0], [1.69976904E12, 9110.0], [1.69977006E12, 19969.0], [1.6997745E12, 32041.0], [1.69977126E12, 22416.0], [1.69977348E12, 29667.0], [1.69977024E12, 20692.0], [1.69977276E12, 28046.0], [1.69976952E12, 11257.0], [1.69977054E12, 30263.0], [1.69977174E12, 24312.0], [1.69977396E12, 31681.0], [1.6997685E12, 3791.0], [1.69977072E12, 19302.0], [1.6997697E12, 17928.0], [1.69977294E12, 29167.0], [1.69977192E12, 26276.0], [1.69977414E12, 31291.0], [1.6997709E12, 17054.0], [1.69976868E12, 3500.0], [1.69977312E12, 29204.0], [1.6997718E12, 25364.0], [1.69976856E12, 2990.0], [1.69976958E12, 17779.0], [1.69977402E12, 31375.0], [1.699773E12, 28103.0], [1.69976976E12, 18321.0], [1.69977078E12, 16901.0], [1.69977198E12, 26991.0], [1.6997742E12, 31886.0], [1.69976874E12, 3472.0], [1.69977096E12, 17472.0], [1.69976994E12, 19612.0], [1.69977318E12, 29292.0], [1.69977216E12, 25405.0], [1.69976922E12, 10052.0], [1.69977246E12, 26736.0], [1.69977144E12, 23634.0], [1.69977366E12, 30951.0], [1.69977042E12, 29279.0], [1.6997682E12, 170.0], [1.69977264E12, 27450.0], [1.6997694E12, 14913.0], [1.69977162E12, 24151.0], [1.69977384E12, 30370.0], [1.69976838E12, 2489.0], [1.6997706E12, 30376.0], [1.69977282E12, 27908.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.6997715E12, 23157.7], [1.69977372E12, 30518.6], [1.69976826E12, 145.0], [1.69977048E12, 15519.0], [1.69976946E12, 6099.400000000001], [1.6997727E12, 26883.1], [1.69977168E12, 23296.1], [1.6997739E12, 30316.4], [1.69977066E12, 16105.5], [1.69976844E12, 1554.0], [1.69977288E12, 27813.4], [1.69976964E12, 9453.0], [1.69977186E12, 24529.0], [1.69977408E12, 30665.6], [1.69977438E12, 31458.5], [1.69976892E12, 4598.8], [1.69977114E12, 21642.5], [1.69977336E12, 28599.0], [1.69977012E12, 11268.5], [1.69977234E12, 26049.4], [1.69977456E12, 31414.6], [1.69977132E12, 22593.4], [1.6997691E12, 5115.6], [1.69977354E12, 29427.0], [1.69977252E12, 26176.2], [1.69976928E12, 5623.4], [1.6997703E12, 14907.7], [1.69977342E12, 29551.6], [1.69977018E12, 10972.8], [1.6997724E12, 25896.8], [1.69977462E12, 31700.0], [1.69976916E12, 5317.7], [1.69977138E12, 22799.9], [1.6997736E12, 29484.2], [1.69976814E12, 68.0], [1.69977036E12, 15127.6], [1.69977258E12, 26273.0], [1.69977156E12, 23425.8], [1.69976832E12, 1239.0], [1.69976934E12, 5799.8], [1.69977378E12, 30067.0], [1.69976862E12, 1966.0], [1.69977084E12, 16466.2], [1.69977306E12, 28341.8], [1.69977204E12, 25461.1], [1.6997688E12, 2225.0], [1.69976982E12, 9975.800000000001], [1.69977426E12, 31211.7], [1.69977E12, 10437.0], [1.69977324E12, 28634.6], [1.69977102E12, 20913.0], [1.69976898E12, 4741.0], [1.69977222E12, 25722.2], [1.69977444E12, 31522.0], [1.6997712E12, 22141.8], [1.69976988E12, 10579.9], [1.6997721E12, 24942.8], [1.69977432E12, 31683.7], [1.69977108E12, 21784.0], [1.6997733E12, 28798.2], [1.69976886E12, 4409.0], [1.69977228E12, 26046.6], [1.69976904E12, 4940.8], [1.69977006E12, 10694.0], [1.6997745E12, 31656.3], [1.69977126E12, 22083.0], [1.69977348E12, 28810.3], [1.69977024E12, 11103.1], [1.69977276E12, 27479.5], [1.69976952E12, 6183.0], [1.69977054E12, 15672.0], [1.69977174E12, 23899.4], [1.69977396E12, 30995.8], [1.6997685E12, 1677.0], [1.69977072E12, 18512.4], [1.6997697E12, 9602.8], [1.69977294E12, 28549.0], [1.69977192E12, 25462.0], [1.69977414E12, 30821.5], [1.6997709E12, 16570.8], [1.69976868E12, 2023.2], [1.69977312E12, 28527.6], [1.6997718E12, 24587.5], [1.69976856E12, 1794.0], [1.69976958E12, 9517.0], [1.69977402E12, 30685.9], [1.699773E12, 27570.9], [1.69976976E12, 9755.4], [1.69977078E12, 16461.8], [1.69977198E12, 26379.4], [1.6997742E12, 31290.1], [1.69976874E12, 2120.8], [1.69977096E12, 16952.9], [1.69976994E12, 10348.8], [1.69977318E12, 28711.6], [1.69977216E12, 25088.6], [1.69976922E12, 5469.2], [1.69977246E12, 26219.6], [1.69977144E12, 22982.6], [1.69977366E12, 30464.2], [1.69977042E12, 15382.6], [1.6997682E12, 82.0], [1.69977264E12, 26898.4], [1.6997694E12, 5935.0], [1.69977162E12, 23537.0], [1.69977384E12, 29869.7], [1.69976838E12, 1472.2000000000003], [1.6997706E12, 15853.8], [1.69977282E12, 27412.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.6997715E12, 23488.839999999997], [1.69977372E12, 30826.66], [1.69976826E12, 203.26999999999998], [1.69977048E12, 15727.88], [1.69976946E12, 10757.039999999995], [1.6997727E12, 27158.23], [1.69977168E12, 23725.539999999997], [1.6997739E12, 31094.76], [1.69977066E12, 28267.250000000062], [1.69976844E12, 2259.55], [1.69977288E12, 28335.28], [1.69976964E12, 10470.80000000016], [1.69977186E12, 24863.78], [1.69977408E12, 30899.739999999998], [1.69977438E12, 31795.8], [1.69976892E12, 7920.63], [1.69977114E12, 21913.95], [1.69977336E12, 28969.0], [1.69977012E12, 19556.0], [1.69977234E12, 26409.39], [1.69977456E12, 31794.16], [1.69977132E12, 23125.28], [1.6997691E12, 5678.680000000134], [1.69977354E12, 29785.399999999998], [1.69977252E12, 26488.219999999998], [1.69976928E12, 9534.16], [1.6997703E12, 20910.790000000008], [1.69977342E12, 29888.9], [1.69977018E12, 11256.52], [1.6997724E12, 26157.12], [1.69977462E12, 32014.34], [1.69976916E12, 5502.750000000001], [1.69977138E12, 23418.62], [1.6997736E12, 29747.4], [1.69976814E12, 133.90000000000055], [1.69977036E12, 15513.759999999998], [1.69977258E12, 26556.4], [1.69977156E12, 23871.49], [1.69976832E12, 1883.7600000000002], [1.69976934E12, 9892.229999999998], [1.69977378E12, 30331.899999999998], [1.69976862E12, 2782.1600000000003], [1.69977084E12, 16674.079999999998], [1.69977306E12, 28722.52], [1.69977204E12, 26653.239999999998], [1.6997688E12, 3412.6999999999994], [1.69976982E12, 10182.76], [1.69977426E12, 31565.89], [1.69977E12, 10687.5], [1.69977324E12, 28987.88], [1.69977102E12, 21296.2], [1.69976898E12, 8172.739999999995], [1.69977222E12, 26199.02], [1.69977444E12, 32119.8], [1.6997712E12, 22408.27], [1.69976988E12, 18448.28], [1.6997721E12, 25231.35], [1.69977432E12, 33363.8], [1.69977108E12, 22003.2], [1.6997733E12, 29037.239999999998], [1.69976886E12, 4590.639999999999], [1.69977228E12, 26607.920000000002], [1.69976904E12, 8477.099999999997], [1.69977006E12, 19139.15], [1.6997745E12, 31927.0], [1.69977126E12, 22351.44], [1.69977348E12, 29068.63], [1.69977024E12, 11597.029999999999], [1.69977276E12, 27833.350000000002], [1.69976952E12, 6414.379999999999], [1.69977054E12, 16167.800000000001], [1.69977174E12, 24212.84], [1.69977396E12, 31482.38], [1.6997685E12, 2470.550000000002], [1.69977072E12, 19021.2], [1.6997697E12, 9886.68], [1.69977294E12, 29080.249999999996], [1.69977192E12, 25849.159999999996], [1.69977414E12, 31169.6], [1.6997709E12, 16913.619999999995], [1.69976868E12, 2273.059999999995], [1.69977312E12, 28948.8], [1.6997718E12, 25036.800000000003], [1.69976856E12, 2600.199999999999], [1.69976958E12, 11215.7], [1.69977402E12, 31057.85], [1.699773E12, 27981.719999999998], [1.69976976E12, 12857.719999999965], [1.69977078E12, 16730.96], [1.69977198E12, 26917.28], [1.6997742E12, 31830.75], [1.69976874E12, 3133.080000000001], [1.69977096E12, 17247.92], [1.69976994E12, 18976.48], [1.69977318E12, 29154.54], [1.69977216E12, 25296.64], [1.69976922E12, 5685.800000000001], [1.69977246E12, 26567.84], [1.69977144E12, 23232.49], [1.69977366E12, 30879.92], [1.69977042E12, 15623.34], [1.6997682E12, 116.32999999999993], [1.69977264E12, 27265.96], [1.6997694E12, 10393.359999999997], [1.69977162E12, 24056.8], [1.69977384E12, 30126.559999999998], [1.69976838E12, 2251.63], [1.6997706E12, 26776.339999999633], [1.69977282E12, 27816.2]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.6997715E12, 23248.8], [1.69977372E12, 30618.3], [1.69976826E12, 162.0], [1.69977048E12, 15589.2], [1.69976946E12, 6183.6], [1.6997727E12, 27014.25], [1.69977168E12, 23465.55], [1.6997739E12, 30478.5], [1.69977066E12, 16227.75], [1.69976844E12, 1602.75], [1.69977288E12, 27979.4], [1.69976964E12, 9515.0], [1.69977186E12, 24614.1], [1.69977408E12, 30749.1], [1.69977438E12, 31589.75], [1.69976892E12, 4660.85], [1.69977114E12, 21743.75], [1.69977336E12, 28726.75], [1.69977012E12, 11452.75], [1.69977234E12, 26156.75], [1.69977456E12, 31618.8], [1.69977132E12, 22785.6], [1.6997691E12, 5183.4], [1.69977354E12, 29530.8], [1.69977252E12, 26296.9], [1.69976928E12, 5704.2], [1.6997703E12, 15101.05], [1.69977342E12, 29699.0], [1.69977018E12, 11060.0], [1.6997724E12, 25981.45], [1.69977462E12, 31774.6], [1.69976916E12, 5377.35], [1.69977138E12, 22980.649999999998], [1.6997736E12, 29588.2], [1.69976814E12, 89.0], [1.69977036E12, 15240.4], [1.69977258E12, 26405.0], [1.69977156E12, 23573.3], [1.69976832E12, 1279.8000000000002], [1.69976934E12, 5890.35], [1.69977378E12, 30178.0], [1.69976862E12, 2017.4], [1.69977084E12, 16533.899999999998], [1.69977306E12, 28494.4], [1.69977204E12, 26147.649999999998], [1.6997688E12, 2273.5], [1.69976982E12, 10052.2], [1.69977426E12, 31355.5], [1.69977E12, 10501.5], [1.69977324E12, 28797.0], [1.69977102E12, 21092.0], [1.69976898E12, 4801.7], [1.69977222E12, 25904.3], [1.69977444E12, 31687.25], [1.6997712E12, 22215.35], [1.69976988E12, 10809.5], [1.6997721E12, 25042.35], [1.69977432E12, 31932.3], [1.69977108E12, 21874.0], [1.6997733E12, 28900.8], [1.69976886E12, 4479.6], [1.69977228E12, 26232.3], [1.69976904E12, 5004.0], [1.69977006E12, 10777.05], [1.6997745E12, 31794.45], [1.69977126E12, 22185.6], [1.69977348E12, 28923.35], [1.69977024E12, 11205.449999999999], [1.69977276E12, 27622.5], [1.69976952E12, 6262.4], [1.69977054E12, 15785.2], [1.69977174E12, 24046.2], [1.69977396E12, 31212.05], [1.6997685E12, 1722.6499999999999], [1.69977072E12, 18750.0], [1.6997697E12, 9667.4], [1.69977294E12, 28780.5], [1.69977192E12, 25570.6], [1.69977414E12, 30914.0], [1.6997709E12, 16676.9], [1.69976868E12, 2066.1], [1.69977312E12, 28689.8], [1.6997718E12, 24772.5], [1.69976856E12, 1836.1499999999999], [1.69976958E12, 9698.5], [1.69977402E12, 30785.75], [1.699773E12, 27740.05], [1.69976976E12, 9820.7], [1.69977078E12, 16563.6], [1.69977198E12, 26603.4], [1.6997742E12, 31494.0], [1.69976874E12, 2164.3999999999996], [1.69977096E12, 17073.9], [1.69976994E12, 10424.0], [1.69977318E12, 28835.3], [1.69977216E12, 25181.4], [1.69976922E12, 5540.2], [1.69977246E12, 26325.0], [1.69977144E12, 23067.3], [1.69977366E12, 30665.2], [1.69977042E12, 15455.8], [1.6997682E12, 90.65000000000009], [1.69977264E12, 27042.8], [1.6997694E12, 6015.15], [1.69977162E12, 23725.0], [1.69977384E12, 29978.55], [1.69976838E12, 1548.05], [1.6997706E12, 15929.9], [1.69977282E12, 27638.5]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.6997715E12, 879.0], [1.69977372E12, 1185.0], [1.69976826E12, 23.0], [1.69977048E12, 945.0], [1.69976946E12, 385.0], [1.6997727E12, 1020.0], [1.69977168E12, 1244.0], [1.6997739E12, 1159.0], [1.69977066E12, 1279.0], [1.69976844E12, 129.0], [1.69977288E12, 892.0], [1.69976964E12, 462.0], [1.69977186E12, 772.0], [1.69977408E12, 1208.0], [1.69977438E12, 1059.0], [1.69976892E12, 332.0], [1.69977114E12, 816.0], [1.69977336E12, 1426.0], [1.69977012E12, 512.0], [1.69977234E12, 914.0], [1.69977456E12, 1002.0], [1.69977132E12, 925.0], [1.6997691E12, 376.0], [1.69977354E12, 1067.0], [1.69977252E12, 972.0], [1.69976928E12, 337.0], [1.6997703E12, 609.0], [1.69977342E12, 1056.0], [1.69977018E12, 534.0], [1.6997724E12, 1102.0], [1.69977462E12, 29911.0], [1.69976916E12, 345.0], [1.69977138E12, 792.0], [1.6997736E12, 1029.0], [1.69976814E12, 6.0], [1.69977036E12, 663.0], [1.69977258E12, 1195.0], [1.69977156E12, 844.0], [1.69976832E12, 36.0], [1.69976934E12, 470.0], [1.69977378E12, 1497.0], [1.69976862E12, 220.0], [1.69977084E12, 696.0], [1.69977306E12, 910.0], [1.69977204E12, 738.0], [1.6997688E12, 256.0], [1.69976982E12, 544.0], [1.69977426E12, 1067.0], [1.69977E12, 577.0], [1.69977324E12, 1110.0], [1.69977102E12, 836.0], [1.69976898E12, 294.0], [1.69977222E12, 904.0], [1.69977444E12, 1994.0], [1.6997712E12, 1379.0], [1.69976988E12, 506.0], [1.6997721E12, 1471.0], [1.69977432E12, 1101.0], [1.69977108E12, 783.0], [1.6997733E12, 1085.0], [1.69976886E12, 284.0], [1.69977228E12, 966.0], [1.69976904E12, 377.0], [1.69977006E12, 590.0], [1.6997745E12, 1359.0], [1.69977126E12, 761.0], [1.69977348E12, 1013.0], [1.69977024E12, 707.0], [1.69977276E12, 1047.0], [1.69976952E12, 541.0], [1.69977054E12, 671.0], [1.69977174E12, 872.0], [1.69977396E12, 1207.0], [1.6997685E12, 143.0], [1.69977072E12, 790.0], [1.6997697E12, 440.0], [1.69977294E12, 862.0], [1.69977192E12, 1234.0], [1.69977414E12, 1012.0], [1.6997709E12, 674.0], [1.69976868E12, 281.0], [1.69977312E12, 946.0], [1.6997718E12, 1245.0], [1.69976856E12, 182.0], [1.69976958E12, 435.0], [1.69977402E12, 1141.0], [1.699773E12, 987.0], [1.69976976E12, 512.0], [1.69977078E12, 689.0], [1.69977198E12, 969.0], [1.6997742E12, 1091.0], [1.69976874E12, 202.0], [1.69977096E12, 1305.0], [1.69976994E12, 547.0], [1.69977318E12, 1138.0], [1.69977216E12, 936.0], [1.69976922E12, 367.0], [1.69977246E12, 1140.0], [1.69977144E12, 788.0], [1.69977366E12, 1131.0], [1.69977042E12, 1043.0], [1.6997682E12, 10.0], [1.69977264E12, 922.0], [1.6997694E12, 449.0], [1.69977162E12, 710.0], [1.69977384E12, 985.0], [1.69976838E12, 115.0], [1.6997706E12, 635.0], [1.69977282E12, 1045.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.6997715E12, 22797.0], [1.69977372E12, 29863.0], [1.69976826E12, 94.0], [1.69977048E12, 15147.0], [1.69976946E12, 5809.0], [1.6997727E12, 26318.5], [1.69977168E12, 22683.5], [1.6997739E12, 29777.0], [1.69977066E12, 15661.0], [1.69976844E12, 1400.0], [1.69977288E12, 27202.0], [1.69976964E12, 9152.0], [1.69977186E12, 23912.0], [1.69977408E12, 30128.0], [1.69977438E12, 30781.5], [1.69976892E12, 4377.5], [1.69977114E12, 21254.0], [1.69977336E12, 28133.5], [1.69977012E12, 10642.0], [1.69977234E12, 25428.5], [1.69977456E12, 30775.0], [1.69977132E12, 22007.0], [1.6997691E12, 4877.0], [1.69977354E12, 28720.0], [1.69977252E12, 25713.0], [1.69976928E12, 5341.0], [1.6997703E12, 11417.5], [1.69977342E12, 28851.0], [1.69977018E12, 10638.0], [1.6997724E12, 25504.0], [1.69977462E12, 31088.0], [1.69976916E12, 5055.0], [1.69977138E12, 22333.0], [1.6997736E12, 28899.0], [1.69976814E12, 29.0], [1.69977036E12, 14804.0], [1.69977258E12, 25900.0], [1.69977156E12, 22896.0], [1.69976832E12, 919.0], [1.69976934E12, 5496.5], [1.69977378E12, 29486.0], [1.69976862E12, 1762.0], [1.69977084E12, 16128.0], [1.69977306E12, 27697.0], [1.69977204E12, 24652.5], [1.6997688E12, 2034.5], [1.69976982E12, 9693.0], [1.69977426E12, 30556.0], [1.69977E12, 10156.0], [1.69977324E12, 28071.0], [1.69977102E12, 16971.0], [1.69976898E12, 4543.0], [1.69977222E12, 25053.0], [1.69977444E12, 30881.5], [1.6997712E12, 21718.5], [1.69976988E12, 9844.5], [1.6997721E12, 24467.0], [1.69977432E12, 30997.0], [1.69977108E12, 21278.0], [1.6997733E12, 28276.0], [1.69976886E12, 3892.0], [1.69977228E12, 25419.0], [1.69976904E12, 4711.0], [1.69977006E12, 10334.0], [1.6997745E12, 30964.5], [1.69977126E12, 21718.0], [1.69977348E12, 28231.0], [1.69977024E12, 10768.0], [1.69977276E12, 26784.5], [1.69976952E12, 5873.0], [1.69977054E12, 15299.0], [1.69977174E12, 23356.0], [1.69977396E12, 30286.5], [1.6997685E12, 1514.0], [1.69977072E12, 16106.0], [1.6997697E12, 9302.0], [1.69977294E12, 27771.5], [1.69977192E12, 24829.0], [1.69977414E12, 30362.5], [1.6997709E12, 16193.0], [1.69976868E12, 1841.0], [1.69977312E12, 27960.0], [1.6997718E12, 23999.0], [1.69976856E12, 1633.0], [1.69976958E12, 6420.0], [1.69977402E12, 30089.5], [1.699773E12, 27079.5], [1.69976976E12, 9456.0], [1.69977078E12, 16104.0], [1.69977198E12, 24620.0], [1.6997742E12, 30786.0], [1.69976874E12, 1952.0], [1.69977096E12, 16450.5], [1.69976994E12, 10008.0], [1.69977318E12, 28216.0], [1.69977216E12, 24698.0], [1.69976922E12, 5210.0], [1.69977246E12, 25680.0], [1.69977144E12, 22527.0], [1.69977366E12, 29664.0], [1.69977042E12, 14979.0], [1.6997682E12, 51.0], [1.69977264E12, 26330.0], [1.6997694E12, 5611.5], [1.69977162E12, 23011.0], [1.69977384E12, 29376.5], [1.69976838E12, 1287.0], [1.6997706E12, 15537.0], [1.69977282E12, 26885.5]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69977462E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 36.0, "minX": 1.0, "maxY": 30913.5, "series": [{"data": [[33.0, 1160.0], [32.0, 1246.5], [2.0, 29311.0], [35.0, 937.0], [34.0, 1215.0], [37.0, 128.0], [36.0, 271.0], [38.0, 55.0], [39.0, 69.0], [41.0, 69.0], [40.0, 67.0], [42.0, 58.5], [43.0, 79.0], [44.0, 36.0], [45.0, 64.0], [46.0, 52.0], [48.0, 44.0], [3.0, 29829.0], [4.0, 29201.0], [5.0, 28667.0], [6.0, 28227.0], [7.0, 27566.0], [8.0, 25965.0], [9.0, 24403.0], [10.0, 21551.0], [11.0, 15592.0], [12.0, 10737.0], [200.0, 30816.0], [13.0, 9733.0], [14.0, 8792.0], [15.0, 5528.0], [16.0, 5109.0], [1.0, 30400.0], [17.0, 4671.0], [18.0, 4528.0], [19.0, 4212.0], [20.0, 2077.0], [21.0, 1937.5], [22.0, 1887.5], [23.0, 1769.0], [24.0, 1683.5], [25.0, 1651.5], [26.0, 1538.0], [27.0, 1486.0], [28.0, 1451.0], [29.0, 1433.0], [30.0, 1368.0], [31.0, 1329.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 30014.0], [9.0, 30015.0], [10.0, 30017.0], [11.0, 30019.5], [12.0, 30025.0], [3.0, 30031.0], [200.0, 15579.0], [13.0, 30015.0], [14.0, 30016.5], [4.0, 30015.0], [1.0, 30102.0], [5.0, 30007.0], [20.0, 30913.5], [6.0, 30015.0], [7.0, 30014.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 200.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 30913.5, "series": [{"data": [[33.0, 1159.0], [32.0, 1245.5], [2.0, 29309.0], [35.0, 937.0], [34.0, 1214.5], [37.0, 128.0], [36.0, 271.0], [38.0, 54.5], [39.0, 69.0], [41.0, 69.0], [40.0, 67.0], [42.0, 58.5], [43.0, 79.0], [44.0, 36.0], [45.0, 64.0], [46.0, 52.0], [48.0, 43.5], [3.0, 29827.0], [4.0, 29199.5], [5.0, 28667.0], [6.0, 28224.0], [7.0, 27565.0], [8.0, 25962.0], [9.0, 24402.0], [10.0, 21550.0], [11.0, 15589.0], [12.0, 10735.0], [200.0, 30814.0], [13.0, 9730.0], [14.0, 8791.0], [15.0, 5526.0], [16.0, 5108.0], [1.0, 30398.0], [17.0, 4669.5], [18.0, 4527.0], [19.0, 4210.0], [20.0, 2076.0], [21.0, 1936.0], [22.0, 1887.0], [23.0, 1767.0], [24.0, 1682.0], [25.0, 1650.0], [26.0, 1537.0], [27.0, 1485.0], [28.0, 1449.5], [29.0, 1432.0], [30.0, 1366.5], [31.0, 1329.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[8.0, 30014.0], [9.0, 30014.5], [10.0, 30017.0], [11.0, 30018.5], [12.0, 30025.0], [3.0, 30031.0], [200.0, 0.0], [13.0, 30015.0], [14.0, 30015.5], [4.0, 30014.5], [1.0, 30101.0], [5.0, 30007.0], [20.0, 30913.5], [6.0, 30014.0], [7.0, 30014.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 200.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 2.65, "minX": 1.69976814E12, "maxY": 39.6, "series": [{"data": [[1.6997715E12, 8.883333333333333], [1.69977372E12, 6.75], [1.69976826E12, 39.6], [1.69977048E12, 10.516666666666667], [1.69976946E12, 13.866666666666667], [1.6997727E12, 7.75], [1.69977168E12, 8.883333333333333], [1.6997739E12, 6.683333333333334], [1.69977066E12, 10.2], [1.69976844E12, 29.066666666666666], [1.69977288E12, 7.466666666666667], [1.69976964E12, 13.15], [1.69977186E12, 8.383333333333333], [1.69977408E12, 6.666666666666667], [1.69977438E12, 6.533333333333333], [1.69976892E12, 18.333333333333332], [1.69977114E12, 9.483333333333333], [1.69977336E12, 7.15], [1.69977012E12, 11.233333333333333], [1.69977234E12, 7.9], [1.69977456E12, 6.566666666666666], [1.69977132E12, 9.0], [1.6997691E12, 16.516666666666666], [1.69977354E12, 6.966666666666667], [1.69977252E12, 7.783333333333333], [1.69976928E12, 14.95], [1.6997703E12, 11.533333333333333], [1.69977342E12, 7.016666666666667], [1.69977018E12, 11.283333333333333], [1.6997724E12, 7.883333333333334], [1.69977462E12, 2.65], [1.69976916E12, 15.866666666666667], [1.69977138E12, 9.15], [1.6997736E12, 7.0], [1.69976814E12, 23.016666666666666], [1.69977036E12, 10.783333333333333], [1.69977258E12, 7.683333333333334], [1.69977156E12, 8.733333333333333], [1.69976832E12, 37.4], [1.69976934E12, 14.533333333333333], [1.69977378E12, 6.85], [1.69976862E12, 22.916666666666668], [1.69977084E12, 9.95], [1.69977306E12, 7.283333333333333], [1.69977204E12, 8.166666666666666], [1.6997688E12, 19.9], [1.69976982E12, 12.433333333333334], [1.69977426E12, 6.633333333333334], [1.69977E12, 11.816666666666666], [1.69977324E12, 7.166666666666667], [1.69977102E12, 10.25], [1.69976898E12, 17.75], [1.69977222E12, 7.983333333333333], [1.69977444E12, 6.483333333333333], [1.6997712E12, 9.2], [1.69976988E12, 12.05], [1.6997721E12, 8.216666666666667], [1.69977432E12, 6.65], [1.69977108E12, 9.35], [1.6997733E12, 7.183333333333334], [1.69976886E12, 19.783333333333335], [1.69977228E12, 7.95], [1.69976904E12, 17.016666666666666], [1.69977006E12, 11.633333333333333], [1.6997745E12, 6.483333333333333], [1.69977126E12, 9.266666666666667], [1.69977348E12, 7.15], [1.69977024E12, 11.133333333333333], [1.69977276E12, 7.45], [1.69976952E12, 13.616666666666667], [1.69977054E12, 10.45], [1.69977174E12, 8.533333333333333], [1.69977396E12, 6.683333333333334], [1.6997685E12, 26.766666666666666], [1.69977072E12, 9.6], [1.6997697E12, 12.916666666666666], [1.69977294E12, 7.45], [1.69977192E12, 8.1], [1.69977414E12, 6.583333333333333], [1.6997709E12, 9.9], [1.69976868E12, 21.95], [1.69977312E12, 7.2], [1.6997718E12, 8.4], [1.69976856E12, 24.933333333333334], [1.69976958E12, 13.816666666666666], [1.69977402E12, 6.716666666666667], [1.699773E12, 7.45], [1.69976976E12, 12.683333333333334], [1.69977078E12, 9.95], [1.69977198E12, 8.05], [1.6997742E12, 6.583333333333333], [1.69976874E12, 20.85], [1.69977096E12, 9.65], [1.69976994E12, 11.95], [1.69977318E12, 7.133333333333334], [1.69977216E12, 8.116666666666667], [1.69976922E12, 15.45], [1.69977246E12, 7.9], [1.69977144E12, 8.8], [1.69977366E12, 6.766666666666667], [1.69977042E12, 10.683333333333334], [1.6997682E12, 39.46666666666667], [1.69977264E12, 7.65], [1.6997694E12, 14.25], [1.69977162E12, 8.783333333333333], [1.69977384E12, 6.85], [1.69976838E12, 31.3], [1.6997706E12, 10.35], [1.69977282E12, 7.45]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69977462E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69976814E12, "maxY": 39.53333333333333, "series": [{"data": [[1.6997715E12, 8.833333333333334], [1.69977372E12, 6.683333333333334], [1.69976826E12, 39.53333333333333], [1.69977048E12, 10.516666666666667], [1.69976946E12, 13.85], [1.6997727E12, 7.633333333333334], [1.69977168E12, 8.633333333333333], [1.6997739E12, 6.616666666666666], [1.69977066E12, 10.2], [1.69976844E12, 29.066666666666666], [1.69977288E12, 7.25], [1.69976964E12, 13.15], [1.69977186E12, 8.283333333333333], [1.69977408E12, 6.616666666666666], [1.69977438E12, 6.4], [1.69976892E12, 18.333333333333332], [1.69977114E12, 9.4], [1.69977336E12, 7.066666666666666], [1.69977012E12, 11.233333333333333], [1.69977234E12, 7.866666666666666], [1.69977456E12, 6.383333333333334], [1.69977132E12, 8.916666666666666], [1.6997691E12, 16.516666666666666], [1.69977354E12, 6.916666666666667], [1.69977252E12, 7.75], [1.69976928E12, 14.95], [1.6997703E12, 10.866666666666667], [1.69977342E12, 6.883333333333334], [1.69977018E12, 11.283333333333333], [1.6997724E12, 7.833333333333333], [1.69977462E12, 2.6166666666666667], [1.69976916E12, 15.866666666666667], [1.69977138E12, 9.0], [1.6997736E12, 6.916666666666667], [1.69976814E12, 23.0], [1.69977036E12, 10.783333333333333], [1.69977258E12, 7.65], [1.69977156E12, 8.6], [1.69976832E12, 36.85], [1.69976934E12, 14.533333333333333], [1.69977378E12, 6.816666666666666], [1.69976862E12, 22.916666666666668], [1.69977084E12, 9.883333333333333], [1.69977306E12, 7.183333333333334], [1.69977204E12, 8.1], [1.6997688E12, 19.9], [1.69976982E12, 12.45], [1.69977426E12, 6.5], [1.69977E12, 11.816666666666666], [1.69977324E12, 7.116666666666666], [1.69977102E12, 9.483333333333333], [1.69976898E12, 17.75], [1.69977222E12, 7.933333333333334], [1.69977444E12, 6.4], [1.6997712E12, 9.166666666666666], [1.69976988E12, 12.033333333333333], [1.6997721E12, 8.2], [1.69977432E12, 6.133333333333334], [1.69977108E12, 9.316666666666666], [1.6997733E12, 7.116666666666666], [1.69976886E12, 19.116666666666667], [1.69977228E12, 7.833333333333333], [1.69976904E12, 17.016666666666666], [1.69977006E12, 11.633333333333333], [1.6997745E12, 6.333333333333333], [1.69977126E12, 9.183333333333334], [1.69977348E12, 6.966666666666667], [1.69977024E12, 11.133333333333333], [1.69977276E12, 7.4], [1.69976952E12, 13.616666666666667], [1.69977054E12, 10.45], [1.69977174E12, 8.45], [1.69977396E12, 6.633333333333334], [1.6997685E12, 26.766666666666666], [1.69977072E12, 9.583333333333334], [1.6997697E12, 12.916666666666666], [1.69977294E12, 7.233333333333333], [1.69977192E12, 8.05], [1.69977414E12, 6.566666666666666], [1.6997709E12, 9.683333333333334], [1.69976868E12, 21.95], [1.69977312E12, 7.083333333333333], [1.6997718E12, 8.233333333333333], [1.69976856E12, 24.933333333333334], [1.69976958E12, 13.15], [1.69977402E12, 6.666666666666667], [1.699773E12, 7.333333333333333], [1.69976976E12, 12.683333333333334], [1.69977078E12, 9.916666666666666], [1.69977198E12, 7.916666666666667], [1.6997742E12, 6.466666666666667], [1.69976874E12, 20.85], [1.69977096E12, 9.6], [1.69976994E12, 11.95], [1.69977318E12, 7.083333333333333], [1.69977216E12, 8.05], [1.69976922E12, 15.45], [1.69977246E12, 7.783333333333333], [1.69977144E12, 8.766666666666667], [1.69977366E12, 6.683333333333334], [1.69977042E12, 10.683333333333334], [1.6997682E12, 39.43333333333333], [1.69977264E12, 7.55], [1.6997694E12, 14.266666666666667], [1.69977162E12, 8.65], [1.69977384E12, 6.8], [1.69976838E12, 31.3], [1.6997706E12, 10.35], [1.69977282E12, 7.4]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.6997715E12, 0.05], [1.69977372E12, 0.06666666666666667], [1.6997721E12, 0.016666666666666666], [1.69977432E12, 0.5166666666666667], [1.69977108E12, 0.03333333333333333], [1.6997727E12, 0.11666666666666667], [1.69977168E12, 0.25], [1.6997733E12, 0.06666666666666667], [1.6997739E12, 0.06666666666666667], [1.69977228E12, 0.11666666666666667], [1.69977288E12, 0.21666666666666667], [1.6997745E12, 0.15], [1.69977126E12, 0.08333333333333333], [1.69977348E12, 0.18333333333333332], [1.69977186E12, 0.1], [1.69977408E12, 0.05], [1.69977276E12, 0.05], [1.69977438E12, 0.13333333333333333], [1.69977114E12, 0.08333333333333333], [1.69977336E12, 0.08333333333333333], [1.69977174E12, 0.08333333333333333], [1.69977396E12, 0.05], [1.69977072E12, 0.016666666666666666], [1.69977234E12, 0.03333333333333333], [1.69977456E12, 0.18333333333333332], [1.69977132E12, 0.08333333333333333], [1.69977294E12, 0.21666666666666667], [1.69977192E12, 0.05], [1.69977354E12, 0.05], [1.69977414E12, 0.016666666666666666], [1.6997709E12, 0.21666666666666667], [1.69977252E12, 0.03333333333333333], [1.69977312E12, 0.11666666666666667], [1.6997718E12, 0.16666666666666666], [1.69977342E12, 0.13333333333333333], [1.69977402E12, 0.05], [1.6997724E12, 0.06666666666666667], [1.699773E12, 0.11666666666666667], [1.69977462E12, 0.05], [1.69977078E12, 0.03333333333333333], [1.69977138E12, 0.15], [1.6997736E12, 0.08333333333333333], [1.69977198E12, 0.13333333333333333], [1.6997742E12, 0.11666666666666667], [1.69977096E12, 0.05], [1.69977258E12, 0.03333333333333333], [1.69977156E12, 0.13333333333333333], [1.69977318E12, 0.05], [1.69977378E12, 0.03333333333333333], [1.69977216E12, 0.06666666666666667], [1.69977246E12, 0.1], [1.69977144E12, 0.03333333333333333], [1.69977084E12, 0.06666666666666667], [1.69977306E12, 0.1], [1.69977204E12, 0.06666666666666667], [1.69977366E12, 0.08333333333333333], [1.69977264E12, 0.1], [1.69977426E12, 0.13333333333333333], [1.69977324E12, 0.05], [1.69977102E12, 0.1], [1.69977162E12, 0.13333333333333333], [1.69977384E12, 0.05], [1.69977222E12, 0.05], [1.69977444E12, 0.08333333333333333], [1.6997712E12, 0.03333333333333333], [1.69977282E12, 0.05]], "isOverall": false, "label": "500", "isController": false}, {"data": [[1.69977462E12, 3.316666666666667]], "isOverall": false, "label": "Non HTTP response code: java.net.SocketException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.69977462E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69976814E12, "maxY": 39.53333333333333, "series": [{"data": [[1.6997715E12, 8.833333333333334], [1.69977372E12, 6.683333333333334], [1.69976826E12, 39.53333333333333], [1.69977048E12, 10.516666666666667], [1.69976946E12, 13.85], [1.6997727E12, 7.633333333333334], [1.69977168E12, 8.633333333333333], [1.6997739E12, 6.616666666666666], [1.69977066E12, 10.2], [1.69976844E12, 29.066666666666666], [1.69977288E12, 7.25], [1.69976964E12, 13.15], [1.69977186E12, 8.283333333333333], [1.69977408E12, 6.616666666666666], [1.69977438E12, 6.4], [1.69976892E12, 18.333333333333332], [1.69977114E12, 9.4], [1.69977336E12, 7.066666666666666], [1.69977012E12, 11.233333333333333], [1.69977234E12, 7.866666666666666], [1.69977456E12, 6.383333333333334], [1.69977132E12, 8.916666666666666], [1.6997691E12, 16.516666666666666], [1.69977354E12, 6.916666666666667], [1.69977252E12, 7.75], [1.69976928E12, 14.95], [1.6997703E12, 10.866666666666667], [1.69977342E12, 6.883333333333334], [1.69977018E12, 11.283333333333333], [1.6997724E12, 7.833333333333333], [1.69977462E12, 2.6166666666666667], [1.69976916E12, 15.866666666666667], [1.69977138E12, 9.0], [1.6997736E12, 6.916666666666667], [1.69976814E12, 23.0], [1.69977036E12, 10.783333333333333], [1.69977258E12, 7.65], [1.69977156E12, 8.6], [1.69976832E12, 36.85], [1.69976934E12, 14.533333333333333], [1.69977378E12, 6.816666666666666], [1.69976862E12, 22.916666666666668], [1.69977084E12, 9.883333333333333], [1.69977306E12, 7.183333333333334], [1.69977204E12, 8.1], [1.6997688E12, 19.9], [1.69976982E12, 12.45], [1.69977426E12, 6.5], [1.69977E12, 11.816666666666666], [1.69977324E12, 7.116666666666666], [1.69977102E12, 9.483333333333333], [1.69976898E12, 17.75], [1.69977222E12, 7.933333333333334], [1.69977444E12, 6.4], [1.6997712E12, 9.166666666666666], [1.69976988E12, 12.033333333333333], [1.6997721E12, 8.2], [1.69977432E12, 6.133333333333334], [1.69977108E12, 9.316666666666666], [1.6997733E12, 7.116666666666666], [1.69976886E12, 19.116666666666667], [1.69977228E12, 7.833333333333333], [1.69976904E12, 17.016666666666666], [1.69977006E12, 11.633333333333333], [1.6997745E12, 6.333333333333333], [1.69977126E12, 9.183333333333334], [1.69977348E12, 6.966666666666667], [1.69977024E12, 11.133333333333333], [1.69977276E12, 7.4], [1.69976952E12, 13.616666666666667], [1.69977054E12, 10.45], [1.69977174E12, 8.45], [1.69977396E12, 6.633333333333334], [1.6997685E12, 26.766666666666666], [1.69977072E12, 9.583333333333334], [1.6997697E12, 12.916666666666666], [1.69977294E12, 7.233333333333333], [1.69977192E12, 8.05], [1.69977414E12, 6.566666666666666], [1.6997709E12, 9.683333333333334], [1.69976868E12, 21.95], [1.69977312E12, 7.083333333333333], [1.6997718E12, 8.233333333333333], [1.69976856E12, 24.933333333333334], [1.69976958E12, 13.15], [1.69977402E12, 6.666666666666667], [1.699773E12, 7.333333333333333], [1.69976976E12, 12.683333333333334], [1.69977078E12, 9.916666666666666], [1.69977198E12, 7.916666666666667], [1.6997742E12, 6.466666666666667], [1.69976874E12, 20.85], [1.69977096E12, 9.6], [1.69976994E12, 11.95], [1.69977318E12, 7.083333333333333], [1.69977216E12, 8.05], [1.69976922E12, 15.45], [1.69977246E12, 7.783333333333333], [1.69977144E12, 8.766666666666667], [1.69977366E12, 6.683333333333334], [1.69977042E12, 10.683333333333334], [1.6997682E12, 39.43333333333333], [1.69977264E12, 7.55], [1.6997694E12, 14.266666666666667], [1.69977162E12, 8.65], [1.69977384E12, 6.8], [1.69976838E12, 31.3], [1.6997706E12, 10.35], [1.69977282E12, 7.4]], "isOverall": false, "label": "HTTP Request-success", "isController": false}, {"data": [[1.6997715E12, 0.05], [1.69977372E12, 0.06666666666666667], [1.6997721E12, 0.016666666666666666], [1.69977432E12, 0.5166666666666667], [1.69977108E12, 0.03333333333333333], [1.6997727E12, 0.11666666666666667], [1.69977168E12, 0.25], [1.6997733E12, 0.06666666666666667], [1.6997739E12, 0.06666666666666667], [1.69977228E12, 0.11666666666666667], [1.69977288E12, 0.21666666666666667], [1.6997745E12, 0.15], [1.69977126E12, 0.08333333333333333], [1.69977348E12, 0.18333333333333332], [1.69977186E12, 0.1], [1.69977408E12, 0.05], [1.69977276E12, 0.05], [1.69977438E12, 0.13333333333333333], [1.69977114E12, 0.08333333333333333], [1.69977336E12, 0.08333333333333333], [1.69977174E12, 0.08333333333333333], [1.69977396E12, 0.05], [1.69977072E12, 0.016666666666666666], [1.69977234E12, 0.03333333333333333], [1.69977456E12, 0.18333333333333332], [1.69977132E12, 0.08333333333333333], [1.69977294E12, 0.21666666666666667], [1.69977192E12, 0.05], [1.69977354E12, 0.05], [1.69977414E12, 0.016666666666666666], [1.6997709E12, 0.21666666666666667], [1.69977252E12, 0.03333333333333333], [1.69977312E12, 0.11666666666666667], [1.6997718E12, 0.16666666666666666], [1.69977342E12, 0.13333333333333333], [1.69977402E12, 0.05], [1.6997724E12, 0.06666666666666667], [1.699773E12, 0.11666666666666667], [1.69977462E12, 3.3666666666666667], [1.69977078E12, 0.03333333333333333], [1.69977138E12, 0.15], [1.6997736E12, 0.08333333333333333], [1.69977198E12, 0.13333333333333333], [1.6997742E12, 0.11666666666666667], [1.69977096E12, 0.05], [1.69977258E12, 0.03333333333333333], [1.69977156E12, 0.13333333333333333], [1.69977318E12, 0.05], [1.69977378E12, 0.03333333333333333], [1.69977216E12, 0.06666666666666667], [1.69977246E12, 0.1], [1.69977144E12, 0.03333333333333333], [1.69977084E12, 0.06666666666666667], [1.69977306E12, 0.1], [1.69977204E12, 0.06666666666666667], [1.69977366E12, 0.08333333333333333], [1.69977264E12, 0.1], [1.69977426E12, 0.13333333333333333], [1.69977324E12, 0.05], [1.69977102E12, 0.1], [1.69977162E12, 0.13333333333333333], [1.69977384E12, 0.05], [1.69977222E12, 0.05], [1.69977444E12, 0.08333333333333333], [1.6997712E12, 0.03333333333333333], [1.69977282E12, 0.05]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69977462E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.69976814E12, "maxY": 39.53333333333333, "series": [{"data": [[1.6997715E12, 8.833333333333334], [1.69977372E12, 6.683333333333334], [1.69976826E12, 39.53333333333333], [1.69977048E12, 10.516666666666667], [1.69976946E12, 13.85], [1.6997727E12, 7.633333333333334], [1.69977168E12, 8.633333333333333], [1.6997739E12, 6.616666666666666], [1.69977066E12, 10.2], [1.69976844E12, 29.066666666666666], [1.69977288E12, 7.25], [1.69976964E12, 13.15], [1.69977186E12, 8.283333333333333], [1.69977408E12, 6.616666666666666], [1.69977438E12, 6.4], [1.69976892E12, 18.333333333333332], [1.69977114E12, 9.4], [1.69977336E12, 7.066666666666666], [1.69977012E12, 11.233333333333333], [1.69977234E12, 7.866666666666666], [1.69977456E12, 6.383333333333334], [1.69977132E12, 8.916666666666666], [1.6997691E12, 16.516666666666666], [1.69977354E12, 6.916666666666667], [1.69977252E12, 7.75], [1.69976928E12, 14.95], [1.6997703E12, 10.866666666666667], [1.69977342E12, 6.883333333333334], [1.69977018E12, 11.283333333333333], [1.6997724E12, 7.833333333333333], [1.69977462E12, 2.6166666666666667], [1.69976916E12, 15.866666666666667], [1.69977138E12, 9.0], [1.6997736E12, 6.916666666666667], [1.69976814E12, 23.0], [1.69977036E12, 10.783333333333333], [1.69977258E12, 7.65], [1.69977156E12, 8.6], [1.69976832E12, 36.85], [1.69976934E12, 14.533333333333333], [1.69977378E12, 6.816666666666666], [1.69976862E12, 22.916666666666668], [1.69977084E12, 9.883333333333333], [1.69977306E12, 7.183333333333334], [1.69977204E12, 8.1], [1.6997688E12, 19.9], [1.69976982E12, 12.45], [1.69977426E12, 6.5], [1.69977E12, 11.816666666666666], [1.69977324E12, 7.116666666666666], [1.69977102E12, 9.483333333333333], [1.69976898E12, 17.75], [1.69977222E12, 7.933333333333334], [1.69977444E12, 6.4], [1.6997712E12, 9.166666666666666], [1.69976988E12, 12.033333333333333], [1.6997721E12, 8.2], [1.69977432E12, 6.133333333333334], [1.69977108E12, 9.316666666666666], [1.6997733E12, 7.116666666666666], [1.69976886E12, 19.116666666666667], [1.69977228E12, 7.833333333333333], [1.69976904E12, 17.016666666666666], [1.69977006E12, 11.633333333333333], [1.6997745E12, 6.333333333333333], [1.69977126E12, 9.183333333333334], [1.69977348E12, 6.966666666666667], [1.69977024E12, 11.133333333333333], [1.69977276E12, 7.4], [1.69976952E12, 13.616666666666667], [1.69977054E12, 10.45], [1.69977174E12, 8.45], [1.69977396E12, 6.633333333333334], [1.6997685E12, 26.766666666666666], [1.69977072E12, 9.583333333333334], [1.6997697E12, 12.916666666666666], [1.69977294E12, 7.233333333333333], [1.69977192E12, 8.05], [1.69977414E12, 6.566666666666666], [1.6997709E12, 9.683333333333334], [1.69976868E12, 21.95], [1.69977312E12, 7.083333333333333], [1.6997718E12, 8.233333333333333], [1.69976856E12, 24.933333333333334], [1.69976958E12, 13.15], [1.69977402E12, 6.666666666666667], [1.699773E12, 7.333333333333333], [1.69976976E12, 12.683333333333334], [1.69977078E12, 9.916666666666666], [1.69977198E12, 7.916666666666667], [1.6997742E12, 6.466666666666667], [1.69976874E12, 20.85], [1.69977096E12, 9.6], [1.69976994E12, 11.95], [1.69977318E12, 7.083333333333333], [1.69977216E12, 8.05], [1.69976922E12, 15.45], [1.69977246E12, 7.783333333333333], [1.69977144E12, 8.766666666666667], [1.69977366E12, 6.683333333333334], [1.69977042E12, 10.683333333333334], [1.6997682E12, 39.43333333333333], [1.69977264E12, 7.55], [1.6997694E12, 14.266666666666667], [1.69977162E12, 8.65], [1.69977384E12, 6.8], [1.69976838E12, 31.3], [1.6997706E12, 10.35], [1.69977282E12, 7.4]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.6997715E12, 0.05], [1.69977372E12, 0.06666666666666667], [1.6997721E12, 0.016666666666666666], [1.69977432E12, 0.5166666666666667], [1.69977108E12, 0.03333333333333333], [1.6997727E12, 0.11666666666666667], [1.69977168E12, 0.25], [1.6997733E12, 0.06666666666666667], [1.6997739E12, 0.06666666666666667], [1.69977228E12, 0.11666666666666667], [1.69977288E12, 0.21666666666666667], [1.6997745E12, 0.15], [1.69977126E12, 0.08333333333333333], [1.69977348E12, 0.18333333333333332], [1.69977186E12, 0.1], [1.69977408E12, 0.05], [1.69977276E12, 0.05], [1.69977438E12, 0.13333333333333333], [1.69977114E12, 0.08333333333333333], [1.69977336E12, 0.08333333333333333], [1.69977174E12, 0.08333333333333333], [1.69977396E12, 0.05], [1.69977072E12, 0.016666666666666666], [1.69977234E12, 0.03333333333333333], [1.69977456E12, 0.18333333333333332], [1.69977132E12, 0.08333333333333333], [1.69977294E12, 0.21666666666666667], [1.69977192E12, 0.05], [1.69977354E12, 0.05], [1.69977414E12, 0.016666666666666666], [1.6997709E12, 0.21666666666666667], [1.69977252E12, 0.03333333333333333], [1.69977312E12, 0.11666666666666667], [1.6997718E12, 0.16666666666666666], [1.69977342E12, 0.13333333333333333], [1.69977402E12, 0.05], [1.6997724E12, 0.06666666666666667], [1.699773E12, 0.11666666666666667], [1.69977462E12, 3.3666666666666667], [1.69977078E12, 0.03333333333333333], [1.69977138E12, 0.15], [1.6997736E12, 0.08333333333333333], [1.69977198E12, 0.13333333333333333], [1.6997742E12, 0.11666666666666667], [1.69977096E12, 0.05], [1.69977258E12, 0.03333333333333333], [1.69977156E12, 0.13333333333333333], [1.69977318E12, 0.05], [1.69977378E12, 0.03333333333333333], [1.69977216E12, 0.06666666666666667], [1.69977246E12, 0.1], [1.69977144E12, 0.03333333333333333], [1.69977084E12, 0.06666666666666667], [1.69977306E12, 0.1], [1.69977204E12, 0.06666666666666667], [1.69977366E12, 0.08333333333333333], [1.69977264E12, 0.1], [1.69977426E12, 0.13333333333333333], [1.69977324E12, 0.05], [1.69977102E12, 0.1], [1.69977162E12, 0.13333333333333333], [1.69977384E12, 0.05], [1.69977222E12, 0.05], [1.69977444E12, 0.08333333333333333], [1.6997712E12, 0.03333333333333333], [1.69977282E12, 0.05]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.69977462E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 0);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

